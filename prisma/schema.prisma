// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int    @id @default(autoincrement())
  name          String
  surname       String
  phone         String   @unique
  password      String?
  avatar        String?
  balance       Float   @default(0)
  currency_id   Int     @default(1)
  is_active     Boolean  @default(false)
  refresh_token String?

  currency Currency? @relation("UserPreferredCurrency", fields: [currency_id], references: [id])

  emails            Email[]
  additional_phones Phone[]         @relation("UserAdditionalPhones")
  favourite_items   FavouriteItem[]
  addresses         Address[]
  products          Product[]
  comments          Comment[]
  payments          Payment[]
  blocks            Block[]
  otps             Otp[]
}

model Otp {
  id         Int      @id @default(autoincrement())
  user_id    Int
  uuid       String   @unique
  otp        String
  expire     DateTime
  created_at DateTime @default(now())

  user User @relation(fields: [user_id], references: [id])
}

model Phone {
  id      Int @id @default(autoincrement())
  phone   String
  user_id Int

  user     User      @relation("UserAdditionalPhones", fields: [user_id], references: [id])
  products Product[]
}

model Email {
  id      Int @id @default(autoincrement())
  email   String @unique
  user_id Int

  user User @relation(fields: [user_id], references: [id])
}

model Address {
  id            Int  @id @default(autoincrement())
  name          String
  address       String
  lat           String
  long          String
  user_id       Int
  is_active     Boolean

  user     User      @relation(fields: [user_id], references: [id])
  products Product[]
}

model FavouriteItem {
  id         Int @id @default(autoincrement())
  product_id Int
  user_id    Int

  product Product @relation(fields: [product_id], references: [id])
  user    User    @relation(fields: [user_id], references: [id])

  @@unique([user_id, product_id])
}

model Product {
  id              Int    @id @default(autoincrement())
  user_id         Int
  title           String
  description     String
  year            Int
  brand_id        Int?
  model_id        Int?
  custom_model    String?
  color_id        Int
  price           Float
  floor_price     Boolean   @default(true)
  currency_id     Int    @default(1)
  is_new          Boolean
  has_document    Boolean
  address_id      Int
  phone_id        Int
  storage         Int
  ram             Int
  views           Int    @default(0)
  is_archived     Boolean   @default(false)
  is_sold         Boolean   @default(false)
  is_checked      Boolean   @default(false)
  admin_id        Int?
  is_top          Boolean   @default(false)
  top_expire_date DateTime?

  user          User     @relation(fields: [user_id], references: [id])
  brand         Brand?   @relation(fields: [brand_id], references: [id])
  model         Model?   @relation(fields: [model_id], references: [id])
  color         Color    @relation(fields: [color_id], references: [id])
  currency      Currency @relation(fields: [currency_id], references: [id])
  address       Address  @relation(fields: [address_id], references: [id])
  contact_phone Phone    @relation(fields: [phone_id], references: [id])
  admin         Admin?   @relation(fields: [admin_id], references: [id])

  images        ProductImage[]
  favourited_by FavouriteItem[]
  comments      Comment[]
}

model ProductImage {
  id         Int  @id @default(autoincrement())
  url        String
  product_id Int
  is_main    Boolean @default(false)

  product Product @relation(fields: [product_id], references: [id])
}

model Brand {
  id   Int @id @default(autoincrement())
  name String @unique
  logo String

  models   Model[]
  products Product[]
}

model Model {
  id       Int @id @default(autoincrement())
  name     String
  brand_id Int

  brand    Brand     @relation(fields: [brand_id], references: [id])
  products Product[]

  @@unique([brand_id, name])
}

model Color {
  id   Int @id @default(autoincrement())
  name String @unique
  hex  String

  products Product[]
}

model Currency {
  id     Int @id @default(autoincrement())
  name   String @unique
  symbol String

  user_preferences User[]    @relation("UserPreferredCurrency")
  products         Product[]
}

model Admin {
  id            Int   @id @default(autoincrement())
  name          String
  surname       String
  birth_date    DateTime
  phone         String   @unique
  password      String
  avatar        String?
  refresh_token String?
  is_creator    Boolean  @default(false)

  blocks_issued    Block[]
  products_managed Product[]
}

model Block {
  id          Int   @id @default(autoincrement())
  user_id     Int
  admin_id    Int
  reason      String
  expire_date DateTime

  user  User  @relation(fields: [user_id], references: [id])
  admin Admin @relation(fields: [admin_id], references: [id])
}

model Payment {
  id                Int @id @default(autoincrement())
  user_id           Int
  amount            Float
  payment_method_id Int

  user           User          @relation(fields: [user_id], references: [id])
  payment_method PaymentMethod @relation(fields: [payment_method_id], references: [id])
}

model Comment {
  id         Int @id @default(autoincrement())
  user_id    Int
  product_id Int
  text       String

  user    User    @relation(fields: [user_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])
}

model PaymentMethod {
  id   Int @id @default(autoincrement())
  name String @unique

  payments Payment[]
}