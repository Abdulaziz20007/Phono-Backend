
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model OTP
 * 
 */
export type OTP = $Result.DefaultSelection<Prisma.$OTPPayload>
/**
 * Model Phone
 * 
 */
export type Phone = $Result.DefaultSelection<Prisma.$PhonePayload>
/**
 * Model Email
 * 
 */
export type Email = $Result.DefaultSelection<Prisma.$EmailPayload>
/**
 * Model Address
 * 
 */
export type Address = $Result.DefaultSelection<Prisma.$AddressPayload>
/**
 * Model Language
 * 
 */
export type Language = $Result.DefaultSelection<Prisma.$LanguagePayload>
/**
 * Model FavouriteItem
 * 
 */
export type FavouriteItem = $Result.DefaultSelection<Prisma.$FavouriteItemPayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model ProductImage
 * 
 */
export type ProductImage = $Result.DefaultSelection<Prisma.$ProductImagePayload>
/**
 * Model Brand
 * 
 */
export type Brand = $Result.DefaultSelection<Prisma.$BrandPayload>
/**
 * Model Model
 * 
 */
export type Model = $Result.DefaultSelection<Prisma.$ModelPayload>
/**
 * Model Color
 * 
 */
export type Color = $Result.DefaultSelection<Prisma.$ColorPayload>
/**
 * Model Currency
 * 
 */
export type Currency = $Result.DefaultSelection<Prisma.$CurrencyPayload>
/**
 * Model Admin
 * 
 */
export type Admin = $Result.DefaultSelection<Prisma.$AdminPayload>
/**
 * Model Block
 * 
 */
export type Block = $Result.DefaultSelection<Prisma.$BlockPayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model Comment
 * 
 */
export type Comment = $Result.DefaultSelection<Prisma.$CommentPayload>
/**
 * Model PaymentMethod
 * 
 */
export type PaymentMethod = $Result.DefaultSelection<Prisma.$PaymentMethodPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.oTP`: Exposes CRUD operations for the **OTP** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OTPS
    * const oTPS = await prisma.oTP.findMany()
    * ```
    */
  get oTP(): Prisma.OTPDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.phone`: Exposes CRUD operations for the **Phone** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Phones
    * const phones = await prisma.phone.findMany()
    * ```
    */
  get phone(): Prisma.PhoneDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.email`: Exposes CRUD operations for the **Email** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Emails
    * const emails = await prisma.email.findMany()
    * ```
    */
  get email(): Prisma.EmailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.address`: Exposes CRUD operations for the **Address** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Addresses
    * const addresses = await prisma.address.findMany()
    * ```
    */
  get address(): Prisma.AddressDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.language`: Exposes CRUD operations for the **Language** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Languages
    * const languages = await prisma.language.findMany()
    * ```
    */
  get language(): Prisma.LanguageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.favouriteItem`: Exposes CRUD operations for the **FavouriteItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FavouriteItems
    * const favouriteItems = await prisma.favouriteItem.findMany()
    * ```
    */
  get favouriteItem(): Prisma.FavouriteItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productImage`: Exposes CRUD operations for the **ProductImage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductImages
    * const productImages = await prisma.productImage.findMany()
    * ```
    */
  get productImage(): Prisma.ProductImageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.brand`: Exposes CRUD operations for the **Brand** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Brands
    * const brands = await prisma.brand.findMany()
    * ```
    */
  get brand(): Prisma.BrandDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.model`: Exposes CRUD operations for the **Model** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Models
    * const models = await prisma.model.findMany()
    * ```
    */
  get model(): Prisma.ModelDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.color`: Exposes CRUD operations for the **Color** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Colors
    * const colors = await prisma.color.findMany()
    * ```
    */
  get color(): Prisma.ColorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.currency`: Exposes CRUD operations for the **Currency** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Currencies
    * const currencies = await prisma.currency.findMany()
    * ```
    */
  get currency(): Prisma.CurrencyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.admin`: Exposes CRUD operations for the **Admin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admins
    * const admins = await prisma.admin.findMany()
    * ```
    */
  get admin(): Prisma.AdminDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.block`: Exposes CRUD operations for the **Block** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Blocks
    * const blocks = await prisma.block.findMany()
    * ```
    */
  get block(): Prisma.BlockDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comment`: Exposes CRUD operations for the **Comment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comments
    * const comments = await prisma.comment.findMany()
    * ```
    */
  get comment(): Prisma.CommentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.paymentMethod`: Exposes CRUD operations for the **PaymentMethod** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentMethods
    * const paymentMethods = await prisma.paymentMethod.findMany()
    * ```
    */
  get paymentMethod(): Prisma.PaymentMethodDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    OTP: 'OTP',
    Phone: 'Phone',
    Email: 'Email',
    Address: 'Address',
    Language: 'Language',
    FavouriteItem: 'FavouriteItem',
    Product: 'Product',
    ProductImage: 'ProductImage',
    Brand: 'Brand',
    Model: 'Model',
    Color: 'Color',
    Currency: 'Currency',
    Admin: 'Admin',
    Block: 'Block',
    Payment: 'Payment',
    Comment: 'Comment',
    PaymentMethod: 'PaymentMethod'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "oTP" | "phone" | "email" | "address" | "language" | "favouriteItem" | "product" | "productImage" | "brand" | "model" | "color" | "currency" | "admin" | "block" | "payment" | "comment" | "paymentMethod"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      OTP: {
        payload: Prisma.$OTPPayload<ExtArgs>
        fields: Prisma.OTPFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OTPFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OTPFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>
          }
          findFirst: {
            args: Prisma.OTPFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OTPFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>
          }
          findMany: {
            args: Prisma.OTPFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>[]
          }
          create: {
            args: Prisma.OTPCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>
          }
          createMany: {
            args: Prisma.OTPCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OTPCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>[]
          }
          delete: {
            args: Prisma.OTPDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>
          }
          update: {
            args: Prisma.OTPUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>
          }
          deleteMany: {
            args: Prisma.OTPDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OTPUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OTPUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>[]
          }
          upsert: {
            args: Prisma.OTPUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OTPPayload>
          }
          aggregate: {
            args: Prisma.OTPAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOTP>
          }
          groupBy: {
            args: Prisma.OTPGroupByArgs<ExtArgs>
            result: $Utils.Optional<OTPGroupByOutputType>[]
          }
          count: {
            args: Prisma.OTPCountArgs<ExtArgs>
            result: $Utils.Optional<OTPCountAggregateOutputType> | number
          }
        }
      }
      Phone: {
        payload: Prisma.$PhonePayload<ExtArgs>
        fields: Prisma.PhoneFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PhoneFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PhonePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PhoneFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PhonePayload>
          }
          findFirst: {
            args: Prisma.PhoneFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PhonePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PhoneFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PhonePayload>
          }
          findMany: {
            args: Prisma.PhoneFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PhonePayload>[]
          }
          create: {
            args: Prisma.PhoneCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PhonePayload>
          }
          createMany: {
            args: Prisma.PhoneCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PhoneCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PhonePayload>[]
          }
          delete: {
            args: Prisma.PhoneDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PhonePayload>
          }
          update: {
            args: Prisma.PhoneUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PhonePayload>
          }
          deleteMany: {
            args: Prisma.PhoneDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PhoneUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PhoneUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PhonePayload>[]
          }
          upsert: {
            args: Prisma.PhoneUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PhonePayload>
          }
          aggregate: {
            args: Prisma.PhoneAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePhone>
          }
          groupBy: {
            args: Prisma.PhoneGroupByArgs<ExtArgs>
            result: $Utils.Optional<PhoneGroupByOutputType>[]
          }
          count: {
            args: Prisma.PhoneCountArgs<ExtArgs>
            result: $Utils.Optional<PhoneCountAggregateOutputType> | number
          }
        }
      }
      Email: {
        payload: Prisma.$EmailPayload<ExtArgs>
        fields: Prisma.EmailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EmailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EmailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailPayload>
          }
          findFirst: {
            args: Prisma.EmailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EmailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailPayload>
          }
          findMany: {
            args: Prisma.EmailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailPayload>[]
          }
          create: {
            args: Prisma.EmailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailPayload>
          }
          createMany: {
            args: Prisma.EmailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EmailCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailPayload>[]
          }
          delete: {
            args: Prisma.EmailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailPayload>
          }
          update: {
            args: Prisma.EmailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailPayload>
          }
          deleteMany: {
            args: Prisma.EmailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EmailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EmailUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailPayload>[]
          }
          upsert: {
            args: Prisma.EmailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmailPayload>
          }
          aggregate: {
            args: Prisma.EmailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmail>
          }
          groupBy: {
            args: Prisma.EmailGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmailGroupByOutputType>[]
          }
          count: {
            args: Prisma.EmailCountArgs<ExtArgs>
            result: $Utils.Optional<EmailCountAggregateOutputType> | number
          }
        }
      }
      Address: {
        payload: Prisma.$AddressPayload<ExtArgs>
        fields: Prisma.AddressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AddressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AddressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          findFirst: {
            args: Prisma.AddressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AddressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          findMany: {
            args: Prisma.AddressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>[]
          }
          create: {
            args: Prisma.AddressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          createMany: {
            args: Prisma.AddressCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AddressCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>[]
          }
          delete: {
            args: Prisma.AddressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          update: {
            args: Prisma.AddressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          deleteMany: {
            args: Prisma.AddressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AddressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AddressUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>[]
          }
          upsert: {
            args: Prisma.AddressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          aggregate: {
            args: Prisma.AddressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAddress>
          }
          groupBy: {
            args: Prisma.AddressGroupByArgs<ExtArgs>
            result: $Utils.Optional<AddressGroupByOutputType>[]
          }
          count: {
            args: Prisma.AddressCountArgs<ExtArgs>
            result: $Utils.Optional<AddressCountAggregateOutputType> | number
          }
        }
      }
      Language: {
        payload: Prisma.$LanguagePayload<ExtArgs>
        fields: Prisma.LanguageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LanguageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LanguageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          findFirst: {
            args: Prisma.LanguageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LanguageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          findMany: {
            args: Prisma.LanguageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>[]
          }
          create: {
            args: Prisma.LanguageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          createMany: {
            args: Prisma.LanguageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LanguageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>[]
          }
          delete: {
            args: Prisma.LanguageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          update: {
            args: Prisma.LanguageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          deleteMany: {
            args: Prisma.LanguageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LanguageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LanguageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>[]
          }
          upsert: {
            args: Prisma.LanguageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          aggregate: {
            args: Prisma.LanguageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLanguage>
          }
          groupBy: {
            args: Prisma.LanguageGroupByArgs<ExtArgs>
            result: $Utils.Optional<LanguageGroupByOutputType>[]
          }
          count: {
            args: Prisma.LanguageCountArgs<ExtArgs>
            result: $Utils.Optional<LanguageCountAggregateOutputType> | number
          }
        }
      }
      FavouriteItem: {
        payload: Prisma.$FavouriteItemPayload<ExtArgs>
        fields: Prisma.FavouriteItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavouriteItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavouriteItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavouriteItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavouriteItemPayload>
          }
          findFirst: {
            args: Prisma.FavouriteItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavouriteItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavouriteItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavouriteItemPayload>
          }
          findMany: {
            args: Prisma.FavouriteItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavouriteItemPayload>[]
          }
          create: {
            args: Prisma.FavouriteItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavouriteItemPayload>
          }
          createMany: {
            args: Prisma.FavouriteItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FavouriteItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavouriteItemPayload>[]
          }
          delete: {
            args: Prisma.FavouriteItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavouriteItemPayload>
          }
          update: {
            args: Prisma.FavouriteItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavouriteItemPayload>
          }
          deleteMany: {
            args: Prisma.FavouriteItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavouriteItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FavouriteItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavouriteItemPayload>[]
          }
          upsert: {
            args: Prisma.FavouriteItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavouriteItemPayload>
          }
          aggregate: {
            args: Prisma.FavouriteItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavouriteItem>
          }
          groupBy: {
            args: Prisma.FavouriteItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavouriteItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavouriteItemCountArgs<ExtArgs>
            result: $Utils.Optional<FavouriteItemCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      ProductImage: {
        payload: Prisma.$ProductImagePayload<ExtArgs>
        fields: Prisma.ProductImageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductImageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductImageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          findFirst: {
            args: Prisma.ProductImageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductImageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          findMany: {
            args: Prisma.ProductImageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>[]
          }
          create: {
            args: Prisma.ProductImageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          createMany: {
            args: Prisma.ProductImageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductImageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>[]
          }
          delete: {
            args: Prisma.ProductImageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          update: {
            args: Prisma.ProductImageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          deleteMany: {
            args: Prisma.ProductImageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductImageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductImageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>[]
          }
          upsert: {
            args: Prisma.ProductImageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          aggregate: {
            args: Prisma.ProductImageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductImage>
          }
          groupBy: {
            args: Prisma.ProductImageGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductImageGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductImageCountArgs<ExtArgs>
            result: $Utils.Optional<ProductImageCountAggregateOutputType> | number
          }
        }
      }
      Brand: {
        payload: Prisma.$BrandPayload<ExtArgs>
        fields: Prisma.BrandFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BrandFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BrandFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          findFirst: {
            args: Prisma.BrandFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BrandFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          findMany: {
            args: Prisma.BrandFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>[]
          }
          create: {
            args: Prisma.BrandCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          createMany: {
            args: Prisma.BrandCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BrandCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>[]
          }
          delete: {
            args: Prisma.BrandDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          update: {
            args: Prisma.BrandUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          deleteMany: {
            args: Prisma.BrandDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BrandUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BrandUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>[]
          }
          upsert: {
            args: Prisma.BrandUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          aggregate: {
            args: Prisma.BrandAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBrand>
          }
          groupBy: {
            args: Prisma.BrandGroupByArgs<ExtArgs>
            result: $Utils.Optional<BrandGroupByOutputType>[]
          }
          count: {
            args: Prisma.BrandCountArgs<ExtArgs>
            result: $Utils.Optional<BrandCountAggregateOutputType> | number
          }
        }
      }
      Model: {
        payload: Prisma.$ModelPayload<ExtArgs>
        fields: Prisma.ModelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ModelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ModelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelPayload>
          }
          findFirst: {
            args: Prisma.ModelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ModelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelPayload>
          }
          findMany: {
            args: Prisma.ModelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelPayload>[]
          }
          create: {
            args: Prisma.ModelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelPayload>
          }
          createMany: {
            args: Prisma.ModelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ModelCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelPayload>[]
          }
          delete: {
            args: Prisma.ModelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelPayload>
          }
          update: {
            args: Prisma.ModelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelPayload>
          }
          deleteMany: {
            args: Prisma.ModelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ModelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ModelUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelPayload>[]
          }
          upsert: {
            args: Prisma.ModelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelPayload>
          }
          aggregate: {
            args: Prisma.ModelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModel>
          }
          groupBy: {
            args: Prisma.ModelGroupByArgs<ExtArgs>
            result: $Utils.Optional<ModelGroupByOutputType>[]
          }
          count: {
            args: Prisma.ModelCountArgs<ExtArgs>
            result: $Utils.Optional<ModelCountAggregateOutputType> | number
          }
        }
      }
      Color: {
        payload: Prisma.$ColorPayload<ExtArgs>
        fields: Prisma.ColorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ColorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ColorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>
          }
          findFirst: {
            args: Prisma.ColorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ColorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>
          }
          findMany: {
            args: Prisma.ColorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>[]
          }
          create: {
            args: Prisma.ColorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>
          }
          createMany: {
            args: Prisma.ColorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ColorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>[]
          }
          delete: {
            args: Prisma.ColorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>
          }
          update: {
            args: Prisma.ColorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>
          }
          deleteMany: {
            args: Prisma.ColorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ColorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ColorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>[]
          }
          upsert: {
            args: Prisma.ColorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColorPayload>
          }
          aggregate: {
            args: Prisma.ColorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateColor>
          }
          groupBy: {
            args: Prisma.ColorGroupByArgs<ExtArgs>
            result: $Utils.Optional<ColorGroupByOutputType>[]
          }
          count: {
            args: Prisma.ColorCountArgs<ExtArgs>
            result: $Utils.Optional<ColorCountAggregateOutputType> | number
          }
        }
      }
      Currency: {
        payload: Prisma.$CurrencyPayload<ExtArgs>
        fields: Prisma.CurrencyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CurrencyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CurrencyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyPayload>
          }
          findFirst: {
            args: Prisma.CurrencyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CurrencyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyPayload>
          }
          findMany: {
            args: Prisma.CurrencyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyPayload>[]
          }
          create: {
            args: Prisma.CurrencyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyPayload>
          }
          createMany: {
            args: Prisma.CurrencyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CurrencyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyPayload>[]
          }
          delete: {
            args: Prisma.CurrencyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyPayload>
          }
          update: {
            args: Prisma.CurrencyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyPayload>
          }
          deleteMany: {
            args: Prisma.CurrencyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CurrencyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CurrencyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyPayload>[]
          }
          upsert: {
            args: Prisma.CurrencyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CurrencyPayload>
          }
          aggregate: {
            args: Prisma.CurrencyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCurrency>
          }
          groupBy: {
            args: Prisma.CurrencyGroupByArgs<ExtArgs>
            result: $Utils.Optional<CurrencyGroupByOutputType>[]
          }
          count: {
            args: Prisma.CurrencyCountArgs<ExtArgs>
            result: $Utils.Optional<CurrencyCountAggregateOutputType> | number
          }
        }
      }
      Admin: {
        payload: Prisma.$AdminPayload<ExtArgs>
        fields: Prisma.AdminFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdminFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdminFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          findFirst: {
            args: Prisma.AdminFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdminFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          findMany: {
            args: Prisma.AdminFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          create: {
            args: Prisma.AdminCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          createMany: {
            args: Prisma.AdminCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdminCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          delete: {
            args: Prisma.AdminDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          update: {
            args: Prisma.AdminUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          deleteMany: {
            args: Prisma.AdminDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdminUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AdminUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          upsert: {
            args: Prisma.AdminUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          aggregate: {
            args: Prisma.AdminAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmin>
          }
          groupBy: {
            args: Prisma.AdminGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdminCountArgs<ExtArgs>
            result: $Utils.Optional<AdminCountAggregateOutputType> | number
          }
        }
      }
      Block: {
        payload: Prisma.$BlockPayload<ExtArgs>
        fields: Prisma.BlockFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BlockFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BlockFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockPayload>
          }
          findFirst: {
            args: Prisma.BlockFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BlockFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockPayload>
          }
          findMany: {
            args: Prisma.BlockFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockPayload>[]
          }
          create: {
            args: Prisma.BlockCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockPayload>
          }
          createMany: {
            args: Prisma.BlockCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BlockCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockPayload>[]
          }
          delete: {
            args: Prisma.BlockDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockPayload>
          }
          update: {
            args: Prisma.BlockUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockPayload>
          }
          deleteMany: {
            args: Prisma.BlockDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BlockUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BlockUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockPayload>[]
          }
          upsert: {
            args: Prisma.BlockUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockPayload>
          }
          aggregate: {
            args: Prisma.BlockAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBlock>
          }
          groupBy: {
            args: Prisma.BlockGroupByArgs<ExtArgs>
            result: $Utils.Optional<BlockGroupByOutputType>[]
          }
          count: {
            args: Prisma.BlockCountArgs<ExtArgs>
            result: $Utils.Optional<BlockCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      Comment: {
        payload: Prisma.$CommentPayload<ExtArgs>
        fields: Prisma.CommentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          findFirst: {
            args: Prisma.CommentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          findMany: {
            args: Prisma.CommentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          create: {
            args: Prisma.CommentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          createMany: {
            args: Prisma.CommentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CommentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          delete: {
            args: Prisma.CommentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          update: {
            args: Prisma.CommentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          deleteMany: {
            args: Prisma.CommentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CommentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          upsert: {
            args: Prisma.CommentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          aggregate: {
            args: Prisma.CommentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComment>
          }
          groupBy: {
            args: Prisma.CommentGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommentGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommentCountArgs<ExtArgs>
            result: $Utils.Optional<CommentCountAggregateOutputType> | number
          }
        }
      }
      PaymentMethod: {
        payload: Prisma.$PaymentMethodPayload<ExtArgs>
        fields: Prisma.PaymentMethodFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentMethodFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentMethodFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          findFirst: {
            args: Prisma.PaymentMethodFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentMethodFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          findMany: {
            args: Prisma.PaymentMethodFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>[]
          }
          create: {
            args: Prisma.PaymentMethodCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          createMany: {
            args: Prisma.PaymentMethodCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentMethodCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>[]
          }
          delete: {
            args: Prisma.PaymentMethodDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          update: {
            args: Prisma.PaymentMethodUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          deleteMany: {
            args: Prisma.PaymentMethodDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentMethodUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentMethodUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>[]
          }
          upsert: {
            args: Prisma.PaymentMethodUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          aggregate: {
            args: Prisma.PaymentMethodAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentMethod>
          }
          groupBy: {
            args: Prisma.PaymentMethodGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentMethodGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentMethodCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentMethodCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    oTP?: OTPOmit
    phone?: PhoneOmit
    email?: EmailOmit
    address?: AddressOmit
    language?: LanguageOmit
    favouriteItem?: FavouriteItemOmit
    product?: ProductOmit
    productImage?: ProductImageOmit
    brand?: BrandOmit
    model?: ModelOmit
    color?: ColorOmit
    currency?: CurrencyOmit
    admin?: AdminOmit
    block?: BlockOmit
    payment?: PaymentOmit
    comment?: CommentOmit
    paymentMethod?: PaymentMethodOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    emails: number
<<<<<<< HEAD
    additional_phones: number
    favourite_items: number
=======
    additionalPhones: number
    favouriteItems: number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses: number
    products: number
    comments: number
    payments: number
    blocks: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    emails?: boolean | UserCountOutputTypeCountEmailsArgs
<<<<<<< HEAD
    additional_phones?: boolean | UserCountOutputTypeCountAdditional_phonesArgs
    favourite_items?: boolean | UserCountOutputTypeCountFavourite_itemsArgs
=======
    additionalPhones?: boolean | UserCountOutputTypeCountAdditionalPhonesArgs
    favouriteItems?: boolean | UserCountOutputTypeCountFavouriteItemsArgs
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: boolean | UserCountOutputTypeCountAddressesArgs
    products?: boolean | UserCountOutputTypeCountProductsArgs
    comments?: boolean | UserCountOutputTypeCountCommentsArgs
    payments?: boolean | UserCountOutputTypeCountPaymentsArgs
    blocks?: boolean | UserCountOutputTypeCountBlocksArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountEmailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmailWhereInput
  }

  /**
   * UserCountOutputType without action
   */
<<<<<<< HEAD
  export type UserCountOutputTypeCountAdditional_phonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
=======
  export type UserCountOutputTypeCountAdditionalPhonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    where?: PhoneWhereInput
  }

  /**
   * UserCountOutputType without action
   */
<<<<<<< HEAD
  export type UserCountOutputTypeCountFavourite_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
=======
  export type UserCountOutputTypeCountFavouriteItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    where?: FavouriteItemWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AddressWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBlocksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlockWhereInput
  }


  /**
   * Count Type OTPCountOutputType
   */

  export type OTPCountOutputType = {
    users: number
  }

  export type OTPCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | OTPCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * OTPCountOutputType without action
   */
  export type OTPCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTPCountOutputType
     */
    select?: OTPCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OTPCountOutputType without action
   */
  export type OTPCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type PhoneCountOutputType
   */

  export type PhoneCountOutputType = {
    products: number
  }

  export type PhoneCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | PhoneCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * PhoneCountOutputType without action
   */
  export type PhoneCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PhoneCountOutputType
     */
    select?: PhoneCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PhoneCountOutputType without action
   */
  export type PhoneCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type AddressCountOutputType
   */

  export type AddressCountOutputType = {
    products: number
  }

  export type AddressCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | AddressCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AddressCountOutputType
     */
    select?: AddressCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type LanguageCountOutputType
   */

  export type LanguageCountOutputType = {
    users: number
    admins: number
  }

  export type LanguageCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | LanguageCountOutputTypeCountUsersArgs
    admins?: boolean | LanguageCountOutputTypeCountAdminsArgs
  }

  // Custom InputTypes
  /**
   * LanguageCountOutputType without action
   */
  export type LanguageCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LanguageCountOutputType
     */
    select?: LanguageCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LanguageCountOutputType without action
   */
  export type LanguageCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * LanguageCountOutputType without action
   */
  export type LanguageCountOutputTypeCountAdminsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    images: number
<<<<<<< HEAD
    favourited_by: number
=======
    favouritedBy: number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    images?: boolean | ProductCountOutputTypeCountImagesArgs
<<<<<<< HEAD
    favourited_by?: boolean | ProductCountOutputTypeCountFavourited_byArgs
=======
    favouritedBy?: boolean | ProductCountOutputTypeCountFavouritedByArgs
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: boolean | ProductCountOutputTypeCountCommentsArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductImageWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
<<<<<<< HEAD
  export type ProductCountOutputTypeCountFavourited_byArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
=======
  export type ProductCountOutputTypeCountFavouritedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    where?: FavouriteItemWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }


  /**
   * Count Type BrandCountOutputType
   */

  export type BrandCountOutputType = {
    models: number
    products: number
  }

  export type BrandCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    models?: boolean | BrandCountOutputTypeCountModelsArgs
    products?: boolean | BrandCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandCountOutputType
     */
    select?: BrandCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeCountModelsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModelWhereInput
  }

  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type ModelCountOutputType
   */

  export type ModelCountOutputType = {
    products: number
  }

  export type ModelCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | ModelCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * ModelCountOutputType without action
   */
  export type ModelCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelCountOutputType
     */
    select?: ModelCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ModelCountOutputType without action
   */
  export type ModelCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type ColorCountOutputType
   */

  export type ColorCountOutputType = {
    products: number
  }

  export type ColorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | ColorCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * ColorCountOutputType without action
   */
  export type ColorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ColorCountOutputType
     */
    select?: ColorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ColorCountOutputType without action
   */
  export type ColorCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type CurrencyCountOutputType
   */

  export type CurrencyCountOutputType = {
<<<<<<< HEAD
    user_preferences: number
=======
    userPreferences: number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products: number
  }

  export type CurrencyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
<<<<<<< HEAD
    user_preferences?: boolean | CurrencyCountOutputTypeCountUser_preferencesArgs
=======
    userPreferences?: boolean | CurrencyCountOutputTypeCountUserPreferencesArgs
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: boolean | CurrencyCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * CurrencyCountOutputType without action
   */
  export type CurrencyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CurrencyCountOutputType
     */
    select?: CurrencyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CurrencyCountOutputType without action
   */
<<<<<<< HEAD
  export type CurrencyCountOutputTypeCountUser_preferencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
=======
  export type CurrencyCountOutputTypeCountUserPreferencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    where?: UserWhereInput
  }

  /**
   * CurrencyCountOutputType without action
   */
  export type CurrencyCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type AdminCountOutputType
   */

  export type AdminCountOutputType = {
<<<<<<< HEAD
    blocks_issued: number
    products_managed: number
  }

  export type AdminCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blocks_issued?: boolean | AdminCountOutputTypeCountBlocks_issuedArgs
    products_managed?: boolean | AdminCountOutputTypeCountProducts_managedArgs
=======
    blocksIssued: number
    productsManaged: number
  }

  export type AdminCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blocksIssued?: boolean | AdminCountOutputTypeCountBlocksIssuedArgs
    productsManaged?: boolean | AdminCountOutputTypeCountProductsManagedArgs
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  // Custom InputTypes
  /**
   * AdminCountOutputType without action
   */
  export type AdminCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminCountOutputType
     */
    select?: AdminCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AdminCountOutputType without action
   */
<<<<<<< HEAD
  export type AdminCountOutputTypeCountBlocks_issuedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
=======
  export type AdminCountOutputTypeCountBlocksIssuedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    where?: BlockWhereInput
  }

  /**
   * AdminCountOutputType without action
   */
<<<<<<< HEAD
  export type AdminCountOutputTypeCountProducts_managedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
=======
  export type AdminCountOutputTypeCountProductsManagedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    where?: ProductWhereInput
  }


  /**
   * Count Type PaymentMethodCountOutputType
   */

  export type PaymentMethodCountOutputType = {
    payments: number
  }

  export type PaymentMethodCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payments?: boolean | PaymentMethodCountOutputTypeCountPaymentsArgs
  }

  // Custom InputTypes
  /**
   * PaymentMethodCountOutputType without action
   */
  export type PaymentMethodCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethodCountOutputType
     */
    select?: PaymentMethodCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PaymentMethodCountOutputType without action
   */
  export type PaymentMethodCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    balance: number | null
    otp_id: number | null
    lang_id: number | null
<<<<<<< HEAD
    currency_id: number | null
=======
    preferredCurrencyId: number | null
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserSumAggregateOutputType = {
    id: bigint | null
    balance: number | null
    otp_id: bigint | null
    lang_id: bigint | null
<<<<<<< HEAD
    currency_id: bigint | null
=======
    preferredCurrencyId: bigint | null
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    surname: string | null
    birth_date: Date | null
    phone: string | null
    avatar: string | null
    refresh_token: string | null
    balance: number | null
    otp_id: bigint | null
    lang_id: bigint | null
<<<<<<< HEAD
    currency_id: bigint | null
=======
    preferredCurrencyId: bigint | null
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    surname: string | null
    birth_date: Date | null
    phone: string | null
    avatar: string | null
    refresh_token: string | null
    balance: number | null
    otp_id: bigint | null
    lang_id: bigint | null
<<<<<<< HEAD
    currency_id: bigint | null
=======
    preferredCurrencyId: bigint | null
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    surname: number
    birth_date: number
    phone: number
    avatar: number
    refresh_token: number
    balance: number
    otp_id: number
    lang_id: number
<<<<<<< HEAD
    currency_id: number
=======
    preferredCurrencyId: number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    balance?: true
    otp_id?: true
    lang_id?: true
<<<<<<< HEAD
    currency_id?: true
=======
    preferredCurrencyId?: true
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserSumAggregateInputType = {
    id?: true
    balance?: true
    otp_id?: true
    lang_id?: true
<<<<<<< HEAD
    currency_id?: true
=======
    preferredCurrencyId?: true
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    surname?: true
    birth_date?: true
    phone?: true
    avatar?: true
    refresh_token?: true
    balance?: true
    otp_id?: true
    lang_id?: true
<<<<<<< HEAD
    currency_id?: true
=======
    preferredCurrencyId?: true
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    surname?: true
    birth_date?: true
    phone?: true
    avatar?: true
    refresh_token?: true
    balance?: true
    otp_id?: true
    lang_id?: true
<<<<<<< HEAD
    currency_id?: true
=======
    preferredCurrencyId?: true
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    surname?: true
    birth_date?: true
    phone?: true
    avatar?: true
    refresh_token?: true
    balance?: true
    otp_id?: true
    lang_id?: true
<<<<<<< HEAD
    currency_id?: true
=======
    preferredCurrencyId?: true
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: bigint
    name: string
    surname: string
<<<<<<< HEAD
    birth_date: Date | null
    phone: string
    avatar: string | null
    refresh_token: string | null
    balance: number
    otp_id: bigint | null
    lang_id: bigint
    currency_id: bigint
=======
    birth_date: Date
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint
    lang_id: bigint
    preferredCurrencyId: bigint
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    surname?: boolean
    birth_date?: boolean
    phone?: boolean
    avatar?: boolean
    refresh_token?: boolean
    balance?: boolean
    otp_id?: boolean
    lang_id?: boolean
<<<<<<< HEAD
    currency_id?: boolean
    otp?: boolean | User$otpArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    emails?: boolean | User$emailsArgs<ExtArgs>
    additional_phones?: boolean | User$additional_phonesArgs<ExtArgs>
    favourite_items?: boolean | User$favourite_itemsArgs<ExtArgs>
=======
    preferredCurrencyId?: boolean
    otp?: boolean | OTPDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    preferredCurrency?: boolean | CurrencyDefaultArgs<ExtArgs>
    emails?: boolean | User$emailsArgs<ExtArgs>
    additionalPhones?: boolean | User$additionalPhonesArgs<ExtArgs>
    favouriteItems?: boolean | User$favouriteItemsArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: boolean | User$addressesArgs<ExtArgs>
    products?: boolean | User$productsArgs<ExtArgs>
    comments?: boolean | User$commentsArgs<ExtArgs>
    payments?: boolean | User$paymentsArgs<ExtArgs>
    blocks?: boolean | User$blocksArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    surname?: boolean
    birth_date?: boolean
    phone?: boolean
    avatar?: boolean
    refresh_token?: boolean
    balance?: boolean
    otp_id?: boolean
    lang_id?: boolean
<<<<<<< HEAD
    currency_id?: boolean
    otp?: boolean | User$otpArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
=======
    preferredCurrencyId?: boolean
    otp?: boolean | OTPDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    preferredCurrency?: boolean | CurrencyDefaultArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    surname?: boolean
    birth_date?: boolean
    phone?: boolean
    avatar?: boolean
    refresh_token?: boolean
    balance?: boolean
    otp_id?: boolean
    lang_id?: boolean
<<<<<<< HEAD
    currency_id?: boolean
    otp?: boolean | User$otpArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
=======
    preferredCurrencyId?: boolean
    otp?: boolean | OTPDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    preferredCurrency?: boolean | CurrencyDefaultArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    surname?: boolean
    birth_date?: boolean
    phone?: boolean
    avatar?: boolean
    refresh_token?: boolean
    balance?: boolean
    otp_id?: boolean
    lang_id?: boolean
<<<<<<< HEAD
    currency_id?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "surname" | "birth_date" | "phone" | "avatar" | "refresh_token" | "balance" | "otp_id" | "lang_id" | "currency_id", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    otp?: boolean | User$otpArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    emails?: boolean | User$emailsArgs<ExtArgs>
    additional_phones?: boolean | User$additional_phonesArgs<ExtArgs>
    favourite_items?: boolean | User$favourite_itemsArgs<ExtArgs>
=======
    preferredCurrencyId?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "surname" | "birth_date" | "phone" | "avatar" | "refresh_token" | "balance" | "otp_id" | "lang_id" | "preferredCurrencyId", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    otp?: boolean | OTPDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    preferredCurrency?: boolean | CurrencyDefaultArgs<ExtArgs>
    emails?: boolean | User$emailsArgs<ExtArgs>
    additionalPhones?: boolean | User$additionalPhonesArgs<ExtArgs>
    favouriteItems?: boolean | User$favouriteItemsArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: boolean | User$addressesArgs<ExtArgs>
    products?: boolean | User$productsArgs<ExtArgs>
    comments?: boolean | User$commentsArgs<ExtArgs>
    payments?: boolean | User$paymentsArgs<ExtArgs>
    blocks?: boolean | User$blocksArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
<<<<<<< HEAD
    otp?: boolean | User$otpArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    otp?: boolean | User$otpArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
=======
    otp?: boolean | OTPDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    preferredCurrency?: boolean | CurrencyDefaultArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    otp?: boolean | OTPDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    preferredCurrency?: boolean | CurrencyDefaultArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
<<<<<<< HEAD
      otp: Prisma.$OTPPayload<ExtArgs> | null
      language: Prisma.$LanguagePayload<ExtArgs>
      currency: Prisma.$CurrencyPayload<ExtArgs>
      emails: Prisma.$EmailPayload<ExtArgs>[]
      additional_phones: Prisma.$PhonePayload<ExtArgs>[]
      favourite_items: Prisma.$FavouriteItemPayload<ExtArgs>[]
=======
      otp: Prisma.$OTPPayload<ExtArgs>
      language: Prisma.$LanguagePayload<ExtArgs>
      preferredCurrency: Prisma.$CurrencyPayload<ExtArgs>
      emails: Prisma.$EmailPayload<ExtArgs>[]
      additionalPhones: Prisma.$PhonePayload<ExtArgs>[]
      favouriteItems: Prisma.$FavouriteItemPayload<ExtArgs>[]
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
      addresses: Prisma.$AddressPayload<ExtArgs>[]
      products: Prisma.$ProductPayload<ExtArgs>[]
      comments: Prisma.$CommentPayload<ExtArgs>[]
      payments: Prisma.$PaymentPayload<ExtArgs>[]
      blocks: Prisma.$BlockPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      surname: string
<<<<<<< HEAD
      birth_date: Date | null
      phone: string
      avatar: string | null
      refresh_token: string | null
      balance: number
      otp_id: bigint | null
      lang_id: bigint
      currency_id: bigint
=======
      birth_date: Date
      phone: string
      avatar: string
      refresh_token: string
      balance: number
      otp_id: bigint
      lang_id: bigint
      preferredCurrencyId: bigint
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
<<<<<<< HEAD
    otp<T extends User$otpArgs<ExtArgs> = {}>(args?: Subset<T, User$otpArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    language<T extends LanguageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LanguageDefaultArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    currency<T extends CurrencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CurrencyDefaultArgs<ExtArgs>>): Prisma__CurrencyClient<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    emails<T extends User$emailsArgs<ExtArgs> = {}>(args?: Subset<T, User$emailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    additional_phones<T extends User$additional_phonesArgs<ExtArgs> = {}>(args?: Subset<T, User$additional_phonesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favourite_items<T extends User$favourite_itemsArgs<ExtArgs> = {}>(args?: Subset<T, User$favourite_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
=======
    otp<T extends OTPDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OTPDefaultArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    language<T extends LanguageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LanguageDefaultArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    preferredCurrency<T extends CurrencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CurrencyDefaultArgs<ExtArgs>>): Prisma__CurrencyClient<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    emails<T extends User$emailsArgs<ExtArgs> = {}>(args?: Subset<T, User$emailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    additionalPhones<T extends User$additionalPhonesArgs<ExtArgs> = {}>(args?: Subset<T, User$additionalPhonesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favouriteItems<T extends User$favouriteItemsArgs<ExtArgs> = {}>(args?: Subset<T, User$favouriteItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses<T extends User$addressesArgs<ExtArgs> = {}>(args?: Subset<T, User$addressesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products<T extends User$productsArgs<ExtArgs> = {}>(args?: Subset<T, User$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comments<T extends User$commentsArgs<ExtArgs> = {}>(args?: Subset<T, User$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    payments<T extends User$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, User$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    blocks<T extends User$blocksArgs<ExtArgs> = {}>(args?: Subset<T, User$blocksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'BigInt'>
    readonly name: FieldRef<"User", 'String'>
    readonly surname: FieldRef<"User", 'String'>
    readonly birth_date: FieldRef<"User", 'DateTime'>
    readonly phone: FieldRef<"User", 'String'>
    readonly avatar: FieldRef<"User", 'String'>
    readonly refresh_token: FieldRef<"User", 'String'>
    readonly balance: FieldRef<"User", 'Float'>
    readonly otp_id: FieldRef<"User", 'BigInt'>
    readonly lang_id: FieldRef<"User", 'BigInt'>
<<<<<<< HEAD
    readonly currency_id: FieldRef<"User", 'BigInt'>
=======
    readonly preferredCurrencyId: FieldRef<"User", 'BigInt'>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
<<<<<<< HEAD
   * User.otp
   */
  export type User$otpArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OTPInclude<ExtArgs> | null
    where?: OTPWhereInput
  }

  /**
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
   * User.emails
   */
  export type User$emailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email
     */
    select?: EmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Email
     */
    omit?: EmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailInclude<ExtArgs> | null
    where?: EmailWhereInput
    orderBy?: EmailOrderByWithRelationInput | EmailOrderByWithRelationInput[]
    cursor?: EmailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmailScalarFieldEnum | EmailScalarFieldEnum[]
  }

  /**
<<<<<<< HEAD
   * User.additional_phones
   */
  export type User$additional_phonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
=======
   * User.additionalPhones
   */
  export type User$additionalPhonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    /**
     * Select specific fields to fetch from the Phone
     */
    select?: PhoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Phone
     */
    omit?: PhoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PhoneInclude<ExtArgs> | null
    where?: PhoneWhereInput
    orderBy?: PhoneOrderByWithRelationInput | PhoneOrderByWithRelationInput[]
    cursor?: PhoneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PhoneScalarFieldEnum | PhoneScalarFieldEnum[]
  }

  /**
<<<<<<< HEAD
   * User.favourite_items
   */
  export type User$favourite_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
=======
   * User.favouriteItems
   */
  export type User$favouriteItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemInclude<ExtArgs> | null
    where?: FavouriteItemWhereInput
    orderBy?: FavouriteItemOrderByWithRelationInput | FavouriteItemOrderByWithRelationInput[]
    cursor?: FavouriteItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavouriteItemScalarFieldEnum | FavouriteItemScalarFieldEnum[]
  }

  /**
   * User.addresses
   */
  export type User$addressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    where?: AddressWhereInput
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    cursor?: AddressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * User.products
   */
  export type User$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * User.comments
   */
  export type User$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * User.payments
   */
  export type User$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * User.blocks
   */
  export type User$blocksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockInclude<ExtArgs> | null
    where?: BlockWhereInput
    orderBy?: BlockOrderByWithRelationInput | BlockOrderByWithRelationInput[]
    cursor?: BlockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlockScalarFieldEnum | BlockScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model OTP
   */

  export type AggregateOTP = {
    _count: OTPCountAggregateOutputType | null
    _avg: OTPAvgAggregateOutputType | null
    _sum: OTPSumAggregateOutputType | null
    _min: OTPMinAggregateOutputType | null
    _max: OTPMaxAggregateOutputType | null
  }

  export type OTPAvgAggregateOutputType = {
    id: number | null
    otp: number | null
  }

  export type OTPSumAggregateOutputType = {
    id: bigint | null
    otp: number | null
  }

  export type OTPMinAggregateOutputType = {
    id: bigint | null
    uuid: string | null
    otp: number | null
    expire: Date | null
  }

  export type OTPMaxAggregateOutputType = {
    id: bigint | null
    uuid: string | null
    otp: number | null
    expire: Date | null
  }

  export type OTPCountAggregateOutputType = {
    id: number
    uuid: number
    otp: number
    expire: number
    _all: number
  }


  export type OTPAvgAggregateInputType = {
    id?: true
    otp?: true
  }

  export type OTPSumAggregateInputType = {
    id?: true
    otp?: true
  }

  export type OTPMinAggregateInputType = {
    id?: true
    uuid?: true
    otp?: true
    expire?: true
  }

  export type OTPMaxAggregateInputType = {
    id?: true
    uuid?: true
    otp?: true
    expire?: true
  }

  export type OTPCountAggregateInputType = {
    id?: true
    uuid?: true
    otp?: true
    expire?: true
    _all?: true
  }

  export type OTPAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OTP to aggregate.
     */
    where?: OTPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OTPS to fetch.
     */
    orderBy?: OTPOrderByWithRelationInput | OTPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OTPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OTPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OTPS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OTPS
    **/
    _count?: true | OTPCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OTPAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OTPSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OTPMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OTPMaxAggregateInputType
  }

  export type GetOTPAggregateType<T extends OTPAggregateArgs> = {
        [P in keyof T & keyof AggregateOTP]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOTP[P]>
      : GetScalarType<T[P], AggregateOTP[P]>
  }




  export type OTPGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OTPWhereInput
    orderBy?: OTPOrderByWithAggregationInput | OTPOrderByWithAggregationInput[]
    by: OTPScalarFieldEnum[] | OTPScalarFieldEnum
    having?: OTPScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OTPCountAggregateInputType | true
    _avg?: OTPAvgAggregateInputType
    _sum?: OTPSumAggregateInputType
    _min?: OTPMinAggregateInputType
    _max?: OTPMaxAggregateInputType
  }

  export type OTPGroupByOutputType = {
    id: bigint
    uuid: string
    otp: number
    expire: Date
    _count: OTPCountAggregateOutputType | null
    _avg: OTPAvgAggregateOutputType | null
    _sum: OTPSumAggregateOutputType | null
    _min: OTPMinAggregateOutputType | null
    _max: OTPMaxAggregateOutputType | null
  }

  type GetOTPGroupByPayload<T extends OTPGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OTPGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OTPGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OTPGroupByOutputType[P]>
            : GetScalarType<T[P], OTPGroupByOutputType[P]>
        }
      >
    >


  export type OTPSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    otp?: boolean
    expire?: boolean
    users?: boolean | OTP$usersArgs<ExtArgs>
    _count?: boolean | OTPCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["oTP"]>

  export type OTPSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    otp?: boolean
    expire?: boolean
  }, ExtArgs["result"]["oTP"]>

  export type OTPSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    otp?: boolean
    expire?: boolean
  }, ExtArgs["result"]["oTP"]>

  export type OTPSelectScalar = {
    id?: boolean
    uuid?: boolean
    otp?: boolean
    expire?: boolean
  }

  export type OTPOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "uuid" | "otp" | "expire", ExtArgs["result"]["oTP"]>
  export type OTPInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | OTP$usersArgs<ExtArgs>
    _count?: boolean | OTPCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OTPIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type OTPIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $OTPPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OTP"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      uuid: string
      otp: number
      expire: Date
    }, ExtArgs["result"]["oTP"]>
    composites: {}
  }

  type OTPGetPayload<S extends boolean | null | undefined | OTPDefaultArgs> = $Result.GetResult<Prisma.$OTPPayload, S>

  type OTPCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OTPFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OTPCountAggregateInputType | true
    }

  export interface OTPDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OTP'], meta: { name: 'OTP' } }
    /**
     * Find zero or one OTP that matches the filter.
     * @param {OTPFindUniqueArgs} args - Arguments to find a OTP
     * @example
     * // Get one OTP
     * const oTP = await prisma.oTP.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OTPFindUniqueArgs>(args: SelectSubset<T, OTPFindUniqueArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OTP that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OTPFindUniqueOrThrowArgs} args - Arguments to find a OTP
     * @example
     * // Get one OTP
     * const oTP = await prisma.oTP.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OTPFindUniqueOrThrowArgs>(args: SelectSubset<T, OTPFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OTP that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPFindFirstArgs} args - Arguments to find a OTP
     * @example
     * // Get one OTP
     * const oTP = await prisma.oTP.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OTPFindFirstArgs>(args?: SelectSubset<T, OTPFindFirstArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OTP that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPFindFirstOrThrowArgs} args - Arguments to find a OTP
     * @example
     * // Get one OTP
     * const oTP = await prisma.oTP.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OTPFindFirstOrThrowArgs>(args?: SelectSubset<T, OTPFindFirstOrThrowArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OTPS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OTPS
     * const oTPS = await prisma.oTP.findMany()
     * 
     * // Get first 10 OTPS
     * const oTPS = await prisma.oTP.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const oTPWithIdOnly = await prisma.oTP.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OTPFindManyArgs>(args?: SelectSubset<T, OTPFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OTP.
     * @param {OTPCreateArgs} args - Arguments to create a OTP.
     * @example
     * // Create one OTP
     * const OTP = await prisma.oTP.create({
     *   data: {
     *     // ... data to create a OTP
     *   }
     * })
     * 
     */
    create<T extends OTPCreateArgs>(args: SelectSubset<T, OTPCreateArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OTPS.
     * @param {OTPCreateManyArgs} args - Arguments to create many OTPS.
     * @example
     * // Create many OTPS
     * const oTP = await prisma.oTP.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OTPCreateManyArgs>(args?: SelectSubset<T, OTPCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OTPS and returns the data saved in the database.
     * @param {OTPCreateManyAndReturnArgs} args - Arguments to create many OTPS.
     * @example
     * // Create many OTPS
     * const oTP = await prisma.oTP.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OTPS and only return the `id`
     * const oTPWithIdOnly = await prisma.oTP.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OTPCreateManyAndReturnArgs>(args?: SelectSubset<T, OTPCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OTP.
     * @param {OTPDeleteArgs} args - Arguments to delete one OTP.
     * @example
     * // Delete one OTP
     * const OTP = await prisma.oTP.delete({
     *   where: {
     *     // ... filter to delete one OTP
     *   }
     * })
     * 
     */
    delete<T extends OTPDeleteArgs>(args: SelectSubset<T, OTPDeleteArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OTP.
     * @param {OTPUpdateArgs} args - Arguments to update one OTP.
     * @example
     * // Update one OTP
     * const oTP = await prisma.oTP.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OTPUpdateArgs>(args: SelectSubset<T, OTPUpdateArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OTPS.
     * @param {OTPDeleteManyArgs} args - Arguments to filter OTPS to delete.
     * @example
     * // Delete a few OTPS
     * const { count } = await prisma.oTP.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OTPDeleteManyArgs>(args?: SelectSubset<T, OTPDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OTPS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OTPS
     * const oTP = await prisma.oTP.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OTPUpdateManyArgs>(args: SelectSubset<T, OTPUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OTPS and returns the data updated in the database.
     * @param {OTPUpdateManyAndReturnArgs} args - Arguments to update many OTPS.
     * @example
     * // Update many OTPS
     * const oTP = await prisma.oTP.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OTPS and only return the `id`
     * const oTPWithIdOnly = await prisma.oTP.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OTPUpdateManyAndReturnArgs>(args: SelectSubset<T, OTPUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OTP.
     * @param {OTPUpsertArgs} args - Arguments to update or create a OTP.
     * @example
     * // Update or create a OTP
     * const oTP = await prisma.oTP.upsert({
     *   create: {
     *     // ... data to create a OTP
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OTP we want to update
     *   }
     * })
     */
    upsert<T extends OTPUpsertArgs>(args: SelectSubset<T, OTPUpsertArgs<ExtArgs>>): Prisma__OTPClient<$Result.GetResult<Prisma.$OTPPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OTPS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPCountArgs} args - Arguments to filter OTPS to count.
     * @example
     * // Count the number of OTPS
     * const count = await prisma.oTP.count({
     *   where: {
     *     // ... the filter for the OTPS we want to count
     *   }
     * })
    **/
    count<T extends OTPCountArgs>(
      args?: Subset<T, OTPCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OTPCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OTP.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OTPAggregateArgs>(args: Subset<T, OTPAggregateArgs>): Prisma.PrismaPromise<GetOTPAggregateType<T>>

    /**
     * Group by OTP.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OTPGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OTPGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OTPGroupByArgs['orderBy'] }
        : { orderBy?: OTPGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OTPGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOTPGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OTP model
   */
  readonly fields: OTPFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OTP.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OTPClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends OTP$usersArgs<ExtArgs> = {}>(args?: Subset<T, OTP$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OTP model
   */
  interface OTPFieldRefs {
    readonly id: FieldRef<"OTP", 'BigInt'>
    readonly uuid: FieldRef<"OTP", 'String'>
    readonly otp: FieldRef<"OTP", 'Int'>
    readonly expire: FieldRef<"OTP", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OTP findUnique
   */
  export type OTPFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OTPInclude<ExtArgs> | null
    /**
     * Filter, which OTP to fetch.
     */
    where: OTPWhereUniqueInput
  }

  /**
   * OTP findUniqueOrThrow
   */
  export type OTPFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OTPInclude<ExtArgs> | null
    /**
     * Filter, which OTP to fetch.
     */
    where: OTPWhereUniqueInput
  }

  /**
   * OTP findFirst
   */
  export type OTPFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OTPInclude<ExtArgs> | null
    /**
     * Filter, which OTP to fetch.
     */
    where?: OTPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OTPS to fetch.
     */
    orderBy?: OTPOrderByWithRelationInput | OTPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OTPS.
     */
    cursor?: OTPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OTPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OTPS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OTPS.
     */
    distinct?: OTPScalarFieldEnum | OTPScalarFieldEnum[]
  }

  /**
   * OTP findFirstOrThrow
   */
  export type OTPFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OTPInclude<ExtArgs> | null
    /**
     * Filter, which OTP to fetch.
     */
    where?: OTPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OTPS to fetch.
     */
    orderBy?: OTPOrderByWithRelationInput | OTPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OTPS.
     */
    cursor?: OTPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OTPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OTPS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OTPS.
     */
    distinct?: OTPScalarFieldEnum | OTPScalarFieldEnum[]
  }

  /**
   * OTP findMany
   */
  export type OTPFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OTPInclude<ExtArgs> | null
    /**
     * Filter, which OTPS to fetch.
     */
    where?: OTPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OTPS to fetch.
     */
    orderBy?: OTPOrderByWithRelationInput | OTPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OTPS.
     */
    cursor?: OTPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OTPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OTPS.
     */
    skip?: number
    distinct?: OTPScalarFieldEnum | OTPScalarFieldEnum[]
  }

  /**
   * OTP create
   */
  export type OTPCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OTPInclude<ExtArgs> | null
    /**
     * The data needed to create a OTP.
     */
    data: XOR<OTPCreateInput, OTPUncheckedCreateInput>
  }

  /**
   * OTP createMany
   */
  export type OTPCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OTPS.
     */
    data: OTPCreateManyInput | OTPCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OTP createManyAndReturn
   */
  export type OTPCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * The data used to create many OTPS.
     */
    data: OTPCreateManyInput | OTPCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OTP update
   */
  export type OTPUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OTPInclude<ExtArgs> | null
    /**
     * The data needed to update a OTP.
     */
    data: XOR<OTPUpdateInput, OTPUncheckedUpdateInput>
    /**
     * Choose, which OTP to update.
     */
    where: OTPWhereUniqueInput
  }

  /**
   * OTP updateMany
   */
  export type OTPUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OTPS.
     */
    data: XOR<OTPUpdateManyMutationInput, OTPUncheckedUpdateManyInput>
    /**
     * Filter which OTPS to update
     */
    where?: OTPWhereInput
    /**
     * Limit how many OTPS to update.
     */
    limit?: number
  }

  /**
   * OTP updateManyAndReturn
   */
  export type OTPUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * The data used to update OTPS.
     */
    data: XOR<OTPUpdateManyMutationInput, OTPUncheckedUpdateManyInput>
    /**
     * Filter which OTPS to update
     */
    where?: OTPWhereInput
    /**
     * Limit how many OTPS to update.
     */
    limit?: number
  }

  /**
   * OTP upsert
   */
  export type OTPUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OTPInclude<ExtArgs> | null
    /**
     * The filter to search for the OTP to update in case it exists.
     */
    where: OTPWhereUniqueInput
    /**
     * In case the OTP found by the `where` argument doesn't exist, create a new OTP with this data.
     */
    create: XOR<OTPCreateInput, OTPUncheckedCreateInput>
    /**
     * In case the OTP was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OTPUpdateInput, OTPUncheckedUpdateInput>
  }

  /**
   * OTP delete
   */
  export type OTPDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OTPInclude<ExtArgs> | null
    /**
     * Filter which OTP to delete.
     */
    where: OTPWhereUniqueInput
  }

  /**
   * OTP deleteMany
   */
  export type OTPDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OTPS to delete
     */
    where?: OTPWhereInput
    /**
     * Limit how many OTPS to delete.
     */
    limit?: number
  }

  /**
   * OTP.users
   */
  export type OTP$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * OTP without action
   */
  export type OTPDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OTP
     */
    select?: OTPSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OTP
     */
    omit?: OTPOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OTPInclude<ExtArgs> | null
  }


  /**
   * Model Phone
   */

  export type AggregatePhone = {
    _count: PhoneCountAggregateOutputType | null
    _avg: PhoneAvgAggregateOutputType | null
    _sum: PhoneSumAggregateOutputType | null
    _min: PhoneMinAggregateOutputType | null
    _max: PhoneMaxAggregateOutputType | null
  }

  export type PhoneAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type PhoneSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
  }

  export type PhoneMinAggregateOutputType = {
    id: bigint | null
    phone: string | null
    user_id: bigint | null
  }

  export type PhoneMaxAggregateOutputType = {
    id: bigint | null
    phone: string | null
    user_id: bigint | null
  }

  export type PhoneCountAggregateOutputType = {
    id: number
    phone: number
    user_id: number
    _all: number
  }


  export type PhoneAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type PhoneSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type PhoneMinAggregateInputType = {
    id?: true
    phone?: true
    user_id?: true
  }

  export type PhoneMaxAggregateInputType = {
    id?: true
    phone?: true
    user_id?: true
  }

  export type PhoneCountAggregateInputType = {
    id?: true
    phone?: true
    user_id?: true
    _all?: true
  }

  export type PhoneAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Phone to aggregate.
     */
    where?: PhoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Phones to fetch.
     */
    orderBy?: PhoneOrderByWithRelationInput | PhoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PhoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Phones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Phones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Phones
    **/
    _count?: true | PhoneCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PhoneAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PhoneSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PhoneMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PhoneMaxAggregateInputType
  }

  export type GetPhoneAggregateType<T extends PhoneAggregateArgs> = {
        [P in keyof T & keyof AggregatePhone]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePhone[P]>
      : GetScalarType<T[P], AggregatePhone[P]>
  }




  export type PhoneGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PhoneWhereInput
    orderBy?: PhoneOrderByWithAggregationInput | PhoneOrderByWithAggregationInput[]
    by: PhoneScalarFieldEnum[] | PhoneScalarFieldEnum
    having?: PhoneScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PhoneCountAggregateInputType | true
    _avg?: PhoneAvgAggregateInputType
    _sum?: PhoneSumAggregateInputType
    _min?: PhoneMinAggregateInputType
    _max?: PhoneMaxAggregateInputType
  }

  export type PhoneGroupByOutputType = {
    id: bigint
    phone: string
    user_id: bigint
    _count: PhoneCountAggregateOutputType | null
    _avg: PhoneAvgAggregateOutputType | null
    _sum: PhoneSumAggregateOutputType | null
    _min: PhoneMinAggregateOutputType | null
    _max: PhoneMaxAggregateOutputType | null
  }

  type GetPhoneGroupByPayload<T extends PhoneGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PhoneGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PhoneGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PhoneGroupByOutputType[P]>
            : GetScalarType<T[P], PhoneGroupByOutputType[P]>
        }
      >
    >


  export type PhoneSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phone?: boolean
    user_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    products?: boolean | Phone$productsArgs<ExtArgs>
    _count?: boolean | PhoneCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["phone"]>

  export type PhoneSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phone?: boolean
    user_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["phone"]>

  export type PhoneSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phone?: boolean
    user_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["phone"]>

  export type PhoneSelectScalar = {
    id?: boolean
    phone?: boolean
    user_id?: boolean
  }

  export type PhoneOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "phone" | "user_id", ExtArgs["result"]["phone"]>
  export type PhoneInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    products?: boolean | Phone$productsArgs<ExtArgs>
    _count?: boolean | PhoneCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PhoneIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PhoneIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PhonePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Phone"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      phone: string
      user_id: bigint
    }, ExtArgs["result"]["phone"]>
    composites: {}
  }

  type PhoneGetPayload<S extends boolean | null | undefined | PhoneDefaultArgs> = $Result.GetResult<Prisma.$PhonePayload, S>

  type PhoneCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PhoneFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PhoneCountAggregateInputType | true
    }

  export interface PhoneDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Phone'], meta: { name: 'Phone' } }
    /**
     * Find zero or one Phone that matches the filter.
     * @param {PhoneFindUniqueArgs} args - Arguments to find a Phone
     * @example
     * // Get one Phone
     * const phone = await prisma.phone.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PhoneFindUniqueArgs>(args: SelectSubset<T, PhoneFindUniqueArgs<ExtArgs>>): Prisma__PhoneClient<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Phone that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PhoneFindUniqueOrThrowArgs} args - Arguments to find a Phone
     * @example
     * // Get one Phone
     * const phone = await prisma.phone.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PhoneFindUniqueOrThrowArgs>(args: SelectSubset<T, PhoneFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PhoneClient<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Phone that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PhoneFindFirstArgs} args - Arguments to find a Phone
     * @example
     * // Get one Phone
     * const phone = await prisma.phone.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PhoneFindFirstArgs>(args?: SelectSubset<T, PhoneFindFirstArgs<ExtArgs>>): Prisma__PhoneClient<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Phone that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PhoneFindFirstOrThrowArgs} args - Arguments to find a Phone
     * @example
     * // Get one Phone
     * const phone = await prisma.phone.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PhoneFindFirstOrThrowArgs>(args?: SelectSubset<T, PhoneFindFirstOrThrowArgs<ExtArgs>>): Prisma__PhoneClient<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Phones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PhoneFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Phones
     * const phones = await prisma.phone.findMany()
     * 
     * // Get first 10 Phones
     * const phones = await prisma.phone.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const phoneWithIdOnly = await prisma.phone.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PhoneFindManyArgs>(args?: SelectSubset<T, PhoneFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Phone.
     * @param {PhoneCreateArgs} args - Arguments to create a Phone.
     * @example
     * // Create one Phone
     * const Phone = await prisma.phone.create({
     *   data: {
     *     // ... data to create a Phone
     *   }
     * })
     * 
     */
    create<T extends PhoneCreateArgs>(args: SelectSubset<T, PhoneCreateArgs<ExtArgs>>): Prisma__PhoneClient<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Phones.
     * @param {PhoneCreateManyArgs} args - Arguments to create many Phones.
     * @example
     * // Create many Phones
     * const phone = await prisma.phone.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PhoneCreateManyArgs>(args?: SelectSubset<T, PhoneCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Phones and returns the data saved in the database.
     * @param {PhoneCreateManyAndReturnArgs} args - Arguments to create many Phones.
     * @example
     * // Create many Phones
     * const phone = await prisma.phone.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Phones and only return the `id`
     * const phoneWithIdOnly = await prisma.phone.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PhoneCreateManyAndReturnArgs>(args?: SelectSubset<T, PhoneCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Phone.
     * @param {PhoneDeleteArgs} args - Arguments to delete one Phone.
     * @example
     * // Delete one Phone
     * const Phone = await prisma.phone.delete({
     *   where: {
     *     // ... filter to delete one Phone
     *   }
     * })
     * 
     */
    delete<T extends PhoneDeleteArgs>(args: SelectSubset<T, PhoneDeleteArgs<ExtArgs>>): Prisma__PhoneClient<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Phone.
     * @param {PhoneUpdateArgs} args - Arguments to update one Phone.
     * @example
     * // Update one Phone
     * const phone = await prisma.phone.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PhoneUpdateArgs>(args: SelectSubset<T, PhoneUpdateArgs<ExtArgs>>): Prisma__PhoneClient<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Phones.
     * @param {PhoneDeleteManyArgs} args - Arguments to filter Phones to delete.
     * @example
     * // Delete a few Phones
     * const { count } = await prisma.phone.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PhoneDeleteManyArgs>(args?: SelectSubset<T, PhoneDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Phones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PhoneUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Phones
     * const phone = await prisma.phone.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PhoneUpdateManyArgs>(args: SelectSubset<T, PhoneUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Phones and returns the data updated in the database.
     * @param {PhoneUpdateManyAndReturnArgs} args - Arguments to update many Phones.
     * @example
     * // Update many Phones
     * const phone = await prisma.phone.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Phones and only return the `id`
     * const phoneWithIdOnly = await prisma.phone.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PhoneUpdateManyAndReturnArgs>(args: SelectSubset<T, PhoneUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Phone.
     * @param {PhoneUpsertArgs} args - Arguments to update or create a Phone.
     * @example
     * // Update or create a Phone
     * const phone = await prisma.phone.upsert({
     *   create: {
     *     // ... data to create a Phone
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Phone we want to update
     *   }
     * })
     */
    upsert<T extends PhoneUpsertArgs>(args: SelectSubset<T, PhoneUpsertArgs<ExtArgs>>): Prisma__PhoneClient<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Phones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PhoneCountArgs} args - Arguments to filter Phones to count.
     * @example
     * // Count the number of Phones
     * const count = await prisma.phone.count({
     *   where: {
     *     // ... the filter for the Phones we want to count
     *   }
     * })
    **/
    count<T extends PhoneCountArgs>(
      args?: Subset<T, PhoneCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PhoneCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Phone.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PhoneAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PhoneAggregateArgs>(args: Subset<T, PhoneAggregateArgs>): Prisma.PrismaPromise<GetPhoneAggregateType<T>>

    /**
     * Group by Phone.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PhoneGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PhoneGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PhoneGroupByArgs['orderBy'] }
        : { orderBy?: PhoneGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PhoneGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPhoneGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Phone model
   */
  readonly fields: PhoneFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Phone.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PhoneClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    products<T extends Phone$productsArgs<ExtArgs> = {}>(args?: Subset<T, Phone$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Phone model
   */
  interface PhoneFieldRefs {
    readonly id: FieldRef<"Phone", 'BigInt'>
    readonly phone: FieldRef<"Phone", 'String'>
    readonly user_id: FieldRef<"Phone", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * Phone findUnique
   */
  export type PhoneFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Phone
     */
    select?: PhoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Phone
     */
    omit?: PhoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PhoneInclude<ExtArgs> | null
    /**
     * Filter, which Phone to fetch.
     */
    where: PhoneWhereUniqueInput
  }

  /**
   * Phone findUniqueOrThrow
   */
  export type PhoneFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Phone
     */
    select?: PhoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Phone
     */
    omit?: PhoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PhoneInclude<ExtArgs> | null
    /**
     * Filter, which Phone to fetch.
     */
    where: PhoneWhereUniqueInput
  }

  /**
   * Phone findFirst
   */
  export type PhoneFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Phone
     */
    select?: PhoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Phone
     */
    omit?: PhoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PhoneInclude<ExtArgs> | null
    /**
     * Filter, which Phone to fetch.
     */
    where?: PhoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Phones to fetch.
     */
    orderBy?: PhoneOrderByWithRelationInput | PhoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Phones.
     */
    cursor?: PhoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Phones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Phones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Phones.
     */
    distinct?: PhoneScalarFieldEnum | PhoneScalarFieldEnum[]
  }

  /**
   * Phone findFirstOrThrow
   */
  export type PhoneFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Phone
     */
    select?: PhoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Phone
     */
    omit?: PhoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PhoneInclude<ExtArgs> | null
    /**
     * Filter, which Phone to fetch.
     */
    where?: PhoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Phones to fetch.
     */
    orderBy?: PhoneOrderByWithRelationInput | PhoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Phones.
     */
    cursor?: PhoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Phones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Phones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Phones.
     */
    distinct?: PhoneScalarFieldEnum | PhoneScalarFieldEnum[]
  }

  /**
   * Phone findMany
   */
  export type PhoneFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Phone
     */
    select?: PhoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Phone
     */
    omit?: PhoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PhoneInclude<ExtArgs> | null
    /**
     * Filter, which Phones to fetch.
     */
    where?: PhoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Phones to fetch.
     */
    orderBy?: PhoneOrderByWithRelationInput | PhoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Phones.
     */
    cursor?: PhoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Phones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Phones.
     */
    skip?: number
    distinct?: PhoneScalarFieldEnum | PhoneScalarFieldEnum[]
  }

  /**
   * Phone create
   */
  export type PhoneCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Phone
     */
    select?: PhoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Phone
     */
    omit?: PhoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PhoneInclude<ExtArgs> | null
    /**
     * The data needed to create a Phone.
     */
    data: XOR<PhoneCreateInput, PhoneUncheckedCreateInput>
  }

  /**
   * Phone createMany
   */
  export type PhoneCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Phones.
     */
    data: PhoneCreateManyInput | PhoneCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Phone createManyAndReturn
   */
  export type PhoneCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Phone
     */
    select?: PhoneSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Phone
     */
    omit?: PhoneOmit<ExtArgs> | null
    /**
     * The data used to create many Phones.
     */
    data: PhoneCreateManyInput | PhoneCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PhoneIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Phone update
   */
  export type PhoneUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Phone
     */
    select?: PhoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Phone
     */
    omit?: PhoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PhoneInclude<ExtArgs> | null
    /**
     * The data needed to update a Phone.
     */
    data: XOR<PhoneUpdateInput, PhoneUncheckedUpdateInput>
    /**
     * Choose, which Phone to update.
     */
    where: PhoneWhereUniqueInput
  }

  /**
   * Phone updateMany
   */
  export type PhoneUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Phones.
     */
    data: XOR<PhoneUpdateManyMutationInput, PhoneUncheckedUpdateManyInput>
    /**
     * Filter which Phones to update
     */
    where?: PhoneWhereInput
    /**
     * Limit how many Phones to update.
     */
    limit?: number
  }

  /**
   * Phone updateManyAndReturn
   */
  export type PhoneUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Phone
     */
    select?: PhoneSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Phone
     */
    omit?: PhoneOmit<ExtArgs> | null
    /**
     * The data used to update Phones.
     */
    data: XOR<PhoneUpdateManyMutationInput, PhoneUncheckedUpdateManyInput>
    /**
     * Filter which Phones to update
     */
    where?: PhoneWhereInput
    /**
     * Limit how many Phones to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PhoneIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Phone upsert
   */
  export type PhoneUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Phone
     */
    select?: PhoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Phone
     */
    omit?: PhoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PhoneInclude<ExtArgs> | null
    /**
     * The filter to search for the Phone to update in case it exists.
     */
    where: PhoneWhereUniqueInput
    /**
     * In case the Phone found by the `where` argument doesn't exist, create a new Phone with this data.
     */
    create: XOR<PhoneCreateInput, PhoneUncheckedCreateInput>
    /**
     * In case the Phone was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PhoneUpdateInput, PhoneUncheckedUpdateInput>
  }

  /**
   * Phone delete
   */
  export type PhoneDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Phone
     */
    select?: PhoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Phone
     */
    omit?: PhoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PhoneInclude<ExtArgs> | null
    /**
     * Filter which Phone to delete.
     */
    where: PhoneWhereUniqueInput
  }

  /**
   * Phone deleteMany
   */
  export type PhoneDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Phones to delete
     */
    where?: PhoneWhereInput
    /**
     * Limit how many Phones to delete.
     */
    limit?: number
  }

  /**
   * Phone.products
   */
  export type Phone$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Phone without action
   */
  export type PhoneDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Phone
     */
    select?: PhoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Phone
     */
    omit?: PhoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PhoneInclude<ExtArgs> | null
  }


  /**
   * Model Email
   */

  export type AggregateEmail = {
    _count: EmailCountAggregateOutputType | null
    _avg: EmailAvgAggregateOutputType | null
    _sum: EmailSumAggregateOutputType | null
    _min: EmailMinAggregateOutputType | null
    _max: EmailMaxAggregateOutputType | null
  }

  export type EmailAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type EmailSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
  }

  export type EmailMinAggregateOutputType = {
    id: bigint | null
    email: string | null
    user_id: bigint | null
  }

  export type EmailMaxAggregateOutputType = {
    id: bigint | null
    email: string | null
    user_id: bigint | null
  }

  export type EmailCountAggregateOutputType = {
    id: number
    email: number
    user_id: number
    _all: number
  }


  export type EmailAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type EmailSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type EmailMinAggregateInputType = {
    id?: true
    email?: true
    user_id?: true
  }

  export type EmailMaxAggregateInputType = {
    id?: true
    email?: true
    user_id?: true
  }

  export type EmailCountAggregateInputType = {
    id?: true
    email?: true
    user_id?: true
    _all?: true
  }

  export type EmailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Email to aggregate.
     */
    where?: EmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emails to fetch.
     */
    orderBy?: EmailOrderByWithRelationInput | EmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Emails
    **/
    _count?: true | EmailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmailAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmailSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmailMaxAggregateInputType
  }

  export type GetEmailAggregateType<T extends EmailAggregateArgs> = {
        [P in keyof T & keyof AggregateEmail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmail[P]>
      : GetScalarType<T[P], AggregateEmail[P]>
  }




  export type EmailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmailWhereInput
    orderBy?: EmailOrderByWithAggregationInput | EmailOrderByWithAggregationInput[]
    by: EmailScalarFieldEnum[] | EmailScalarFieldEnum
    having?: EmailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmailCountAggregateInputType | true
    _avg?: EmailAvgAggregateInputType
    _sum?: EmailSumAggregateInputType
    _min?: EmailMinAggregateInputType
    _max?: EmailMaxAggregateInputType
  }

  export type EmailGroupByOutputType = {
    id: bigint
    email: string
    user_id: bigint
    _count: EmailCountAggregateOutputType | null
    _avg: EmailAvgAggregateOutputType | null
    _sum: EmailSumAggregateOutputType | null
    _min: EmailMinAggregateOutputType | null
    _max: EmailMaxAggregateOutputType | null
  }

  type GetEmailGroupByPayload<T extends EmailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmailGroupByOutputType[P]>
            : GetScalarType<T[P], EmailGroupByOutputType[P]>
        }
      >
    >


  export type EmailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    user_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["email"]>

  export type EmailSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    user_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["email"]>

  export type EmailSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    user_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["email"]>

  export type EmailSelectScalar = {
    id?: boolean
    email?: boolean
    user_id?: boolean
  }

  export type EmailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "user_id", ExtArgs["result"]["email"]>
  export type EmailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type EmailIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type EmailIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $EmailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Email"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      email: string
      user_id: bigint
    }, ExtArgs["result"]["email"]>
    composites: {}
  }

  type EmailGetPayload<S extends boolean | null | undefined | EmailDefaultArgs> = $Result.GetResult<Prisma.$EmailPayload, S>

  type EmailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EmailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmailCountAggregateInputType | true
    }

  export interface EmailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Email'], meta: { name: 'Email' } }
    /**
     * Find zero or one Email that matches the filter.
     * @param {EmailFindUniqueArgs} args - Arguments to find a Email
     * @example
     * // Get one Email
     * const email = await prisma.email.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EmailFindUniqueArgs>(args: SelectSubset<T, EmailFindUniqueArgs<ExtArgs>>): Prisma__EmailClient<$Result.GetResult<Prisma.$EmailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Email that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EmailFindUniqueOrThrowArgs} args - Arguments to find a Email
     * @example
     * // Get one Email
     * const email = await prisma.email.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EmailFindUniqueOrThrowArgs>(args: SelectSubset<T, EmailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EmailClient<$Result.GetResult<Prisma.$EmailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Email that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailFindFirstArgs} args - Arguments to find a Email
     * @example
     * // Get one Email
     * const email = await prisma.email.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EmailFindFirstArgs>(args?: SelectSubset<T, EmailFindFirstArgs<ExtArgs>>): Prisma__EmailClient<$Result.GetResult<Prisma.$EmailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Email that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailFindFirstOrThrowArgs} args - Arguments to find a Email
     * @example
     * // Get one Email
     * const email = await prisma.email.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EmailFindFirstOrThrowArgs>(args?: SelectSubset<T, EmailFindFirstOrThrowArgs<ExtArgs>>): Prisma__EmailClient<$Result.GetResult<Prisma.$EmailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Emails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Emails
     * const emails = await prisma.email.findMany()
     * 
     * // Get first 10 Emails
     * const emails = await prisma.email.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const emailWithIdOnly = await prisma.email.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EmailFindManyArgs>(args?: SelectSubset<T, EmailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Email.
     * @param {EmailCreateArgs} args - Arguments to create a Email.
     * @example
     * // Create one Email
     * const Email = await prisma.email.create({
     *   data: {
     *     // ... data to create a Email
     *   }
     * })
     * 
     */
    create<T extends EmailCreateArgs>(args: SelectSubset<T, EmailCreateArgs<ExtArgs>>): Prisma__EmailClient<$Result.GetResult<Prisma.$EmailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Emails.
     * @param {EmailCreateManyArgs} args - Arguments to create many Emails.
     * @example
     * // Create many Emails
     * const email = await prisma.email.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EmailCreateManyArgs>(args?: SelectSubset<T, EmailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Emails and returns the data saved in the database.
     * @param {EmailCreateManyAndReturnArgs} args - Arguments to create many Emails.
     * @example
     * // Create many Emails
     * const email = await prisma.email.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Emails and only return the `id`
     * const emailWithIdOnly = await prisma.email.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EmailCreateManyAndReturnArgs>(args?: SelectSubset<T, EmailCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmailPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Email.
     * @param {EmailDeleteArgs} args - Arguments to delete one Email.
     * @example
     * // Delete one Email
     * const Email = await prisma.email.delete({
     *   where: {
     *     // ... filter to delete one Email
     *   }
     * })
     * 
     */
    delete<T extends EmailDeleteArgs>(args: SelectSubset<T, EmailDeleteArgs<ExtArgs>>): Prisma__EmailClient<$Result.GetResult<Prisma.$EmailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Email.
     * @param {EmailUpdateArgs} args - Arguments to update one Email.
     * @example
     * // Update one Email
     * const email = await prisma.email.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EmailUpdateArgs>(args: SelectSubset<T, EmailUpdateArgs<ExtArgs>>): Prisma__EmailClient<$Result.GetResult<Prisma.$EmailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Emails.
     * @param {EmailDeleteManyArgs} args - Arguments to filter Emails to delete.
     * @example
     * // Delete a few Emails
     * const { count } = await prisma.email.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EmailDeleteManyArgs>(args?: SelectSubset<T, EmailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Emails
     * const email = await prisma.email.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EmailUpdateManyArgs>(args: SelectSubset<T, EmailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Emails and returns the data updated in the database.
     * @param {EmailUpdateManyAndReturnArgs} args - Arguments to update many Emails.
     * @example
     * // Update many Emails
     * const email = await prisma.email.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Emails and only return the `id`
     * const emailWithIdOnly = await prisma.email.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EmailUpdateManyAndReturnArgs>(args: SelectSubset<T, EmailUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmailPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Email.
     * @param {EmailUpsertArgs} args - Arguments to update or create a Email.
     * @example
     * // Update or create a Email
     * const email = await prisma.email.upsert({
     *   create: {
     *     // ... data to create a Email
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Email we want to update
     *   }
     * })
     */
    upsert<T extends EmailUpsertArgs>(args: SelectSubset<T, EmailUpsertArgs<ExtArgs>>): Prisma__EmailClient<$Result.GetResult<Prisma.$EmailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Emails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailCountArgs} args - Arguments to filter Emails to count.
     * @example
     * // Count the number of Emails
     * const count = await prisma.email.count({
     *   where: {
     *     // ... the filter for the Emails we want to count
     *   }
     * })
    **/
    count<T extends EmailCountArgs>(
      args?: Subset<T, EmailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Email.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmailAggregateArgs>(args: Subset<T, EmailAggregateArgs>): Prisma.PrismaPromise<GetEmailAggregateType<T>>

    /**
     * Group by Email.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EmailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EmailGroupByArgs['orderBy'] }
        : { orderBy?: EmailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EmailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Email model
   */
  readonly fields: EmailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Email.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EmailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Email model
   */
  interface EmailFieldRefs {
    readonly id: FieldRef<"Email", 'BigInt'>
    readonly email: FieldRef<"Email", 'String'>
    readonly user_id: FieldRef<"Email", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * Email findUnique
   */
  export type EmailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email
     */
    select?: EmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Email
     */
    omit?: EmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailInclude<ExtArgs> | null
    /**
     * Filter, which Email to fetch.
     */
    where: EmailWhereUniqueInput
  }

  /**
   * Email findUniqueOrThrow
   */
  export type EmailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email
     */
    select?: EmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Email
     */
    omit?: EmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailInclude<ExtArgs> | null
    /**
     * Filter, which Email to fetch.
     */
    where: EmailWhereUniqueInput
  }

  /**
   * Email findFirst
   */
  export type EmailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email
     */
    select?: EmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Email
     */
    omit?: EmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailInclude<ExtArgs> | null
    /**
     * Filter, which Email to fetch.
     */
    where?: EmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emails to fetch.
     */
    orderBy?: EmailOrderByWithRelationInput | EmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Emails.
     */
    cursor?: EmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Emails.
     */
    distinct?: EmailScalarFieldEnum | EmailScalarFieldEnum[]
  }

  /**
   * Email findFirstOrThrow
   */
  export type EmailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email
     */
    select?: EmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Email
     */
    omit?: EmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailInclude<ExtArgs> | null
    /**
     * Filter, which Email to fetch.
     */
    where?: EmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emails to fetch.
     */
    orderBy?: EmailOrderByWithRelationInput | EmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Emails.
     */
    cursor?: EmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Emails.
     */
    distinct?: EmailScalarFieldEnum | EmailScalarFieldEnum[]
  }

  /**
   * Email findMany
   */
  export type EmailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email
     */
    select?: EmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Email
     */
    omit?: EmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailInclude<ExtArgs> | null
    /**
     * Filter, which Emails to fetch.
     */
    where?: EmailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Emails to fetch.
     */
    orderBy?: EmailOrderByWithRelationInput | EmailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Emails.
     */
    cursor?: EmailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Emails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Emails.
     */
    skip?: number
    distinct?: EmailScalarFieldEnum | EmailScalarFieldEnum[]
  }

  /**
   * Email create
   */
  export type EmailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email
     */
    select?: EmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Email
     */
    omit?: EmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailInclude<ExtArgs> | null
    /**
     * The data needed to create a Email.
     */
    data: XOR<EmailCreateInput, EmailUncheckedCreateInput>
  }

  /**
   * Email createMany
   */
  export type EmailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Emails.
     */
    data: EmailCreateManyInput | EmailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Email createManyAndReturn
   */
  export type EmailCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email
     */
    select?: EmailSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Email
     */
    omit?: EmailOmit<ExtArgs> | null
    /**
     * The data used to create many Emails.
     */
    data: EmailCreateManyInput | EmailCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Email update
   */
  export type EmailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email
     */
    select?: EmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Email
     */
    omit?: EmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailInclude<ExtArgs> | null
    /**
     * The data needed to update a Email.
     */
    data: XOR<EmailUpdateInput, EmailUncheckedUpdateInput>
    /**
     * Choose, which Email to update.
     */
    where: EmailWhereUniqueInput
  }

  /**
   * Email updateMany
   */
  export type EmailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Emails.
     */
    data: XOR<EmailUpdateManyMutationInput, EmailUncheckedUpdateManyInput>
    /**
     * Filter which Emails to update
     */
    where?: EmailWhereInput
    /**
     * Limit how many Emails to update.
     */
    limit?: number
  }

  /**
   * Email updateManyAndReturn
   */
  export type EmailUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email
     */
    select?: EmailSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Email
     */
    omit?: EmailOmit<ExtArgs> | null
    /**
     * The data used to update Emails.
     */
    data: XOR<EmailUpdateManyMutationInput, EmailUncheckedUpdateManyInput>
    /**
     * Filter which Emails to update
     */
    where?: EmailWhereInput
    /**
     * Limit how many Emails to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Email upsert
   */
  export type EmailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email
     */
    select?: EmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Email
     */
    omit?: EmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailInclude<ExtArgs> | null
    /**
     * The filter to search for the Email to update in case it exists.
     */
    where: EmailWhereUniqueInput
    /**
     * In case the Email found by the `where` argument doesn't exist, create a new Email with this data.
     */
    create: XOR<EmailCreateInput, EmailUncheckedCreateInput>
    /**
     * In case the Email was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EmailUpdateInput, EmailUncheckedUpdateInput>
  }

  /**
   * Email delete
   */
  export type EmailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email
     */
    select?: EmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Email
     */
    omit?: EmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailInclude<ExtArgs> | null
    /**
     * Filter which Email to delete.
     */
    where: EmailWhereUniqueInput
  }

  /**
   * Email deleteMany
   */
  export type EmailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Emails to delete
     */
    where?: EmailWhereInput
    /**
     * Limit how many Emails to delete.
     */
    limit?: number
  }

  /**
   * Email without action
   */
  export type EmailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Email
     */
    select?: EmailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Email
     */
    omit?: EmailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmailInclude<ExtArgs> | null
  }


  /**
   * Model Address
   */

  export type AggregateAddress = {
    _count: AddressCountAggregateOutputType | null
    _avg: AddressAvgAggregateOutputType | null
    _sum: AddressSumAggregateOutputType | null
    _min: AddressMinAggregateOutputType | null
    _max: AddressMaxAggregateOutputType | null
  }

  export type AddressAvgAggregateOutputType = {
    id: number | null
<<<<<<< HEAD
    address_value: number | null
=======
    addressValue: number | null
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user_id: number | null
  }

  export type AddressSumAggregateOutputType = {
    id: bigint | null
<<<<<<< HEAD
    address_value: bigint | null
=======
    addressValue: bigint | null
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user_id: bigint | null
  }

  export type AddressMinAggregateOutputType = {
    id: bigint | null
    name: string | null
<<<<<<< HEAD
    address_value: bigint | null
=======
    addressValue: bigint | null
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat: string | null
    long: string | null
    user_id: bigint | null
    is_active: boolean | null
  }

  export type AddressMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
<<<<<<< HEAD
    address_value: bigint | null
=======
    addressValue: bigint | null
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat: string | null
    long: string | null
    user_id: bigint | null
    is_active: boolean | null
  }

  export type AddressCountAggregateOutputType = {
    id: number
    name: number
<<<<<<< HEAD
    address_value: number
=======
    addressValue: number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat: number
    long: number
    user_id: number
    is_active: number
    _all: number
  }


  export type AddressAvgAggregateInputType = {
    id?: true
<<<<<<< HEAD
    address_value?: true
=======
    addressValue?: true
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user_id?: true
  }

  export type AddressSumAggregateInputType = {
    id?: true
<<<<<<< HEAD
    address_value?: true
=======
    addressValue?: true
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user_id?: true
  }

  export type AddressMinAggregateInputType = {
    id?: true
    name?: true
<<<<<<< HEAD
    address_value?: true
=======
    addressValue?: true
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: true
    long?: true
    user_id?: true
    is_active?: true
  }

  export type AddressMaxAggregateInputType = {
    id?: true
    name?: true
<<<<<<< HEAD
    address_value?: true
=======
    addressValue?: true
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: true
    long?: true
    user_id?: true
    is_active?: true
  }

  export type AddressCountAggregateInputType = {
    id?: true
    name?: true
<<<<<<< HEAD
    address_value?: true
=======
    addressValue?: true
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: true
    long?: true
    user_id?: true
    is_active?: true
    _all?: true
  }

  export type AddressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Address to aggregate.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Addresses
    **/
    _count?: true | AddressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AddressAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AddressSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AddressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AddressMaxAggregateInputType
  }

  export type GetAddressAggregateType<T extends AddressAggregateArgs> = {
        [P in keyof T & keyof AggregateAddress]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAddress[P]>
      : GetScalarType<T[P], AggregateAddress[P]>
  }




  export type AddressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AddressWhereInput
    orderBy?: AddressOrderByWithAggregationInput | AddressOrderByWithAggregationInput[]
    by: AddressScalarFieldEnum[] | AddressScalarFieldEnum
    having?: AddressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AddressCountAggregateInputType | true
    _avg?: AddressAvgAggregateInputType
    _sum?: AddressSumAggregateInputType
    _min?: AddressMinAggregateInputType
    _max?: AddressMaxAggregateInputType
  }

  export type AddressGroupByOutputType = {
    id: bigint
    name: string
<<<<<<< HEAD
    address_value: bigint
=======
    addressValue: bigint
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat: string
    long: string
    user_id: bigint
    is_active: boolean
    _count: AddressCountAggregateOutputType | null
    _avg: AddressAvgAggregateOutputType | null
    _sum: AddressSumAggregateOutputType | null
    _min: AddressMinAggregateOutputType | null
    _max: AddressMaxAggregateOutputType | null
  }

  type GetAddressGroupByPayload<T extends AddressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AddressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AddressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AddressGroupByOutputType[P]>
            : GetScalarType<T[P], AddressGroupByOutputType[P]>
        }
      >
    >


  export type AddressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
<<<<<<< HEAD
    address_value?: boolean
=======
    addressValue?: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: boolean
    long?: boolean
    user_id?: boolean
    is_active?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    products?: boolean | Address$productsArgs<ExtArgs>
    _count?: boolean | AddressCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["address"]>

  export type AddressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
<<<<<<< HEAD
    address_value?: boolean
=======
    addressValue?: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: boolean
    long?: boolean
    user_id?: boolean
    is_active?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["address"]>

  export type AddressSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
<<<<<<< HEAD
    address_value?: boolean
=======
    addressValue?: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: boolean
    long?: boolean
    user_id?: boolean
    is_active?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["address"]>

  export type AddressSelectScalar = {
    id?: boolean
    name?: boolean
<<<<<<< HEAD
    address_value?: boolean
=======
    addressValue?: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: boolean
    long?: boolean
    user_id?: boolean
    is_active?: boolean
  }

<<<<<<< HEAD
  export type AddressOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "address_value" | "lat" | "long" | "user_id" | "is_active", ExtArgs["result"]["address"]>
=======
  export type AddressOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "addressValue" | "lat" | "long" | "user_id" | "is_active", ExtArgs["result"]["address"]>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type AddressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    products?: boolean | Address$productsArgs<ExtArgs>
    _count?: boolean | AddressCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AddressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AddressIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AddressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Address"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
<<<<<<< HEAD
      address_value: bigint
=======
      addressValue: bigint
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
      lat: string
      long: string
      user_id: bigint
      is_active: boolean
    }, ExtArgs["result"]["address"]>
    composites: {}
  }

  type AddressGetPayload<S extends boolean | null | undefined | AddressDefaultArgs> = $Result.GetResult<Prisma.$AddressPayload, S>

  type AddressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AddressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AddressCountAggregateInputType | true
    }

  export interface AddressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Address'], meta: { name: 'Address' } }
    /**
     * Find zero or one Address that matches the filter.
     * @param {AddressFindUniqueArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AddressFindUniqueArgs>(args: SelectSubset<T, AddressFindUniqueArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Address that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AddressFindUniqueOrThrowArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AddressFindUniqueOrThrowArgs>(args: SelectSubset<T, AddressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Address that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressFindFirstArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AddressFindFirstArgs>(args?: SelectSubset<T, AddressFindFirstArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Address that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressFindFirstOrThrowArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AddressFindFirstOrThrowArgs>(args?: SelectSubset<T, AddressFindFirstOrThrowArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Addresses
     * const addresses = await prisma.address.findMany()
     * 
     * // Get first 10 Addresses
     * const addresses = await prisma.address.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const addressWithIdOnly = await prisma.address.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AddressFindManyArgs>(args?: SelectSubset<T, AddressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Address.
     * @param {AddressCreateArgs} args - Arguments to create a Address.
     * @example
     * // Create one Address
     * const Address = await prisma.address.create({
     *   data: {
     *     // ... data to create a Address
     *   }
     * })
     * 
     */
    create<T extends AddressCreateArgs>(args: SelectSubset<T, AddressCreateArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Addresses.
     * @param {AddressCreateManyArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const address = await prisma.address.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AddressCreateManyArgs>(args?: SelectSubset<T, AddressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Addresses and returns the data saved in the database.
     * @param {AddressCreateManyAndReturnArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const address = await prisma.address.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Addresses and only return the `id`
     * const addressWithIdOnly = await prisma.address.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AddressCreateManyAndReturnArgs>(args?: SelectSubset<T, AddressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Address.
     * @param {AddressDeleteArgs} args - Arguments to delete one Address.
     * @example
     * // Delete one Address
     * const Address = await prisma.address.delete({
     *   where: {
     *     // ... filter to delete one Address
     *   }
     * })
     * 
     */
    delete<T extends AddressDeleteArgs>(args: SelectSubset<T, AddressDeleteArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Address.
     * @param {AddressUpdateArgs} args - Arguments to update one Address.
     * @example
     * // Update one Address
     * const address = await prisma.address.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AddressUpdateArgs>(args: SelectSubset<T, AddressUpdateArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Addresses.
     * @param {AddressDeleteManyArgs} args - Arguments to filter Addresses to delete.
     * @example
     * // Delete a few Addresses
     * const { count } = await prisma.address.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AddressDeleteManyArgs>(args?: SelectSubset<T, AddressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Addresses
     * const address = await prisma.address.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AddressUpdateManyArgs>(args: SelectSubset<T, AddressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses and returns the data updated in the database.
     * @param {AddressUpdateManyAndReturnArgs} args - Arguments to update many Addresses.
     * @example
     * // Update many Addresses
     * const address = await prisma.address.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Addresses and only return the `id`
     * const addressWithIdOnly = await prisma.address.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AddressUpdateManyAndReturnArgs>(args: SelectSubset<T, AddressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Address.
     * @param {AddressUpsertArgs} args - Arguments to update or create a Address.
     * @example
     * // Update or create a Address
     * const address = await prisma.address.upsert({
     *   create: {
     *     // ... data to create a Address
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Address we want to update
     *   }
     * })
     */
    upsert<T extends AddressUpsertArgs>(args: SelectSubset<T, AddressUpsertArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressCountArgs} args - Arguments to filter Addresses to count.
     * @example
     * // Count the number of Addresses
     * const count = await prisma.address.count({
     *   where: {
     *     // ... the filter for the Addresses we want to count
     *   }
     * })
    **/
    count<T extends AddressCountArgs>(
      args?: Subset<T, AddressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AddressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Address.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AddressAggregateArgs>(args: Subset<T, AddressAggregateArgs>): Prisma.PrismaPromise<GetAddressAggregateType<T>>

    /**
     * Group by Address.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AddressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AddressGroupByArgs['orderBy'] }
        : { orderBy?: AddressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AddressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAddressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Address model
   */
  readonly fields: AddressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Address.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AddressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    products<T extends Address$productsArgs<ExtArgs> = {}>(args?: Subset<T, Address$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Address model
   */
  interface AddressFieldRefs {
    readonly id: FieldRef<"Address", 'BigInt'>
    readonly name: FieldRef<"Address", 'String'>
<<<<<<< HEAD
    readonly address_value: FieldRef<"Address", 'BigInt'>
=======
    readonly addressValue: FieldRef<"Address", 'BigInt'>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    readonly lat: FieldRef<"Address", 'String'>
    readonly long: FieldRef<"Address", 'String'>
    readonly user_id: FieldRef<"Address", 'BigInt'>
    readonly is_active: FieldRef<"Address", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Address findUnique
   */
  export type AddressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address findUniqueOrThrow
   */
  export type AddressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address findFirst
   */
  export type AddressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Addresses.
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Addresses.
     */
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * Address findFirstOrThrow
   */
  export type AddressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Addresses.
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Addresses.
     */
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * Address findMany
   */
  export type AddressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Addresses to fetch.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Addresses.
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * Address create
   */
  export type AddressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * The data needed to create a Address.
     */
    data: XOR<AddressCreateInput, AddressUncheckedCreateInput>
  }

  /**
   * Address createMany
   */
  export type AddressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Addresses.
     */
    data: AddressCreateManyInput | AddressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Address createManyAndReturn
   */
  export type AddressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * The data used to create many Addresses.
     */
    data: AddressCreateManyInput | AddressCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Address update
   */
  export type AddressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * The data needed to update a Address.
     */
    data: XOR<AddressUpdateInput, AddressUncheckedUpdateInput>
    /**
     * Choose, which Address to update.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address updateMany
   */
  export type AddressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Addresses.
     */
    data: XOR<AddressUpdateManyMutationInput, AddressUncheckedUpdateManyInput>
    /**
     * Filter which Addresses to update
     */
    where?: AddressWhereInput
    /**
     * Limit how many Addresses to update.
     */
    limit?: number
  }

  /**
   * Address updateManyAndReturn
   */
  export type AddressUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * The data used to update Addresses.
     */
    data: XOR<AddressUpdateManyMutationInput, AddressUncheckedUpdateManyInput>
    /**
     * Filter which Addresses to update
     */
    where?: AddressWhereInput
    /**
     * Limit how many Addresses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Address upsert
   */
  export type AddressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * The filter to search for the Address to update in case it exists.
     */
    where: AddressWhereUniqueInput
    /**
     * In case the Address found by the `where` argument doesn't exist, create a new Address with this data.
     */
    create: XOR<AddressCreateInput, AddressUncheckedCreateInput>
    /**
     * In case the Address was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AddressUpdateInput, AddressUncheckedUpdateInput>
  }

  /**
   * Address delete
   */
  export type AddressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter which Address to delete.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address deleteMany
   */
  export type AddressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Addresses to delete
     */
    where?: AddressWhereInput
    /**
     * Limit how many Addresses to delete.
     */
    limit?: number
  }

  /**
   * Address.products
   */
  export type Address$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Address without action
   */
  export type AddressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
  }


  /**
   * Model Language
   */

  export type AggregateLanguage = {
    _count: LanguageCountAggregateOutputType | null
    _avg: LanguageAvgAggregateOutputType | null
    _sum: LanguageSumAggregateOutputType | null
    _min: LanguageMinAggregateOutputType | null
    _max: LanguageMaxAggregateOutputType | null
  }

  export type LanguageAvgAggregateOutputType = {
    id: number | null
  }

  export type LanguageSumAggregateOutputType = {
    id: bigint | null
  }

  export type LanguageMinAggregateOutputType = {
    id: bigint | null
    name: string | null
<<<<<<< HEAD
    flag_url: string | null
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type LanguageMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
<<<<<<< HEAD
    flag_url: string | null
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type LanguageCountAggregateOutputType = {
    id: number
    name: number
<<<<<<< HEAD
    flag_url: number
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _all: number
  }


  export type LanguageAvgAggregateInputType = {
    id?: true
  }

  export type LanguageSumAggregateInputType = {
    id?: true
  }

  export type LanguageMinAggregateInputType = {
    id?: true
    name?: true
<<<<<<< HEAD
    flag_url?: true
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type LanguageMaxAggregateInputType = {
    id?: true
    name?: true
<<<<<<< HEAD
    flag_url?: true
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type LanguageCountAggregateInputType = {
    id?: true
    name?: true
<<<<<<< HEAD
    flag_url?: true
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _all?: true
  }

  export type LanguageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Language to aggregate.
     */
    where?: LanguageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Languages to fetch.
     */
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LanguageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Languages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Languages
    **/
    _count?: true | LanguageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LanguageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LanguageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LanguageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LanguageMaxAggregateInputType
  }

  export type GetLanguageAggregateType<T extends LanguageAggregateArgs> = {
        [P in keyof T & keyof AggregateLanguage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLanguage[P]>
      : GetScalarType<T[P], AggregateLanguage[P]>
  }




  export type LanguageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LanguageWhereInput
    orderBy?: LanguageOrderByWithAggregationInput | LanguageOrderByWithAggregationInput[]
    by: LanguageScalarFieldEnum[] | LanguageScalarFieldEnum
    having?: LanguageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LanguageCountAggregateInputType | true
    _avg?: LanguageAvgAggregateInputType
    _sum?: LanguageSumAggregateInputType
    _min?: LanguageMinAggregateInputType
    _max?: LanguageMaxAggregateInputType
  }

  export type LanguageGroupByOutputType = {
    id: bigint
    name: string
<<<<<<< HEAD
    flag_url: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _count: LanguageCountAggregateOutputType | null
    _avg: LanguageAvgAggregateOutputType | null
    _sum: LanguageSumAggregateOutputType | null
    _min: LanguageMinAggregateOutputType | null
    _max: LanguageMaxAggregateOutputType | null
  }

  type GetLanguageGroupByPayload<T extends LanguageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LanguageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LanguageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LanguageGroupByOutputType[P]>
            : GetScalarType<T[P], LanguageGroupByOutputType[P]>
        }
      >
    >


  export type LanguageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
<<<<<<< HEAD
    flag_url?: boolean
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    users?: boolean | Language$usersArgs<ExtArgs>
    admins?: boolean | Language$adminsArgs<ExtArgs>
    _count?: boolean | LanguageCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["language"]>

  export type LanguageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
<<<<<<< HEAD
    flag_url?: boolean
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }, ExtArgs["result"]["language"]>

  export type LanguageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
<<<<<<< HEAD
    flag_url?: boolean
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }, ExtArgs["result"]["language"]>

  export type LanguageSelectScalar = {
    id?: boolean
    name?: boolean
<<<<<<< HEAD
    flag_url?: boolean
  }

  export type LanguageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "flag_url", ExtArgs["result"]["language"]>
=======
  }

  export type LanguageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["language"]>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type LanguageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Language$usersArgs<ExtArgs>
    admins?: boolean | Language$adminsArgs<ExtArgs>
    _count?: boolean | LanguageCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LanguageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type LanguageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $LanguagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Language"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
      admins: Prisma.$AdminPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
<<<<<<< HEAD
      flag_url: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    }, ExtArgs["result"]["language"]>
    composites: {}
  }

  type LanguageGetPayload<S extends boolean | null | undefined | LanguageDefaultArgs> = $Result.GetResult<Prisma.$LanguagePayload, S>

  type LanguageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LanguageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LanguageCountAggregateInputType | true
    }

  export interface LanguageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Language'], meta: { name: 'Language' } }
    /**
     * Find zero or one Language that matches the filter.
     * @param {LanguageFindUniqueArgs} args - Arguments to find a Language
     * @example
     * // Get one Language
     * const language = await prisma.language.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LanguageFindUniqueArgs>(args: SelectSubset<T, LanguageFindUniqueArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Language that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LanguageFindUniqueOrThrowArgs} args - Arguments to find a Language
     * @example
     * // Get one Language
     * const language = await prisma.language.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LanguageFindUniqueOrThrowArgs>(args: SelectSubset<T, LanguageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Language that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageFindFirstArgs} args - Arguments to find a Language
     * @example
     * // Get one Language
     * const language = await prisma.language.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LanguageFindFirstArgs>(args?: SelectSubset<T, LanguageFindFirstArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Language that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageFindFirstOrThrowArgs} args - Arguments to find a Language
     * @example
     * // Get one Language
     * const language = await prisma.language.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LanguageFindFirstOrThrowArgs>(args?: SelectSubset<T, LanguageFindFirstOrThrowArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Languages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Languages
     * const languages = await prisma.language.findMany()
     * 
     * // Get first 10 Languages
     * const languages = await prisma.language.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const languageWithIdOnly = await prisma.language.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LanguageFindManyArgs>(args?: SelectSubset<T, LanguageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Language.
     * @param {LanguageCreateArgs} args - Arguments to create a Language.
     * @example
     * // Create one Language
     * const Language = await prisma.language.create({
     *   data: {
     *     // ... data to create a Language
     *   }
     * })
     * 
     */
    create<T extends LanguageCreateArgs>(args: SelectSubset<T, LanguageCreateArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Languages.
     * @param {LanguageCreateManyArgs} args - Arguments to create many Languages.
     * @example
     * // Create many Languages
     * const language = await prisma.language.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LanguageCreateManyArgs>(args?: SelectSubset<T, LanguageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Languages and returns the data saved in the database.
     * @param {LanguageCreateManyAndReturnArgs} args - Arguments to create many Languages.
     * @example
     * // Create many Languages
     * const language = await prisma.language.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Languages and only return the `id`
     * const languageWithIdOnly = await prisma.language.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LanguageCreateManyAndReturnArgs>(args?: SelectSubset<T, LanguageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Language.
     * @param {LanguageDeleteArgs} args - Arguments to delete one Language.
     * @example
     * // Delete one Language
     * const Language = await prisma.language.delete({
     *   where: {
     *     // ... filter to delete one Language
     *   }
     * })
     * 
     */
    delete<T extends LanguageDeleteArgs>(args: SelectSubset<T, LanguageDeleteArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Language.
     * @param {LanguageUpdateArgs} args - Arguments to update one Language.
     * @example
     * // Update one Language
     * const language = await prisma.language.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LanguageUpdateArgs>(args: SelectSubset<T, LanguageUpdateArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Languages.
     * @param {LanguageDeleteManyArgs} args - Arguments to filter Languages to delete.
     * @example
     * // Delete a few Languages
     * const { count } = await prisma.language.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LanguageDeleteManyArgs>(args?: SelectSubset<T, LanguageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Languages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Languages
     * const language = await prisma.language.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LanguageUpdateManyArgs>(args: SelectSubset<T, LanguageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Languages and returns the data updated in the database.
     * @param {LanguageUpdateManyAndReturnArgs} args - Arguments to update many Languages.
     * @example
     * // Update many Languages
     * const language = await prisma.language.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Languages and only return the `id`
     * const languageWithIdOnly = await prisma.language.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LanguageUpdateManyAndReturnArgs>(args: SelectSubset<T, LanguageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Language.
     * @param {LanguageUpsertArgs} args - Arguments to update or create a Language.
     * @example
     * // Update or create a Language
     * const language = await prisma.language.upsert({
     *   create: {
     *     // ... data to create a Language
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Language we want to update
     *   }
     * })
     */
    upsert<T extends LanguageUpsertArgs>(args: SelectSubset<T, LanguageUpsertArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Languages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageCountArgs} args - Arguments to filter Languages to count.
     * @example
     * // Count the number of Languages
     * const count = await prisma.language.count({
     *   where: {
     *     // ... the filter for the Languages we want to count
     *   }
     * })
    **/
    count<T extends LanguageCountArgs>(
      args?: Subset<T, LanguageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LanguageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Language.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LanguageAggregateArgs>(args: Subset<T, LanguageAggregateArgs>): Prisma.PrismaPromise<GetLanguageAggregateType<T>>

    /**
     * Group by Language.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LanguageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LanguageGroupByArgs['orderBy'] }
        : { orderBy?: LanguageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LanguageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLanguageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Language model
   */
  readonly fields: LanguageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Language.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LanguageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Language$usersArgs<ExtArgs> = {}>(args?: Subset<T, Language$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    admins<T extends Language$adminsArgs<ExtArgs> = {}>(args?: Subset<T, Language$adminsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Language model
   */
  interface LanguageFieldRefs {
    readonly id: FieldRef<"Language", 'BigInt'>
    readonly name: FieldRef<"Language", 'String'>
<<<<<<< HEAD
    readonly flag_url: FieldRef<"Language", 'String'>
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }
    

  // Custom InputTypes
  /**
   * Language findUnique
   */
  export type LanguageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Language to fetch.
     */
    where: LanguageWhereUniqueInput
  }

  /**
   * Language findUniqueOrThrow
   */
  export type LanguageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Language to fetch.
     */
    where: LanguageWhereUniqueInput
  }

  /**
   * Language findFirst
   */
  export type LanguageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Language to fetch.
     */
    where?: LanguageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Languages to fetch.
     */
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Languages.
     */
    cursor?: LanguageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Languages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Languages.
     */
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * Language findFirstOrThrow
   */
  export type LanguageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Language to fetch.
     */
    where?: LanguageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Languages to fetch.
     */
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Languages.
     */
    cursor?: LanguageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Languages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Languages.
     */
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * Language findMany
   */
  export type LanguageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Languages to fetch.
     */
    where?: LanguageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Languages to fetch.
     */
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Languages.
     */
    cursor?: LanguageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Languages.
     */
    skip?: number
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * Language create
   */
  export type LanguageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * The data needed to create a Language.
     */
    data: XOR<LanguageCreateInput, LanguageUncheckedCreateInput>
  }

  /**
   * Language createMany
   */
  export type LanguageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Languages.
     */
    data: LanguageCreateManyInput | LanguageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Language createManyAndReturn
   */
  export type LanguageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * The data used to create many Languages.
     */
    data: LanguageCreateManyInput | LanguageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Language update
   */
  export type LanguageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * The data needed to update a Language.
     */
    data: XOR<LanguageUpdateInput, LanguageUncheckedUpdateInput>
    /**
     * Choose, which Language to update.
     */
    where: LanguageWhereUniqueInput
  }

  /**
   * Language updateMany
   */
  export type LanguageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Languages.
     */
    data: XOR<LanguageUpdateManyMutationInput, LanguageUncheckedUpdateManyInput>
    /**
     * Filter which Languages to update
     */
    where?: LanguageWhereInput
    /**
     * Limit how many Languages to update.
     */
    limit?: number
  }

  /**
   * Language updateManyAndReturn
   */
  export type LanguageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * The data used to update Languages.
     */
    data: XOR<LanguageUpdateManyMutationInput, LanguageUncheckedUpdateManyInput>
    /**
     * Filter which Languages to update
     */
    where?: LanguageWhereInput
    /**
     * Limit how many Languages to update.
     */
    limit?: number
  }

  /**
   * Language upsert
   */
  export type LanguageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * The filter to search for the Language to update in case it exists.
     */
    where: LanguageWhereUniqueInput
    /**
     * In case the Language found by the `where` argument doesn't exist, create a new Language with this data.
     */
    create: XOR<LanguageCreateInput, LanguageUncheckedCreateInput>
    /**
     * In case the Language was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LanguageUpdateInput, LanguageUncheckedUpdateInput>
  }

  /**
   * Language delete
   */
  export type LanguageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter which Language to delete.
     */
    where: LanguageWhereUniqueInput
  }

  /**
   * Language deleteMany
   */
  export type LanguageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Languages to delete
     */
    where?: LanguageWhereInput
    /**
     * Limit how many Languages to delete.
     */
    limit?: number
  }

  /**
   * Language.users
   */
  export type Language$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Language.admins
   */
  export type Language$adminsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    where?: AdminWhereInput
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    cursor?: AdminWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Language without action
   */
  export type LanguageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
  }


  /**
   * Model FavouriteItem
   */

  export type AggregateFavouriteItem = {
    _count: FavouriteItemCountAggregateOutputType | null
    _avg: FavouriteItemAvgAggregateOutputType | null
    _sum: FavouriteItemSumAggregateOutputType | null
    _min: FavouriteItemMinAggregateOutputType | null
    _max: FavouriteItemMaxAggregateOutputType | null
  }

  export type FavouriteItemAvgAggregateOutputType = {
    id: number | null
    product_id: number | null
    user_id: number | null
  }

  export type FavouriteItemSumAggregateOutputType = {
    id: bigint | null
    product_id: bigint | null
    user_id: bigint | null
  }

  export type FavouriteItemMinAggregateOutputType = {
    id: bigint | null
    product_id: bigint | null
    user_id: bigint | null
  }

  export type FavouriteItemMaxAggregateOutputType = {
    id: bigint | null
    product_id: bigint | null
    user_id: bigint | null
  }

  export type FavouriteItemCountAggregateOutputType = {
    id: number
    product_id: number
    user_id: number
    _all: number
  }


  export type FavouriteItemAvgAggregateInputType = {
    id?: true
    product_id?: true
    user_id?: true
  }

  export type FavouriteItemSumAggregateInputType = {
    id?: true
    product_id?: true
    user_id?: true
  }

  export type FavouriteItemMinAggregateInputType = {
    id?: true
    product_id?: true
    user_id?: true
  }

  export type FavouriteItemMaxAggregateInputType = {
    id?: true
    product_id?: true
    user_id?: true
  }

  export type FavouriteItemCountAggregateInputType = {
    id?: true
    product_id?: true
    user_id?: true
    _all?: true
  }

  export type FavouriteItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FavouriteItem to aggregate.
     */
    where?: FavouriteItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavouriteItems to fetch.
     */
    orderBy?: FavouriteItemOrderByWithRelationInput | FavouriteItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavouriteItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavouriteItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavouriteItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FavouriteItems
    **/
    _count?: true | FavouriteItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FavouriteItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FavouriteItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavouriteItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavouriteItemMaxAggregateInputType
  }

  export type GetFavouriteItemAggregateType<T extends FavouriteItemAggregateArgs> = {
        [P in keyof T & keyof AggregateFavouriteItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavouriteItem[P]>
      : GetScalarType<T[P], AggregateFavouriteItem[P]>
  }




  export type FavouriteItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavouriteItemWhereInput
    orderBy?: FavouriteItemOrderByWithAggregationInput | FavouriteItemOrderByWithAggregationInput[]
    by: FavouriteItemScalarFieldEnum[] | FavouriteItemScalarFieldEnum
    having?: FavouriteItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavouriteItemCountAggregateInputType | true
    _avg?: FavouriteItemAvgAggregateInputType
    _sum?: FavouriteItemSumAggregateInputType
    _min?: FavouriteItemMinAggregateInputType
    _max?: FavouriteItemMaxAggregateInputType
  }

  export type FavouriteItemGroupByOutputType = {
    id: bigint
    product_id: bigint
    user_id: bigint
    _count: FavouriteItemCountAggregateOutputType | null
    _avg: FavouriteItemAvgAggregateOutputType | null
    _sum: FavouriteItemSumAggregateOutputType | null
    _min: FavouriteItemMinAggregateOutputType | null
    _max: FavouriteItemMaxAggregateOutputType | null
  }

  type GetFavouriteItemGroupByPayload<T extends FavouriteItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavouriteItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavouriteItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavouriteItemGroupByOutputType[P]>
            : GetScalarType<T[P], FavouriteItemGroupByOutputType[P]>
        }
      >
    >


  export type FavouriteItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    user_id?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favouriteItem"]>

  export type FavouriteItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    user_id?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favouriteItem"]>

  export type FavouriteItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    user_id?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favouriteItem"]>

  export type FavouriteItemSelectScalar = {
    id?: boolean
    product_id?: boolean
    user_id?: boolean
  }

  export type FavouriteItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "product_id" | "user_id", ExtArgs["result"]["favouriteItem"]>
  export type FavouriteItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type FavouriteItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type FavouriteItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $FavouriteItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FavouriteItem"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      product_id: bigint
      user_id: bigint
    }, ExtArgs["result"]["favouriteItem"]>
    composites: {}
  }

  type FavouriteItemGetPayload<S extends boolean | null | undefined | FavouriteItemDefaultArgs> = $Result.GetResult<Prisma.$FavouriteItemPayload, S>

  type FavouriteItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FavouriteItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FavouriteItemCountAggregateInputType | true
    }

  export interface FavouriteItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FavouriteItem'], meta: { name: 'FavouriteItem' } }
    /**
     * Find zero or one FavouriteItem that matches the filter.
     * @param {FavouriteItemFindUniqueArgs} args - Arguments to find a FavouriteItem
     * @example
     * // Get one FavouriteItem
     * const favouriteItem = await prisma.favouriteItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavouriteItemFindUniqueArgs>(args: SelectSubset<T, FavouriteItemFindUniqueArgs<ExtArgs>>): Prisma__FavouriteItemClient<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FavouriteItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FavouriteItemFindUniqueOrThrowArgs} args - Arguments to find a FavouriteItem
     * @example
     * // Get one FavouriteItem
     * const favouriteItem = await prisma.favouriteItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavouriteItemFindUniqueOrThrowArgs>(args: SelectSubset<T, FavouriteItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavouriteItemClient<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FavouriteItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavouriteItemFindFirstArgs} args - Arguments to find a FavouriteItem
     * @example
     * // Get one FavouriteItem
     * const favouriteItem = await prisma.favouriteItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavouriteItemFindFirstArgs>(args?: SelectSubset<T, FavouriteItemFindFirstArgs<ExtArgs>>): Prisma__FavouriteItemClient<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FavouriteItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavouriteItemFindFirstOrThrowArgs} args - Arguments to find a FavouriteItem
     * @example
     * // Get one FavouriteItem
     * const favouriteItem = await prisma.favouriteItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavouriteItemFindFirstOrThrowArgs>(args?: SelectSubset<T, FavouriteItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavouriteItemClient<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FavouriteItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavouriteItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FavouriteItems
     * const favouriteItems = await prisma.favouriteItem.findMany()
     * 
     * // Get first 10 FavouriteItems
     * const favouriteItems = await prisma.favouriteItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favouriteItemWithIdOnly = await prisma.favouriteItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FavouriteItemFindManyArgs>(args?: SelectSubset<T, FavouriteItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FavouriteItem.
     * @param {FavouriteItemCreateArgs} args - Arguments to create a FavouriteItem.
     * @example
     * // Create one FavouriteItem
     * const FavouriteItem = await prisma.favouriteItem.create({
     *   data: {
     *     // ... data to create a FavouriteItem
     *   }
     * })
     * 
     */
    create<T extends FavouriteItemCreateArgs>(args: SelectSubset<T, FavouriteItemCreateArgs<ExtArgs>>): Prisma__FavouriteItemClient<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FavouriteItems.
     * @param {FavouriteItemCreateManyArgs} args - Arguments to create many FavouriteItems.
     * @example
     * // Create many FavouriteItems
     * const favouriteItem = await prisma.favouriteItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavouriteItemCreateManyArgs>(args?: SelectSubset<T, FavouriteItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FavouriteItems and returns the data saved in the database.
     * @param {FavouriteItemCreateManyAndReturnArgs} args - Arguments to create many FavouriteItems.
     * @example
     * // Create many FavouriteItems
     * const favouriteItem = await prisma.favouriteItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FavouriteItems and only return the `id`
     * const favouriteItemWithIdOnly = await prisma.favouriteItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FavouriteItemCreateManyAndReturnArgs>(args?: SelectSubset<T, FavouriteItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FavouriteItem.
     * @param {FavouriteItemDeleteArgs} args - Arguments to delete one FavouriteItem.
     * @example
     * // Delete one FavouriteItem
     * const FavouriteItem = await prisma.favouriteItem.delete({
     *   where: {
     *     // ... filter to delete one FavouriteItem
     *   }
     * })
     * 
     */
    delete<T extends FavouriteItemDeleteArgs>(args: SelectSubset<T, FavouriteItemDeleteArgs<ExtArgs>>): Prisma__FavouriteItemClient<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FavouriteItem.
     * @param {FavouriteItemUpdateArgs} args - Arguments to update one FavouriteItem.
     * @example
     * // Update one FavouriteItem
     * const favouriteItem = await prisma.favouriteItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavouriteItemUpdateArgs>(args: SelectSubset<T, FavouriteItemUpdateArgs<ExtArgs>>): Prisma__FavouriteItemClient<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FavouriteItems.
     * @param {FavouriteItemDeleteManyArgs} args - Arguments to filter FavouriteItems to delete.
     * @example
     * // Delete a few FavouriteItems
     * const { count } = await prisma.favouriteItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavouriteItemDeleteManyArgs>(args?: SelectSubset<T, FavouriteItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FavouriteItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavouriteItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FavouriteItems
     * const favouriteItem = await prisma.favouriteItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavouriteItemUpdateManyArgs>(args: SelectSubset<T, FavouriteItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FavouriteItems and returns the data updated in the database.
     * @param {FavouriteItemUpdateManyAndReturnArgs} args - Arguments to update many FavouriteItems.
     * @example
     * // Update many FavouriteItems
     * const favouriteItem = await prisma.favouriteItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FavouriteItems and only return the `id`
     * const favouriteItemWithIdOnly = await prisma.favouriteItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FavouriteItemUpdateManyAndReturnArgs>(args: SelectSubset<T, FavouriteItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FavouriteItem.
     * @param {FavouriteItemUpsertArgs} args - Arguments to update or create a FavouriteItem.
     * @example
     * // Update or create a FavouriteItem
     * const favouriteItem = await prisma.favouriteItem.upsert({
     *   create: {
     *     // ... data to create a FavouriteItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FavouriteItem we want to update
     *   }
     * })
     */
    upsert<T extends FavouriteItemUpsertArgs>(args: SelectSubset<T, FavouriteItemUpsertArgs<ExtArgs>>): Prisma__FavouriteItemClient<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FavouriteItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavouriteItemCountArgs} args - Arguments to filter FavouriteItems to count.
     * @example
     * // Count the number of FavouriteItems
     * const count = await prisma.favouriteItem.count({
     *   where: {
     *     // ... the filter for the FavouriteItems we want to count
     *   }
     * })
    **/
    count<T extends FavouriteItemCountArgs>(
      args?: Subset<T, FavouriteItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavouriteItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FavouriteItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavouriteItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavouriteItemAggregateArgs>(args: Subset<T, FavouriteItemAggregateArgs>): Prisma.PrismaPromise<GetFavouriteItemAggregateType<T>>

    /**
     * Group by FavouriteItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavouriteItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavouriteItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavouriteItemGroupByArgs['orderBy'] }
        : { orderBy?: FavouriteItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavouriteItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavouriteItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FavouriteItem model
   */
  readonly fields: FavouriteItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FavouriteItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavouriteItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FavouriteItem model
   */
  interface FavouriteItemFieldRefs {
    readonly id: FieldRef<"FavouriteItem", 'BigInt'>
    readonly product_id: FieldRef<"FavouriteItem", 'BigInt'>
    readonly user_id: FieldRef<"FavouriteItem", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * FavouriteItem findUnique
   */
  export type FavouriteItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemInclude<ExtArgs> | null
    /**
     * Filter, which FavouriteItem to fetch.
     */
    where: FavouriteItemWhereUniqueInput
  }

  /**
   * FavouriteItem findUniqueOrThrow
   */
  export type FavouriteItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemInclude<ExtArgs> | null
    /**
     * Filter, which FavouriteItem to fetch.
     */
    where: FavouriteItemWhereUniqueInput
  }

  /**
   * FavouriteItem findFirst
   */
  export type FavouriteItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemInclude<ExtArgs> | null
    /**
     * Filter, which FavouriteItem to fetch.
     */
    where?: FavouriteItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavouriteItems to fetch.
     */
    orderBy?: FavouriteItemOrderByWithRelationInput | FavouriteItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FavouriteItems.
     */
    cursor?: FavouriteItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavouriteItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavouriteItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FavouriteItems.
     */
    distinct?: FavouriteItemScalarFieldEnum | FavouriteItemScalarFieldEnum[]
  }

  /**
   * FavouriteItem findFirstOrThrow
   */
  export type FavouriteItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemInclude<ExtArgs> | null
    /**
     * Filter, which FavouriteItem to fetch.
     */
    where?: FavouriteItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavouriteItems to fetch.
     */
    orderBy?: FavouriteItemOrderByWithRelationInput | FavouriteItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FavouriteItems.
     */
    cursor?: FavouriteItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavouriteItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavouriteItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FavouriteItems.
     */
    distinct?: FavouriteItemScalarFieldEnum | FavouriteItemScalarFieldEnum[]
  }

  /**
   * FavouriteItem findMany
   */
  export type FavouriteItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemInclude<ExtArgs> | null
    /**
     * Filter, which FavouriteItems to fetch.
     */
    where?: FavouriteItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavouriteItems to fetch.
     */
    orderBy?: FavouriteItemOrderByWithRelationInput | FavouriteItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FavouriteItems.
     */
    cursor?: FavouriteItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavouriteItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavouriteItems.
     */
    skip?: number
    distinct?: FavouriteItemScalarFieldEnum | FavouriteItemScalarFieldEnum[]
  }

  /**
   * FavouriteItem create
   */
  export type FavouriteItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemInclude<ExtArgs> | null
    /**
     * The data needed to create a FavouriteItem.
     */
    data: XOR<FavouriteItemCreateInput, FavouriteItemUncheckedCreateInput>
  }

  /**
   * FavouriteItem createMany
   */
  export type FavouriteItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FavouriteItems.
     */
    data: FavouriteItemCreateManyInput | FavouriteItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FavouriteItem createManyAndReturn
   */
  export type FavouriteItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * The data used to create many FavouriteItems.
     */
    data: FavouriteItemCreateManyInput | FavouriteItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FavouriteItem update
   */
  export type FavouriteItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemInclude<ExtArgs> | null
    /**
     * The data needed to update a FavouriteItem.
     */
    data: XOR<FavouriteItemUpdateInput, FavouriteItemUncheckedUpdateInput>
    /**
     * Choose, which FavouriteItem to update.
     */
    where: FavouriteItemWhereUniqueInput
  }

  /**
   * FavouriteItem updateMany
   */
  export type FavouriteItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FavouriteItems.
     */
    data: XOR<FavouriteItemUpdateManyMutationInput, FavouriteItemUncheckedUpdateManyInput>
    /**
     * Filter which FavouriteItems to update
     */
    where?: FavouriteItemWhereInput
    /**
     * Limit how many FavouriteItems to update.
     */
    limit?: number
  }

  /**
   * FavouriteItem updateManyAndReturn
   */
  export type FavouriteItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * The data used to update FavouriteItems.
     */
    data: XOR<FavouriteItemUpdateManyMutationInput, FavouriteItemUncheckedUpdateManyInput>
    /**
     * Filter which FavouriteItems to update
     */
    where?: FavouriteItemWhereInput
    /**
     * Limit how many FavouriteItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FavouriteItem upsert
   */
  export type FavouriteItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemInclude<ExtArgs> | null
    /**
     * The filter to search for the FavouriteItem to update in case it exists.
     */
    where: FavouriteItemWhereUniqueInput
    /**
     * In case the FavouriteItem found by the `where` argument doesn't exist, create a new FavouriteItem with this data.
     */
    create: XOR<FavouriteItemCreateInput, FavouriteItemUncheckedCreateInput>
    /**
     * In case the FavouriteItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavouriteItemUpdateInput, FavouriteItemUncheckedUpdateInput>
  }

  /**
   * FavouriteItem delete
   */
  export type FavouriteItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemInclude<ExtArgs> | null
    /**
     * Filter which FavouriteItem to delete.
     */
    where: FavouriteItemWhereUniqueInput
  }

  /**
   * FavouriteItem deleteMany
   */
  export type FavouriteItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FavouriteItems to delete
     */
    where?: FavouriteItemWhereInput
    /**
     * Limit how many FavouriteItems to delete.
     */
    limit?: number
  }

  /**
   * FavouriteItem without action
   */
  export type FavouriteItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemInclude<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    year: number | null
    brand_id: number | null
    model_id: number | null
    color_id: number | null
    price: number | null
    currency_id: number | null
    address_id: number | null
    phone_id: number | null
    storage: number | null
    ram: number | null
    views: number | null
    admin_id: number | null
  }

  export type ProductSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    year: number | null
    brand_id: bigint | null
    model_id: bigint | null
    color_id: bigint | null
    price: number | null
    currency_id: bigint | null
    address_id: bigint | null
    phone_id: bigint | null
    storage: bigint | null
    ram: bigint | null
    views: bigint | null
    admin_id: bigint | null
  }

  export type ProductMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    title: string | null
    description: string | null
    year: number | null
    brand_id: bigint | null
    model_id: bigint | null
    custom_model: string | null
    color_id: bigint | null
    price: number | null
    floor_price: boolean | null
    currency_id: bigint | null
    is_new: boolean | null
    has_document: boolean | null
    address_id: bigint | null
    phone_id: bigint | null
    storage: bigint | null
    ram: bigint | null
    views: bigint | null
    is_archived: boolean | null
    is_sold: boolean | null
    is_checked: boolean | null
    admin_id: bigint | null
    is_top: boolean | null
    top_expire_date: Date | null
  }

  export type ProductMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    title: string | null
    description: string | null
    year: number | null
    brand_id: bigint | null
    model_id: bigint | null
    custom_model: string | null
    color_id: bigint | null
    price: number | null
    floor_price: boolean | null
    currency_id: bigint | null
    is_new: boolean | null
    has_document: boolean | null
    address_id: bigint | null
    phone_id: bigint | null
    storage: bigint | null
    ram: bigint | null
    views: bigint | null
    is_archived: boolean | null
    is_sold: boolean | null
    is_checked: boolean | null
    admin_id: bigint | null
    is_top: boolean | null
    top_expire_date: Date | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    user_id: number
    title: number
    description: number
    year: number
    brand_id: number
    model_id: number
    custom_model: number
    color_id: number
    price: number
    floor_price: number
    currency_id: number
    is_new: number
    has_document: number
    address_id: number
    phone_id: number
    storage: number
    ram: number
    views: number
    is_archived: number
    is_sold: number
    is_checked: number
    admin_id: number
    is_top: number
    top_expire_date: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    id?: true
    user_id?: true
    year?: true
    brand_id?: true
    model_id?: true
    color_id?: true
    price?: true
    currency_id?: true
    address_id?: true
    phone_id?: true
    storage?: true
    ram?: true
    views?: true
    admin_id?: true
  }

  export type ProductSumAggregateInputType = {
    id?: true
    user_id?: true
    year?: true
    brand_id?: true
    model_id?: true
    color_id?: true
    price?: true
    currency_id?: true
    address_id?: true
    phone_id?: true
    storage?: true
    ram?: true
    views?: true
    admin_id?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    user_id?: true
    title?: true
    description?: true
    year?: true
    brand_id?: true
    model_id?: true
    custom_model?: true
    color_id?: true
    price?: true
    floor_price?: true
    currency_id?: true
    is_new?: true
    has_document?: true
    address_id?: true
    phone_id?: true
    storage?: true
    ram?: true
    views?: true
    is_archived?: true
    is_sold?: true
    is_checked?: true
    admin_id?: true
    is_top?: true
    top_expire_date?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    user_id?: true
    title?: true
    description?: true
    year?: true
    brand_id?: true
    model_id?: true
    custom_model?: true
    color_id?: true
    price?: true
    floor_price?: true
    currency_id?: true
    is_new?: true
    has_document?: true
    address_id?: true
    phone_id?: true
    storage?: true
    ram?: true
    views?: true
    is_archived?: true
    is_sold?: true
    is_checked?: true
    admin_id?: true
    is_top?: true
    top_expire_date?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    user_id?: true
    title?: true
    description?: true
    year?: true
    brand_id?: true
    model_id?: true
    custom_model?: true
    color_id?: true
    price?: true
    floor_price?: true
    currency_id?: true
    is_new?: true
    has_document?: true
    address_id?: true
    phone_id?: true
    storage?: true
    ram?: true
    views?: true
    is_archived?: true
    is_sold?: true
    is_checked?: true
    admin_id?: true
    is_top?: true
    top_expire_date?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: bigint
    user_id: bigint
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id: bigint | null
    model_id: bigint | null
    custom_model: string | null
=======
    brand_id: bigint
    model_id: bigint
    custom_model: string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id: bigint
    price: number
    floor_price: boolean
    currency_id: bigint
    is_new: boolean
    has_document: boolean
    address_id: bigint
    phone_id: bigint
    storage: bigint
    ram: bigint
    views: bigint
    is_archived: boolean
    is_sold: boolean
    is_checked: boolean
<<<<<<< HEAD
    admin_id: bigint | null
    is_top: boolean
    top_expire_date: Date | null
=======
    admin_id: bigint
    is_top: boolean
    top_expire_date: Date
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    year?: boolean
    brand_id?: boolean
    model_id?: boolean
    custom_model?: boolean
    color_id?: boolean
    price?: boolean
    floor_price?: boolean
    currency_id?: boolean
    is_new?: boolean
    has_document?: boolean
    address_id?: boolean
    phone_id?: boolean
    storage?: boolean
    ram?: boolean
    views?: boolean
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    admin_id?: boolean
    is_top?: boolean
    top_expire_date?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
<<<<<<< HEAD
    brand?: boolean | Product$brandArgs<ExtArgs>
    model?: boolean | Product$modelArgs<ExtArgs>
    color?: boolean | ColorDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    contact_phone?: boolean | PhoneDefaultArgs<ExtArgs>
    admin?: boolean | Product$adminArgs<ExtArgs>
    images?: boolean | Product$imagesArgs<ExtArgs>
    favourited_by?: boolean | Product$favourited_byArgs<ExtArgs>
=======
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    model?: boolean | ModelDefaultArgs<ExtArgs>
    color?: boolean | ColorDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    contactPhone?: boolean | PhoneDefaultArgs<ExtArgs>
    admin?: boolean | AdminDefaultArgs<ExtArgs>
    images?: boolean | Product$imagesArgs<ExtArgs>
    favouritedBy?: boolean | Product$favouritedByArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: boolean | Product$commentsArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    year?: boolean
    brand_id?: boolean
    model_id?: boolean
    custom_model?: boolean
    color_id?: boolean
    price?: boolean
    floor_price?: boolean
    currency_id?: boolean
    is_new?: boolean
    has_document?: boolean
    address_id?: boolean
    phone_id?: boolean
    storage?: boolean
    ram?: boolean
    views?: boolean
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    admin_id?: boolean
    is_top?: boolean
    top_expire_date?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
<<<<<<< HEAD
    brand?: boolean | Product$brandArgs<ExtArgs>
    model?: boolean | Product$modelArgs<ExtArgs>
    color?: boolean | ColorDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    contact_phone?: boolean | PhoneDefaultArgs<ExtArgs>
    admin?: boolean | Product$adminArgs<ExtArgs>
=======
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    model?: boolean | ModelDefaultArgs<ExtArgs>
    color?: boolean | ColorDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    contactPhone?: boolean | PhoneDefaultArgs<ExtArgs>
    admin?: boolean | AdminDefaultArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }, ExtArgs["result"]["product"]>

  export type ProductSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    year?: boolean
    brand_id?: boolean
    model_id?: boolean
    custom_model?: boolean
    color_id?: boolean
    price?: boolean
    floor_price?: boolean
    currency_id?: boolean
    is_new?: boolean
    has_document?: boolean
    address_id?: boolean
    phone_id?: boolean
    storage?: boolean
    ram?: boolean
    views?: boolean
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    admin_id?: boolean
    is_top?: boolean
    top_expire_date?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
<<<<<<< HEAD
    brand?: boolean | Product$brandArgs<ExtArgs>
    model?: boolean | Product$modelArgs<ExtArgs>
    color?: boolean | ColorDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    contact_phone?: boolean | PhoneDefaultArgs<ExtArgs>
    admin?: boolean | Product$adminArgs<ExtArgs>
=======
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    model?: boolean | ModelDefaultArgs<ExtArgs>
    color?: boolean | ColorDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    contactPhone?: boolean | PhoneDefaultArgs<ExtArgs>
    admin?: boolean | AdminDefaultArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    year?: boolean
    brand_id?: boolean
    model_id?: boolean
    custom_model?: boolean
    color_id?: boolean
    price?: boolean
    floor_price?: boolean
    currency_id?: boolean
    is_new?: boolean
    has_document?: boolean
    address_id?: boolean
    phone_id?: boolean
    storage?: boolean
    ram?: boolean
    views?: boolean
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    admin_id?: boolean
    is_top?: boolean
    top_expire_date?: boolean
  }

  export type ProductOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "title" | "description" | "year" | "brand_id" | "model_id" | "custom_model" | "color_id" | "price" | "floor_price" | "currency_id" | "is_new" | "has_document" | "address_id" | "phone_id" | "storage" | "ram" | "views" | "is_archived" | "is_sold" | "is_checked" | "admin_id" | "is_top" | "top_expire_date", ExtArgs["result"]["product"]>
  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
<<<<<<< HEAD
    brand?: boolean | Product$brandArgs<ExtArgs>
    model?: boolean | Product$modelArgs<ExtArgs>
    color?: boolean | ColorDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    contact_phone?: boolean | PhoneDefaultArgs<ExtArgs>
    admin?: boolean | Product$adminArgs<ExtArgs>
    images?: boolean | Product$imagesArgs<ExtArgs>
    favourited_by?: boolean | Product$favourited_byArgs<ExtArgs>
=======
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    model?: boolean | ModelDefaultArgs<ExtArgs>
    color?: boolean | ColorDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    contactPhone?: boolean | PhoneDefaultArgs<ExtArgs>
    admin?: boolean | AdminDefaultArgs<ExtArgs>
    images?: boolean | Product$imagesArgs<ExtArgs>
    favouritedBy?: boolean | Product$favouritedByArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: boolean | Product$commentsArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
<<<<<<< HEAD
    brand?: boolean | Product$brandArgs<ExtArgs>
    model?: boolean | Product$modelArgs<ExtArgs>
    color?: boolean | ColorDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    contact_phone?: boolean | PhoneDefaultArgs<ExtArgs>
    admin?: boolean | Product$adminArgs<ExtArgs>
  }
  export type ProductIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    brand?: boolean | Product$brandArgs<ExtArgs>
    model?: boolean | Product$modelArgs<ExtArgs>
    color?: boolean | ColorDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    contact_phone?: boolean | PhoneDefaultArgs<ExtArgs>
    admin?: boolean | Product$adminArgs<ExtArgs>
=======
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    model?: boolean | ModelDefaultArgs<ExtArgs>
    color?: boolean | ColorDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    contactPhone?: boolean | PhoneDefaultArgs<ExtArgs>
    admin?: boolean | AdminDefaultArgs<ExtArgs>
  }
  export type ProductIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    model?: boolean | ModelDefaultArgs<ExtArgs>
    color?: boolean | ColorDefaultArgs<ExtArgs>
    currency?: boolean | CurrencyDefaultArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    contactPhone?: boolean | PhoneDefaultArgs<ExtArgs>
    admin?: boolean | AdminDefaultArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
<<<<<<< HEAD
      brand: Prisma.$BrandPayload<ExtArgs> | null
      model: Prisma.$ModelPayload<ExtArgs> | null
      color: Prisma.$ColorPayload<ExtArgs>
      currency: Prisma.$CurrencyPayload<ExtArgs>
      address: Prisma.$AddressPayload<ExtArgs>
      contact_phone: Prisma.$PhonePayload<ExtArgs>
      admin: Prisma.$AdminPayload<ExtArgs> | null
      images: Prisma.$ProductImagePayload<ExtArgs>[]
      favourited_by: Prisma.$FavouriteItemPayload<ExtArgs>[]
=======
      brand: Prisma.$BrandPayload<ExtArgs>
      model: Prisma.$ModelPayload<ExtArgs>
      color: Prisma.$ColorPayload<ExtArgs>
      currency: Prisma.$CurrencyPayload<ExtArgs>
      address: Prisma.$AddressPayload<ExtArgs>
      contactPhone: Prisma.$PhonePayload<ExtArgs>
      admin: Prisma.$AdminPayload<ExtArgs>
      images: Prisma.$ProductImagePayload<ExtArgs>[]
      favouritedBy: Prisma.$FavouriteItemPayload<ExtArgs>[]
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
      comments: Prisma.$CommentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint
      title: string
      description: string
      year: number
<<<<<<< HEAD
      brand_id: bigint | null
      model_id: bigint | null
      custom_model: string | null
=======
      brand_id: bigint
      model_id: bigint
      custom_model: string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
      color_id: bigint
      price: number
      floor_price: boolean
      currency_id: bigint
      is_new: boolean
      has_document: boolean
      address_id: bigint
      phone_id: bigint
      storage: bigint
      ram: bigint
      views: bigint
      is_archived: boolean
      is_sold: boolean
      is_checked: boolean
<<<<<<< HEAD
      admin_id: bigint | null
      is_top: boolean
      top_expire_date: Date | null
=======
      admin_id: bigint
      is_top: boolean
      top_expire_date: Date
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productWithIdOnly = await prisma.product.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {ProductUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productWithIdOnly = await prisma.product.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
<<<<<<< HEAD
    brand<T extends Product$brandArgs<ExtArgs> = {}>(args?: Subset<T, Product$brandArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    model<T extends Product$modelArgs<ExtArgs> = {}>(args?: Subset<T, Product$modelArgs<ExtArgs>>): Prisma__ModelClient<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    color<T extends ColorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ColorDefaultArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    currency<T extends CurrencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CurrencyDefaultArgs<ExtArgs>>): Prisma__CurrencyClient<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    address<T extends AddressDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AddressDefaultArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    contact_phone<T extends PhoneDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PhoneDefaultArgs<ExtArgs>>): Prisma__PhoneClient<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    admin<T extends Product$adminArgs<ExtArgs> = {}>(args?: Subset<T, Product$adminArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    images<T extends Product$imagesArgs<ExtArgs> = {}>(args?: Subset<T, Product$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favourited_by<T extends Product$favourited_byArgs<ExtArgs> = {}>(args?: Subset<T, Product$favourited_byArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
=======
    brand<T extends BrandDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BrandDefaultArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    model<T extends ModelDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ModelDefaultArgs<ExtArgs>>): Prisma__ModelClient<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    color<T extends ColorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ColorDefaultArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    currency<T extends CurrencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CurrencyDefaultArgs<ExtArgs>>): Prisma__CurrencyClient<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    address<T extends AddressDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AddressDefaultArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    contactPhone<T extends PhoneDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PhoneDefaultArgs<ExtArgs>>): Prisma__PhoneClient<$Result.GetResult<Prisma.$PhonePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    admin<T extends AdminDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AdminDefaultArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    images<T extends Product$imagesArgs<ExtArgs> = {}>(args?: Subset<T, Product$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favouritedBy<T extends Product$favouritedByArgs<ExtArgs> = {}>(args?: Subset<T, Product$favouritedByArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavouriteItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments<T extends Product$commentsArgs<ExtArgs> = {}>(args?: Subset<T, Product$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'BigInt'>
    readonly user_id: FieldRef<"Product", 'BigInt'>
    readonly title: FieldRef<"Product", 'String'>
    readonly description: FieldRef<"Product", 'String'>
    readonly year: FieldRef<"Product", 'Int'>
    readonly brand_id: FieldRef<"Product", 'BigInt'>
    readonly model_id: FieldRef<"Product", 'BigInt'>
    readonly custom_model: FieldRef<"Product", 'String'>
    readonly color_id: FieldRef<"Product", 'BigInt'>
    readonly price: FieldRef<"Product", 'Float'>
    readonly floor_price: FieldRef<"Product", 'Boolean'>
    readonly currency_id: FieldRef<"Product", 'BigInt'>
    readonly is_new: FieldRef<"Product", 'Boolean'>
    readonly has_document: FieldRef<"Product", 'Boolean'>
    readonly address_id: FieldRef<"Product", 'BigInt'>
    readonly phone_id: FieldRef<"Product", 'BigInt'>
    readonly storage: FieldRef<"Product", 'BigInt'>
    readonly ram: FieldRef<"Product", 'BigInt'>
    readonly views: FieldRef<"Product", 'BigInt'>
    readonly is_archived: FieldRef<"Product", 'Boolean'>
    readonly is_sold: FieldRef<"Product", 'Boolean'>
    readonly is_checked: FieldRef<"Product", 'Boolean'>
    readonly admin_id: FieldRef<"Product", 'BigInt'>
    readonly is_top: FieldRef<"Product", 'Boolean'>
    readonly top_expire_date: FieldRef<"Product", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
  }

  /**
   * Product updateManyAndReturn
   */
  export type ProductUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to delete.
     */
    limit?: number
  }

  /**
<<<<<<< HEAD
   * Product.brand
   */
  export type Product$brandArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    where?: BrandWhereInput
  }

  /**
   * Product.model
   */
  export type Product$modelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelInclude<ExtArgs> | null
    where?: ModelWhereInput
  }

  /**
   * Product.admin
   */
  export type Product$adminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    where?: AdminWhereInput
  }

  /**
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
   * Product.images
   */
  export type Product$imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    where?: ProductImageWhereInput
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    cursor?: ProductImageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
<<<<<<< HEAD
   * Product.favourited_by
   */
  export type Product$favourited_byArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
=======
   * Product.favouritedBy
   */
  export type Product$favouritedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    /**
     * Select specific fields to fetch from the FavouriteItem
     */
    select?: FavouriteItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavouriteItem
     */
    omit?: FavouriteItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavouriteItemInclude<ExtArgs> | null
    where?: FavouriteItemWhereInput
    orderBy?: FavouriteItemOrderByWithRelationInput | FavouriteItemOrderByWithRelationInput[]
    cursor?: FavouriteItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavouriteItemScalarFieldEnum | FavouriteItemScalarFieldEnum[]
  }

  /**
   * Product.comments
   */
  export type Product$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model ProductImage
   */

  export type AggregateProductImage = {
    _count: ProductImageCountAggregateOutputType | null
    _avg: ProductImageAvgAggregateOutputType | null
    _sum: ProductImageSumAggregateOutputType | null
    _min: ProductImageMinAggregateOutputType | null
    _max: ProductImageMaxAggregateOutputType | null
  }

  export type ProductImageAvgAggregateOutputType = {
    id: number | null
    product_id: number | null
  }

  export type ProductImageSumAggregateOutputType = {
    id: bigint | null
    product_id: bigint | null
  }

  export type ProductImageMinAggregateOutputType = {
    id: bigint | null
    url: string | null
    product_id: bigint | null
    is_main: boolean | null
  }

  export type ProductImageMaxAggregateOutputType = {
    id: bigint | null
    url: string | null
    product_id: bigint | null
    is_main: boolean | null
  }

  export type ProductImageCountAggregateOutputType = {
    id: number
    url: number
    product_id: number
    is_main: number
    _all: number
  }


  export type ProductImageAvgAggregateInputType = {
    id?: true
    product_id?: true
  }

  export type ProductImageSumAggregateInputType = {
    id?: true
    product_id?: true
  }

  export type ProductImageMinAggregateInputType = {
    id?: true
    url?: true
    product_id?: true
    is_main?: true
  }

  export type ProductImageMaxAggregateInputType = {
    id?: true
    url?: true
    product_id?: true
    is_main?: true
  }

  export type ProductImageCountAggregateInputType = {
    id?: true
    url?: true
    product_id?: true
    is_main?: true
    _all?: true
  }

  export type ProductImageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductImage to aggregate.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductImages
    **/
    _count?: true | ProductImageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductImageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductImageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductImageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductImageMaxAggregateInputType
  }

  export type GetProductImageAggregateType<T extends ProductImageAggregateArgs> = {
        [P in keyof T & keyof AggregateProductImage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductImage[P]>
      : GetScalarType<T[P], AggregateProductImage[P]>
  }




  export type ProductImageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductImageWhereInput
    orderBy?: ProductImageOrderByWithAggregationInput | ProductImageOrderByWithAggregationInput[]
    by: ProductImageScalarFieldEnum[] | ProductImageScalarFieldEnum
    having?: ProductImageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductImageCountAggregateInputType | true
    _avg?: ProductImageAvgAggregateInputType
    _sum?: ProductImageSumAggregateInputType
    _min?: ProductImageMinAggregateInputType
    _max?: ProductImageMaxAggregateInputType
  }

  export type ProductImageGroupByOutputType = {
    id: bigint
    url: string
    product_id: bigint
    is_main: boolean
    _count: ProductImageCountAggregateOutputType | null
    _avg: ProductImageAvgAggregateOutputType | null
    _sum: ProductImageSumAggregateOutputType | null
    _min: ProductImageMinAggregateOutputType | null
    _max: ProductImageMaxAggregateOutputType | null
  }

  type GetProductImageGroupByPayload<T extends ProductImageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductImageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductImageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductImageGroupByOutputType[P]>
            : GetScalarType<T[P], ProductImageGroupByOutputType[P]>
        }
      >
    >


  export type ProductImageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    product_id?: boolean
    is_main?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productImage"]>

  export type ProductImageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    product_id?: boolean
    is_main?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productImage"]>

  export type ProductImageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    product_id?: boolean
    is_main?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productImage"]>

  export type ProductImageSelectScalar = {
    id?: boolean
    url?: boolean
    product_id?: boolean
    is_main?: boolean
  }

  export type ProductImageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "product_id" | "is_main", ExtArgs["result"]["productImage"]>
  export type ProductImageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductImageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductImageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductImagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductImage"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      url: string
      product_id: bigint
      is_main: boolean
    }, ExtArgs["result"]["productImage"]>
    composites: {}
  }

  type ProductImageGetPayload<S extends boolean | null | undefined | ProductImageDefaultArgs> = $Result.GetResult<Prisma.$ProductImagePayload, S>

  type ProductImageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductImageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductImageCountAggregateInputType | true
    }

  export interface ProductImageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductImage'], meta: { name: 'ProductImage' } }
    /**
     * Find zero or one ProductImage that matches the filter.
     * @param {ProductImageFindUniqueArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductImageFindUniqueArgs>(args: SelectSubset<T, ProductImageFindUniqueArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductImage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductImageFindUniqueOrThrowArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductImageFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductImageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductImage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageFindFirstArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductImageFindFirstArgs>(args?: SelectSubset<T, ProductImageFindFirstArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductImage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageFindFirstOrThrowArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductImageFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductImageFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductImages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductImages
     * const productImages = await prisma.productImage.findMany()
     * 
     * // Get first 10 ProductImages
     * const productImages = await prisma.productImage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productImageWithIdOnly = await prisma.productImage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductImageFindManyArgs>(args?: SelectSubset<T, ProductImageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductImage.
     * @param {ProductImageCreateArgs} args - Arguments to create a ProductImage.
     * @example
     * // Create one ProductImage
     * const ProductImage = await prisma.productImage.create({
     *   data: {
     *     // ... data to create a ProductImage
     *   }
     * })
     * 
     */
    create<T extends ProductImageCreateArgs>(args: SelectSubset<T, ProductImageCreateArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductImages.
     * @param {ProductImageCreateManyArgs} args - Arguments to create many ProductImages.
     * @example
     * // Create many ProductImages
     * const productImage = await prisma.productImage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductImageCreateManyArgs>(args?: SelectSubset<T, ProductImageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductImages and returns the data saved in the database.
     * @param {ProductImageCreateManyAndReturnArgs} args - Arguments to create many ProductImages.
     * @example
     * // Create many ProductImages
     * const productImage = await prisma.productImage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductImages and only return the `id`
     * const productImageWithIdOnly = await prisma.productImage.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductImageCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductImageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductImage.
     * @param {ProductImageDeleteArgs} args - Arguments to delete one ProductImage.
     * @example
     * // Delete one ProductImage
     * const ProductImage = await prisma.productImage.delete({
     *   where: {
     *     // ... filter to delete one ProductImage
     *   }
     * })
     * 
     */
    delete<T extends ProductImageDeleteArgs>(args: SelectSubset<T, ProductImageDeleteArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductImage.
     * @param {ProductImageUpdateArgs} args - Arguments to update one ProductImage.
     * @example
     * // Update one ProductImage
     * const productImage = await prisma.productImage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductImageUpdateArgs>(args: SelectSubset<T, ProductImageUpdateArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductImages.
     * @param {ProductImageDeleteManyArgs} args - Arguments to filter ProductImages to delete.
     * @example
     * // Delete a few ProductImages
     * const { count } = await prisma.productImage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductImageDeleteManyArgs>(args?: SelectSubset<T, ProductImageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductImages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductImages
     * const productImage = await prisma.productImage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductImageUpdateManyArgs>(args: SelectSubset<T, ProductImageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductImages and returns the data updated in the database.
     * @param {ProductImageUpdateManyAndReturnArgs} args - Arguments to update many ProductImages.
     * @example
     * // Update many ProductImages
     * const productImage = await prisma.productImage.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductImages and only return the `id`
     * const productImageWithIdOnly = await prisma.productImage.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductImageUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductImageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductImage.
     * @param {ProductImageUpsertArgs} args - Arguments to update or create a ProductImage.
     * @example
     * // Update or create a ProductImage
     * const productImage = await prisma.productImage.upsert({
     *   create: {
     *     // ... data to create a ProductImage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductImage we want to update
     *   }
     * })
     */
    upsert<T extends ProductImageUpsertArgs>(args: SelectSubset<T, ProductImageUpsertArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductImages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageCountArgs} args - Arguments to filter ProductImages to count.
     * @example
     * // Count the number of ProductImages
     * const count = await prisma.productImage.count({
     *   where: {
     *     // ... the filter for the ProductImages we want to count
     *   }
     * })
    **/
    count<T extends ProductImageCountArgs>(
      args?: Subset<T, ProductImageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductImageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductImage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductImageAggregateArgs>(args: Subset<T, ProductImageAggregateArgs>): Prisma.PrismaPromise<GetProductImageAggregateType<T>>

    /**
     * Group by ProductImage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductImageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductImageGroupByArgs['orderBy'] }
        : { orderBy?: ProductImageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductImageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductImageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductImage model
   */
  readonly fields: ProductImageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductImage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductImageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductImage model
   */
  interface ProductImageFieldRefs {
    readonly id: FieldRef<"ProductImage", 'BigInt'>
    readonly url: FieldRef<"ProductImage", 'String'>
    readonly product_id: FieldRef<"ProductImage", 'BigInt'>
    readonly is_main: FieldRef<"ProductImage", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * ProductImage findUnique
   */
  export type ProductImageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage findUniqueOrThrow
   */
  export type ProductImageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage findFirst
   */
  export type ProductImageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductImages.
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductImages.
     */
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * ProductImage findFirstOrThrow
   */
  export type ProductImageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductImages.
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductImages.
     */
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * ProductImage findMany
   */
  export type ProductImageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImages to fetch.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductImages.
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * ProductImage create
   */
  export type ProductImageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductImage.
     */
    data: XOR<ProductImageCreateInput, ProductImageUncheckedCreateInput>
  }

  /**
   * ProductImage createMany
   */
  export type ProductImageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductImages.
     */
    data: ProductImageCreateManyInput | ProductImageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductImage createManyAndReturn
   */
  export type ProductImageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * The data used to create many ProductImages.
     */
    data: ProductImageCreateManyInput | ProductImageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductImage update
   */
  export type ProductImageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductImage.
     */
    data: XOR<ProductImageUpdateInput, ProductImageUncheckedUpdateInput>
    /**
     * Choose, which ProductImage to update.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage updateMany
   */
  export type ProductImageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductImages.
     */
    data: XOR<ProductImageUpdateManyMutationInput, ProductImageUncheckedUpdateManyInput>
    /**
     * Filter which ProductImages to update
     */
    where?: ProductImageWhereInput
    /**
     * Limit how many ProductImages to update.
     */
    limit?: number
  }

  /**
   * ProductImage updateManyAndReturn
   */
  export type ProductImageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * The data used to update ProductImages.
     */
    data: XOR<ProductImageUpdateManyMutationInput, ProductImageUncheckedUpdateManyInput>
    /**
     * Filter which ProductImages to update
     */
    where?: ProductImageWhereInput
    /**
     * Limit how many ProductImages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductImage upsert
   */
  export type ProductImageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductImage to update in case it exists.
     */
    where: ProductImageWhereUniqueInput
    /**
     * In case the ProductImage found by the `where` argument doesn't exist, create a new ProductImage with this data.
     */
    create: XOR<ProductImageCreateInput, ProductImageUncheckedCreateInput>
    /**
     * In case the ProductImage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductImageUpdateInput, ProductImageUncheckedUpdateInput>
  }

  /**
   * ProductImage delete
   */
  export type ProductImageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter which ProductImage to delete.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage deleteMany
   */
  export type ProductImageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductImages to delete
     */
    where?: ProductImageWhereInput
    /**
     * Limit how many ProductImages to delete.
     */
    limit?: number
  }

  /**
   * ProductImage without action
   */
  export type ProductImageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductImage
     */
    omit?: ProductImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
  }


  /**
   * Model Brand
   */

  export type AggregateBrand = {
    _count: BrandCountAggregateOutputType | null
    _avg: BrandAvgAggregateOutputType | null
    _sum: BrandSumAggregateOutputType | null
    _min: BrandMinAggregateOutputType | null
    _max: BrandMaxAggregateOutputType | null
  }

  export type BrandAvgAggregateOutputType = {
    id: number | null
  }

  export type BrandSumAggregateOutputType = {
    id: bigint | null
  }

  export type BrandMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    logo: string | null
  }

  export type BrandMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    logo: string | null
  }

  export type BrandCountAggregateOutputType = {
    id: number
    name: number
    logo: number
    _all: number
  }


  export type BrandAvgAggregateInputType = {
    id?: true
  }

  export type BrandSumAggregateInputType = {
    id?: true
  }

  export type BrandMinAggregateInputType = {
    id?: true
    name?: true
    logo?: true
  }

  export type BrandMaxAggregateInputType = {
    id?: true
    name?: true
    logo?: true
  }

  export type BrandCountAggregateInputType = {
    id?: true
    name?: true
    logo?: true
    _all?: true
  }

  export type BrandAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Brand to aggregate.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Brands
    **/
    _count?: true | BrandCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BrandAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BrandSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BrandMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BrandMaxAggregateInputType
  }

  export type GetBrandAggregateType<T extends BrandAggregateArgs> = {
        [P in keyof T & keyof AggregateBrand]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBrand[P]>
      : GetScalarType<T[P], AggregateBrand[P]>
  }




  export type BrandGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandWhereInput
    orderBy?: BrandOrderByWithAggregationInput | BrandOrderByWithAggregationInput[]
    by: BrandScalarFieldEnum[] | BrandScalarFieldEnum
    having?: BrandScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BrandCountAggregateInputType | true
    _avg?: BrandAvgAggregateInputType
    _sum?: BrandSumAggregateInputType
    _min?: BrandMinAggregateInputType
    _max?: BrandMaxAggregateInputType
  }

  export type BrandGroupByOutputType = {
    id: bigint
    name: string
    logo: string
    _count: BrandCountAggregateOutputType | null
    _avg: BrandAvgAggregateOutputType | null
    _sum: BrandSumAggregateOutputType | null
    _min: BrandMinAggregateOutputType | null
    _max: BrandMaxAggregateOutputType | null
  }

  type GetBrandGroupByPayload<T extends BrandGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BrandGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BrandGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BrandGroupByOutputType[P]>
            : GetScalarType<T[P], BrandGroupByOutputType[P]>
        }
      >
    >


  export type BrandSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    logo?: boolean
    models?: boolean | Brand$modelsArgs<ExtArgs>
    products?: boolean | Brand$productsArgs<ExtArgs>
    _count?: boolean | BrandCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["brand"]>

  export type BrandSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    logo?: boolean
  }, ExtArgs["result"]["brand"]>

  export type BrandSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    logo?: boolean
  }, ExtArgs["result"]["brand"]>

  export type BrandSelectScalar = {
    id?: boolean
    name?: boolean
    logo?: boolean
  }

  export type BrandOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "logo", ExtArgs["result"]["brand"]>
  export type BrandInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    models?: boolean | Brand$modelsArgs<ExtArgs>
    products?: boolean | Brand$productsArgs<ExtArgs>
    _count?: boolean | BrandCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BrandIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type BrandIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $BrandPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Brand"
    objects: {
      models: Prisma.$ModelPayload<ExtArgs>[]
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      logo: string
    }, ExtArgs["result"]["brand"]>
    composites: {}
  }

  type BrandGetPayload<S extends boolean | null | undefined | BrandDefaultArgs> = $Result.GetResult<Prisma.$BrandPayload, S>

  type BrandCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BrandFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BrandCountAggregateInputType | true
    }

  export interface BrandDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Brand'], meta: { name: 'Brand' } }
    /**
     * Find zero or one Brand that matches the filter.
     * @param {BrandFindUniqueArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BrandFindUniqueArgs>(args: SelectSubset<T, BrandFindUniqueArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Brand that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BrandFindUniqueOrThrowArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BrandFindUniqueOrThrowArgs>(args: SelectSubset<T, BrandFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Brand that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindFirstArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BrandFindFirstArgs>(args?: SelectSubset<T, BrandFindFirstArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Brand that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindFirstOrThrowArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BrandFindFirstOrThrowArgs>(args?: SelectSubset<T, BrandFindFirstOrThrowArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Brands that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Brands
     * const brands = await prisma.brand.findMany()
     * 
     * // Get first 10 Brands
     * const brands = await prisma.brand.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const brandWithIdOnly = await prisma.brand.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BrandFindManyArgs>(args?: SelectSubset<T, BrandFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Brand.
     * @param {BrandCreateArgs} args - Arguments to create a Brand.
     * @example
     * // Create one Brand
     * const Brand = await prisma.brand.create({
     *   data: {
     *     // ... data to create a Brand
     *   }
     * })
     * 
     */
    create<T extends BrandCreateArgs>(args: SelectSubset<T, BrandCreateArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Brands.
     * @param {BrandCreateManyArgs} args - Arguments to create many Brands.
     * @example
     * // Create many Brands
     * const brand = await prisma.brand.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BrandCreateManyArgs>(args?: SelectSubset<T, BrandCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Brands and returns the data saved in the database.
     * @param {BrandCreateManyAndReturnArgs} args - Arguments to create many Brands.
     * @example
     * // Create many Brands
     * const brand = await prisma.brand.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Brands and only return the `id`
     * const brandWithIdOnly = await prisma.brand.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BrandCreateManyAndReturnArgs>(args?: SelectSubset<T, BrandCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Brand.
     * @param {BrandDeleteArgs} args - Arguments to delete one Brand.
     * @example
     * // Delete one Brand
     * const Brand = await prisma.brand.delete({
     *   where: {
     *     // ... filter to delete one Brand
     *   }
     * })
     * 
     */
    delete<T extends BrandDeleteArgs>(args: SelectSubset<T, BrandDeleteArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Brand.
     * @param {BrandUpdateArgs} args - Arguments to update one Brand.
     * @example
     * // Update one Brand
     * const brand = await prisma.brand.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BrandUpdateArgs>(args: SelectSubset<T, BrandUpdateArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Brands.
     * @param {BrandDeleteManyArgs} args - Arguments to filter Brands to delete.
     * @example
     * // Delete a few Brands
     * const { count } = await prisma.brand.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BrandDeleteManyArgs>(args?: SelectSubset<T, BrandDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Brands
     * const brand = await prisma.brand.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BrandUpdateManyArgs>(args: SelectSubset<T, BrandUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Brands and returns the data updated in the database.
     * @param {BrandUpdateManyAndReturnArgs} args - Arguments to update many Brands.
     * @example
     * // Update many Brands
     * const brand = await prisma.brand.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Brands and only return the `id`
     * const brandWithIdOnly = await prisma.brand.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BrandUpdateManyAndReturnArgs>(args: SelectSubset<T, BrandUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Brand.
     * @param {BrandUpsertArgs} args - Arguments to update or create a Brand.
     * @example
     * // Update or create a Brand
     * const brand = await prisma.brand.upsert({
     *   create: {
     *     // ... data to create a Brand
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Brand we want to update
     *   }
     * })
     */
    upsert<T extends BrandUpsertArgs>(args: SelectSubset<T, BrandUpsertArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandCountArgs} args - Arguments to filter Brands to count.
     * @example
     * // Count the number of Brands
     * const count = await prisma.brand.count({
     *   where: {
     *     // ... the filter for the Brands we want to count
     *   }
     * })
    **/
    count<T extends BrandCountArgs>(
      args?: Subset<T, BrandCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BrandCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Brand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BrandAggregateArgs>(args: Subset<T, BrandAggregateArgs>): Prisma.PrismaPromise<GetBrandAggregateType<T>>

    /**
     * Group by Brand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BrandGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BrandGroupByArgs['orderBy'] }
        : { orderBy?: BrandGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BrandGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBrandGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Brand model
   */
  readonly fields: BrandFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Brand.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BrandClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    models<T extends Brand$modelsArgs<ExtArgs> = {}>(args?: Subset<T, Brand$modelsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products<T extends Brand$productsArgs<ExtArgs> = {}>(args?: Subset<T, Brand$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Brand model
   */
  interface BrandFieldRefs {
    readonly id: FieldRef<"Brand", 'BigInt'>
    readonly name: FieldRef<"Brand", 'String'>
    readonly logo: FieldRef<"Brand", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Brand findUnique
   */
  export type BrandFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand findUniqueOrThrow
   */
  export type BrandFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand findFirst
   */
  export type BrandFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Brands.
     */
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand findFirstOrThrow
   */
  export type BrandFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Brands.
     */
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand findMany
   */
  export type BrandFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brands to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand create
   */
  export type BrandCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The data needed to create a Brand.
     */
    data: XOR<BrandCreateInput, BrandUncheckedCreateInput>
  }

  /**
   * Brand createMany
   */
  export type BrandCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Brands.
     */
    data: BrandCreateManyInput | BrandCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Brand createManyAndReturn
   */
  export type BrandCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * The data used to create many Brands.
     */
    data: BrandCreateManyInput | BrandCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Brand update
   */
  export type BrandUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The data needed to update a Brand.
     */
    data: XOR<BrandUpdateInput, BrandUncheckedUpdateInput>
    /**
     * Choose, which Brand to update.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand updateMany
   */
  export type BrandUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Brands.
     */
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyInput>
    /**
     * Filter which Brands to update
     */
    where?: BrandWhereInput
    /**
     * Limit how many Brands to update.
     */
    limit?: number
  }

  /**
   * Brand updateManyAndReturn
   */
  export type BrandUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * The data used to update Brands.
     */
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyInput>
    /**
     * Filter which Brands to update
     */
    where?: BrandWhereInput
    /**
     * Limit how many Brands to update.
     */
    limit?: number
  }

  /**
   * Brand upsert
   */
  export type BrandUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The filter to search for the Brand to update in case it exists.
     */
    where: BrandWhereUniqueInput
    /**
     * In case the Brand found by the `where` argument doesn't exist, create a new Brand with this data.
     */
    create: XOR<BrandCreateInput, BrandUncheckedCreateInput>
    /**
     * In case the Brand was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BrandUpdateInput, BrandUncheckedUpdateInput>
  }

  /**
   * Brand delete
   */
  export type BrandDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter which Brand to delete.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand deleteMany
   */
  export type BrandDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Brands to delete
     */
    where?: BrandWhereInput
    /**
     * Limit how many Brands to delete.
     */
    limit?: number
  }

  /**
   * Brand.models
   */
  export type Brand$modelsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelInclude<ExtArgs> | null
    where?: ModelWhereInput
    orderBy?: ModelOrderByWithRelationInput | ModelOrderByWithRelationInput[]
    cursor?: ModelWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModelScalarFieldEnum | ModelScalarFieldEnum[]
  }

  /**
   * Brand.products
   */
  export type Brand$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Brand without action
   */
  export type BrandDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
  }


  /**
   * Model Model
   */

  export type AggregateModel = {
    _count: ModelCountAggregateOutputType | null
    _avg: ModelAvgAggregateOutputType | null
    _sum: ModelSumAggregateOutputType | null
    _min: ModelMinAggregateOutputType | null
    _max: ModelMaxAggregateOutputType | null
  }

  export type ModelAvgAggregateOutputType = {
    id: number | null
    brand_id: number | null
  }

  export type ModelSumAggregateOutputType = {
    id: bigint | null
    brand_id: bigint | null
  }

  export type ModelMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    brand_id: bigint | null
  }

  export type ModelMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    brand_id: bigint | null
  }

  export type ModelCountAggregateOutputType = {
    id: number
    name: number
    brand_id: number
    _all: number
  }


  export type ModelAvgAggregateInputType = {
    id?: true
    brand_id?: true
  }

  export type ModelSumAggregateInputType = {
    id?: true
    brand_id?: true
  }

  export type ModelMinAggregateInputType = {
    id?: true
    name?: true
    brand_id?: true
  }

  export type ModelMaxAggregateInputType = {
    id?: true
    name?: true
    brand_id?: true
  }

  export type ModelCountAggregateInputType = {
    id?: true
    name?: true
    brand_id?: true
    _all?: true
  }

  export type ModelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Model to aggregate.
     */
    where?: ModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Models to fetch.
     */
    orderBy?: ModelOrderByWithRelationInput | ModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Models from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Models.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Models
    **/
    _count?: true | ModelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModelMaxAggregateInputType
  }

  export type GetModelAggregateType<T extends ModelAggregateArgs> = {
        [P in keyof T & keyof AggregateModel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModel[P]>
      : GetScalarType<T[P], AggregateModel[P]>
  }




  export type ModelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModelWhereInput
    orderBy?: ModelOrderByWithAggregationInput | ModelOrderByWithAggregationInput[]
    by: ModelScalarFieldEnum[] | ModelScalarFieldEnum
    having?: ModelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModelCountAggregateInputType | true
    _avg?: ModelAvgAggregateInputType
    _sum?: ModelSumAggregateInputType
    _min?: ModelMinAggregateInputType
    _max?: ModelMaxAggregateInputType
  }

  export type ModelGroupByOutputType = {
    id: bigint
    name: string
    brand_id: bigint
    _count: ModelCountAggregateOutputType | null
    _avg: ModelAvgAggregateOutputType | null
    _sum: ModelSumAggregateOutputType | null
    _min: ModelMinAggregateOutputType | null
    _max: ModelMaxAggregateOutputType | null
  }

  type GetModelGroupByPayload<T extends ModelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModelGroupByOutputType[P]>
            : GetScalarType<T[P], ModelGroupByOutputType[P]>
        }
      >
    >


  export type ModelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    brand_id?: boolean
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    products?: boolean | Model$productsArgs<ExtArgs>
    _count?: boolean | ModelCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["model"]>

  export type ModelSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    brand_id?: boolean
    brand?: boolean | BrandDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["model"]>

  export type ModelSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    brand_id?: boolean
    brand?: boolean | BrandDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["model"]>

  export type ModelSelectScalar = {
    id?: boolean
    name?: boolean
    brand_id?: boolean
  }

  export type ModelOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "brand_id", ExtArgs["result"]["model"]>
  export type ModelInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    products?: boolean | Model$productsArgs<ExtArgs>
    _count?: boolean | ModelCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ModelIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    brand?: boolean | BrandDefaultArgs<ExtArgs>
  }
  export type ModelIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    brand?: boolean | BrandDefaultArgs<ExtArgs>
  }

  export type $ModelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Model"
    objects: {
      brand: Prisma.$BrandPayload<ExtArgs>
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      brand_id: bigint
    }, ExtArgs["result"]["model"]>
    composites: {}
  }

  type ModelGetPayload<S extends boolean | null | undefined | ModelDefaultArgs> = $Result.GetResult<Prisma.$ModelPayload, S>

  type ModelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ModelFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ModelCountAggregateInputType | true
    }

  export interface ModelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Model'], meta: { name: 'Model' } }
    /**
     * Find zero or one Model that matches the filter.
     * @param {ModelFindUniqueArgs} args - Arguments to find a Model
     * @example
     * // Get one Model
     * const model = await prisma.model.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ModelFindUniqueArgs>(args: SelectSubset<T, ModelFindUniqueArgs<ExtArgs>>): Prisma__ModelClient<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Model that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ModelFindUniqueOrThrowArgs} args - Arguments to find a Model
     * @example
     * // Get one Model
     * const model = await prisma.model.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ModelFindUniqueOrThrowArgs>(args: SelectSubset<T, ModelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ModelClient<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Model that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelFindFirstArgs} args - Arguments to find a Model
     * @example
     * // Get one Model
     * const model = await prisma.model.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ModelFindFirstArgs>(args?: SelectSubset<T, ModelFindFirstArgs<ExtArgs>>): Prisma__ModelClient<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Model that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelFindFirstOrThrowArgs} args - Arguments to find a Model
     * @example
     * // Get one Model
     * const model = await prisma.model.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ModelFindFirstOrThrowArgs>(args?: SelectSubset<T, ModelFindFirstOrThrowArgs<ExtArgs>>): Prisma__ModelClient<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Models that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Models
     * const models = await prisma.model.findMany()
     * 
     * // Get first 10 Models
     * const models = await prisma.model.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const modelWithIdOnly = await prisma.model.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ModelFindManyArgs>(args?: SelectSubset<T, ModelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Model.
     * @param {ModelCreateArgs} args - Arguments to create a Model.
     * @example
     * // Create one Model
     * const Model = await prisma.model.create({
     *   data: {
     *     // ... data to create a Model
     *   }
     * })
     * 
     */
    create<T extends ModelCreateArgs>(args: SelectSubset<T, ModelCreateArgs<ExtArgs>>): Prisma__ModelClient<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Models.
     * @param {ModelCreateManyArgs} args - Arguments to create many Models.
     * @example
     * // Create many Models
     * const model = await prisma.model.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ModelCreateManyArgs>(args?: SelectSubset<T, ModelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Models and returns the data saved in the database.
     * @param {ModelCreateManyAndReturnArgs} args - Arguments to create many Models.
     * @example
     * // Create many Models
     * const model = await prisma.model.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Models and only return the `id`
     * const modelWithIdOnly = await prisma.model.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ModelCreateManyAndReturnArgs>(args?: SelectSubset<T, ModelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Model.
     * @param {ModelDeleteArgs} args - Arguments to delete one Model.
     * @example
     * // Delete one Model
     * const Model = await prisma.model.delete({
     *   where: {
     *     // ... filter to delete one Model
     *   }
     * })
     * 
     */
    delete<T extends ModelDeleteArgs>(args: SelectSubset<T, ModelDeleteArgs<ExtArgs>>): Prisma__ModelClient<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Model.
     * @param {ModelUpdateArgs} args - Arguments to update one Model.
     * @example
     * // Update one Model
     * const model = await prisma.model.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ModelUpdateArgs>(args: SelectSubset<T, ModelUpdateArgs<ExtArgs>>): Prisma__ModelClient<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Models.
     * @param {ModelDeleteManyArgs} args - Arguments to filter Models to delete.
     * @example
     * // Delete a few Models
     * const { count } = await prisma.model.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ModelDeleteManyArgs>(args?: SelectSubset<T, ModelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Models.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Models
     * const model = await prisma.model.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ModelUpdateManyArgs>(args: SelectSubset<T, ModelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Models and returns the data updated in the database.
     * @param {ModelUpdateManyAndReturnArgs} args - Arguments to update many Models.
     * @example
     * // Update many Models
     * const model = await prisma.model.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Models and only return the `id`
     * const modelWithIdOnly = await prisma.model.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ModelUpdateManyAndReturnArgs>(args: SelectSubset<T, ModelUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Model.
     * @param {ModelUpsertArgs} args - Arguments to update or create a Model.
     * @example
     * // Update or create a Model
     * const model = await prisma.model.upsert({
     *   create: {
     *     // ... data to create a Model
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Model we want to update
     *   }
     * })
     */
    upsert<T extends ModelUpsertArgs>(args: SelectSubset<T, ModelUpsertArgs<ExtArgs>>): Prisma__ModelClient<$Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Models.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelCountArgs} args - Arguments to filter Models to count.
     * @example
     * // Count the number of Models
     * const count = await prisma.model.count({
     *   where: {
     *     // ... the filter for the Models we want to count
     *   }
     * })
    **/
    count<T extends ModelCountArgs>(
      args?: Subset<T, ModelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Model.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModelAggregateArgs>(args: Subset<T, ModelAggregateArgs>): Prisma.PrismaPromise<GetModelAggregateType<T>>

    /**
     * Group by Model.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ModelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ModelGroupByArgs['orderBy'] }
        : { orderBy?: ModelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ModelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Model model
   */
  readonly fields: ModelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Model.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ModelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    brand<T extends BrandDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BrandDefaultArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    products<T extends Model$productsArgs<ExtArgs> = {}>(args?: Subset<T, Model$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Model model
   */
  interface ModelFieldRefs {
    readonly id: FieldRef<"Model", 'BigInt'>
    readonly name: FieldRef<"Model", 'String'>
    readonly brand_id: FieldRef<"Model", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * Model findUnique
   */
  export type ModelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelInclude<ExtArgs> | null
    /**
     * Filter, which Model to fetch.
     */
    where: ModelWhereUniqueInput
  }

  /**
   * Model findUniqueOrThrow
   */
  export type ModelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelInclude<ExtArgs> | null
    /**
     * Filter, which Model to fetch.
     */
    where: ModelWhereUniqueInput
  }

  /**
   * Model findFirst
   */
  export type ModelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelInclude<ExtArgs> | null
    /**
     * Filter, which Model to fetch.
     */
    where?: ModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Models to fetch.
     */
    orderBy?: ModelOrderByWithRelationInput | ModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Models.
     */
    cursor?: ModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Models from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Models.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Models.
     */
    distinct?: ModelScalarFieldEnum | ModelScalarFieldEnum[]
  }

  /**
   * Model findFirstOrThrow
   */
  export type ModelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelInclude<ExtArgs> | null
    /**
     * Filter, which Model to fetch.
     */
    where?: ModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Models to fetch.
     */
    orderBy?: ModelOrderByWithRelationInput | ModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Models.
     */
    cursor?: ModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Models from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Models.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Models.
     */
    distinct?: ModelScalarFieldEnum | ModelScalarFieldEnum[]
  }

  /**
   * Model findMany
   */
  export type ModelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelInclude<ExtArgs> | null
    /**
     * Filter, which Models to fetch.
     */
    where?: ModelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Models to fetch.
     */
    orderBy?: ModelOrderByWithRelationInput | ModelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Models.
     */
    cursor?: ModelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Models from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Models.
     */
    skip?: number
    distinct?: ModelScalarFieldEnum | ModelScalarFieldEnum[]
  }

  /**
   * Model create
   */
  export type ModelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelInclude<ExtArgs> | null
    /**
     * The data needed to create a Model.
     */
    data: XOR<ModelCreateInput, ModelUncheckedCreateInput>
  }

  /**
   * Model createMany
   */
  export type ModelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Models.
     */
    data: ModelCreateManyInput | ModelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Model createManyAndReturn
   */
  export type ModelCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * The data used to create many Models.
     */
    data: ModelCreateManyInput | ModelCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Model update
   */
  export type ModelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelInclude<ExtArgs> | null
    /**
     * The data needed to update a Model.
     */
    data: XOR<ModelUpdateInput, ModelUncheckedUpdateInput>
    /**
     * Choose, which Model to update.
     */
    where: ModelWhereUniqueInput
  }

  /**
   * Model updateMany
   */
  export type ModelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Models.
     */
    data: XOR<ModelUpdateManyMutationInput, ModelUncheckedUpdateManyInput>
    /**
     * Filter which Models to update
     */
    where?: ModelWhereInput
    /**
     * Limit how many Models to update.
     */
    limit?: number
  }

  /**
   * Model updateManyAndReturn
   */
  export type ModelUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * The data used to update Models.
     */
    data: XOR<ModelUpdateManyMutationInput, ModelUncheckedUpdateManyInput>
    /**
     * Filter which Models to update
     */
    where?: ModelWhereInput
    /**
     * Limit how many Models to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Model upsert
   */
  export type ModelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelInclude<ExtArgs> | null
    /**
     * The filter to search for the Model to update in case it exists.
     */
    where: ModelWhereUniqueInput
    /**
     * In case the Model found by the `where` argument doesn't exist, create a new Model with this data.
     */
    create: XOR<ModelCreateInput, ModelUncheckedCreateInput>
    /**
     * In case the Model was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ModelUpdateInput, ModelUncheckedUpdateInput>
  }

  /**
   * Model delete
   */
  export type ModelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelInclude<ExtArgs> | null
    /**
     * Filter which Model to delete.
     */
    where: ModelWhereUniqueInput
  }

  /**
   * Model deleteMany
   */
  export type ModelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Models to delete
     */
    where?: ModelWhereInput
    /**
     * Limit how many Models to delete.
     */
    limit?: number
  }

  /**
   * Model.products
   */
  export type Model$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Model without action
   */
  export type ModelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Model
     */
    select?: ModelSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Model
     */
    omit?: ModelOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelInclude<ExtArgs> | null
  }


  /**
   * Model Color
   */

  export type AggregateColor = {
    _count: ColorCountAggregateOutputType | null
    _avg: ColorAvgAggregateOutputType | null
    _sum: ColorSumAggregateOutputType | null
    _min: ColorMinAggregateOutputType | null
    _max: ColorMaxAggregateOutputType | null
  }

  export type ColorAvgAggregateOutputType = {
    id: number | null
  }

  export type ColorSumAggregateOutputType = {
    id: bigint | null
  }

  export type ColorMinAggregateOutputType = {
    id: bigint | null
    name: string | null
<<<<<<< HEAD
    hex: string | null
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ColorMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
<<<<<<< HEAD
    hex: string | null
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ColorCountAggregateOutputType = {
    id: number
    name: number
<<<<<<< HEAD
    hex: number
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _all: number
  }


  export type ColorAvgAggregateInputType = {
    id?: true
  }

  export type ColorSumAggregateInputType = {
    id?: true
  }

  export type ColorMinAggregateInputType = {
    id?: true
    name?: true
<<<<<<< HEAD
    hex?: true
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ColorMaxAggregateInputType = {
    id?: true
    name?: true
<<<<<<< HEAD
    hex?: true
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ColorCountAggregateInputType = {
    id?: true
    name?: true
<<<<<<< HEAD
    hex?: true
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _all?: true
  }

  export type ColorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Color to aggregate.
     */
    where?: ColorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colors to fetch.
     */
    orderBy?: ColorOrderByWithRelationInput | ColorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ColorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Colors
    **/
    _count?: true | ColorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ColorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ColorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ColorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ColorMaxAggregateInputType
  }

  export type GetColorAggregateType<T extends ColorAggregateArgs> = {
        [P in keyof T & keyof AggregateColor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateColor[P]>
      : GetScalarType<T[P], AggregateColor[P]>
  }




  export type ColorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ColorWhereInput
    orderBy?: ColorOrderByWithAggregationInput | ColorOrderByWithAggregationInput[]
    by: ColorScalarFieldEnum[] | ColorScalarFieldEnum
    having?: ColorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ColorCountAggregateInputType | true
    _avg?: ColorAvgAggregateInputType
    _sum?: ColorSumAggregateInputType
    _min?: ColorMinAggregateInputType
    _max?: ColorMaxAggregateInputType
  }

  export type ColorGroupByOutputType = {
    id: bigint
    name: string
<<<<<<< HEAD
    hex: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _count: ColorCountAggregateOutputType | null
    _avg: ColorAvgAggregateOutputType | null
    _sum: ColorSumAggregateOutputType | null
    _min: ColorMinAggregateOutputType | null
    _max: ColorMaxAggregateOutputType | null
  }

  type GetColorGroupByPayload<T extends ColorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ColorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ColorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ColorGroupByOutputType[P]>
            : GetScalarType<T[P], ColorGroupByOutputType[P]>
        }
      >
    >


  export type ColorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
<<<<<<< HEAD
    hex?: boolean
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: boolean | Color$productsArgs<ExtArgs>
    _count?: boolean | ColorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["color"]>

  export type ColorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
<<<<<<< HEAD
    hex?: boolean
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }, ExtArgs["result"]["color"]>

  export type ColorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
<<<<<<< HEAD
    hex?: boolean
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }, ExtArgs["result"]["color"]>

  export type ColorSelectScalar = {
    id?: boolean
    name?: boolean
<<<<<<< HEAD
    hex?: boolean
  }

  export type ColorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "hex", ExtArgs["result"]["color"]>
=======
  }

  export type ColorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["color"]>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type ColorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | Color$productsArgs<ExtArgs>
    _count?: boolean | ColorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ColorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ColorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ColorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Color"
    objects: {
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
<<<<<<< HEAD
      hex: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    }, ExtArgs["result"]["color"]>
    composites: {}
  }

  type ColorGetPayload<S extends boolean | null | undefined | ColorDefaultArgs> = $Result.GetResult<Prisma.$ColorPayload, S>

  type ColorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ColorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ColorCountAggregateInputType | true
    }

  export interface ColorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Color'], meta: { name: 'Color' } }
    /**
     * Find zero or one Color that matches the filter.
     * @param {ColorFindUniqueArgs} args - Arguments to find a Color
     * @example
     * // Get one Color
     * const color = await prisma.color.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ColorFindUniqueArgs>(args: SelectSubset<T, ColorFindUniqueArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Color that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ColorFindUniqueOrThrowArgs} args - Arguments to find a Color
     * @example
     * // Get one Color
     * const color = await prisma.color.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ColorFindUniqueOrThrowArgs>(args: SelectSubset<T, ColorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Color that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorFindFirstArgs} args - Arguments to find a Color
     * @example
     * // Get one Color
     * const color = await prisma.color.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ColorFindFirstArgs>(args?: SelectSubset<T, ColorFindFirstArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Color that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorFindFirstOrThrowArgs} args - Arguments to find a Color
     * @example
     * // Get one Color
     * const color = await prisma.color.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ColorFindFirstOrThrowArgs>(args?: SelectSubset<T, ColorFindFirstOrThrowArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Colors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Colors
     * const colors = await prisma.color.findMany()
     * 
     * // Get first 10 Colors
     * const colors = await prisma.color.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const colorWithIdOnly = await prisma.color.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ColorFindManyArgs>(args?: SelectSubset<T, ColorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Color.
     * @param {ColorCreateArgs} args - Arguments to create a Color.
     * @example
     * // Create one Color
     * const Color = await prisma.color.create({
     *   data: {
     *     // ... data to create a Color
     *   }
     * })
     * 
     */
    create<T extends ColorCreateArgs>(args: SelectSubset<T, ColorCreateArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Colors.
     * @param {ColorCreateManyArgs} args - Arguments to create many Colors.
     * @example
     * // Create many Colors
     * const color = await prisma.color.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ColorCreateManyArgs>(args?: SelectSubset<T, ColorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Colors and returns the data saved in the database.
     * @param {ColorCreateManyAndReturnArgs} args - Arguments to create many Colors.
     * @example
     * // Create many Colors
     * const color = await prisma.color.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Colors and only return the `id`
     * const colorWithIdOnly = await prisma.color.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ColorCreateManyAndReturnArgs>(args?: SelectSubset<T, ColorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Color.
     * @param {ColorDeleteArgs} args - Arguments to delete one Color.
     * @example
     * // Delete one Color
     * const Color = await prisma.color.delete({
     *   where: {
     *     // ... filter to delete one Color
     *   }
     * })
     * 
     */
    delete<T extends ColorDeleteArgs>(args: SelectSubset<T, ColorDeleteArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Color.
     * @param {ColorUpdateArgs} args - Arguments to update one Color.
     * @example
     * // Update one Color
     * const color = await prisma.color.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ColorUpdateArgs>(args: SelectSubset<T, ColorUpdateArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Colors.
     * @param {ColorDeleteManyArgs} args - Arguments to filter Colors to delete.
     * @example
     * // Delete a few Colors
     * const { count } = await prisma.color.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ColorDeleteManyArgs>(args?: SelectSubset<T, ColorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Colors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Colors
     * const color = await prisma.color.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ColorUpdateManyArgs>(args: SelectSubset<T, ColorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Colors and returns the data updated in the database.
     * @param {ColorUpdateManyAndReturnArgs} args - Arguments to update many Colors.
     * @example
     * // Update many Colors
     * const color = await prisma.color.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Colors and only return the `id`
     * const colorWithIdOnly = await prisma.color.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ColorUpdateManyAndReturnArgs>(args: SelectSubset<T, ColorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Color.
     * @param {ColorUpsertArgs} args - Arguments to update or create a Color.
     * @example
     * // Update or create a Color
     * const color = await prisma.color.upsert({
     *   create: {
     *     // ... data to create a Color
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Color we want to update
     *   }
     * })
     */
    upsert<T extends ColorUpsertArgs>(args: SelectSubset<T, ColorUpsertArgs<ExtArgs>>): Prisma__ColorClient<$Result.GetResult<Prisma.$ColorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Colors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorCountArgs} args - Arguments to filter Colors to count.
     * @example
     * // Count the number of Colors
     * const count = await prisma.color.count({
     *   where: {
     *     // ... the filter for the Colors we want to count
     *   }
     * })
    **/
    count<T extends ColorCountArgs>(
      args?: Subset<T, ColorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ColorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Color.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ColorAggregateArgs>(args: Subset<T, ColorAggregateArgs>): Prisma.PrismaPromise<GetColorAggregateType<T>>

    /**
     * Group by Color.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ColorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ColorGroupByArgs['orderBy'] }
        : { orderBy?: ColorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ColorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetColorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Color model
   */
  readonly fields: ColorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Color.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ColorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends Color$productsArgs<ExtArgs> = {}>(args?: Subset<T, Color$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Color model
   */
  interface ColorFieldRefs {
    readonly id: FieldRef<"Color", 'BigInt'>
    readonly name: FieldRef<"Color", 'String'>
<<<<<<< HEAD
    readonly hex: FieldRef<"Color", 'String'>
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }
    

  // Custom InputTypes
  /**
   * Color findUnique
   */
  export type ColorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * Filter, which Color to fetch.
     */
    where: ColorWhereUniqueInput
  }

  /**
   * Color findUniqueOrThrow
   */
  export type ColorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * Filter, which Color to fetch.
     */
    where: ColorWhereUniqueInput
  }

  /**
   * Color findFirst
   */
  export type ColorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * Filter, which Color to fetch.
     */
    where?: ColorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colors to fetch.
     */
    orderBy?: ColorOrderByWithRelationInput | ColorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Colors.
     */
    cursor?: ColorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Colors.
     */
    distinct?: ColorScalarFieldEnum | ColorScalarFieldEnum[]
  }

  /**
   * Color findFirstOrThrow
   */
  export type ColorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * Filter, which Color to fetch.
     */
    where?: ColorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colors to fetch.
     */
    orderBy?: ColorOrderByWithRelationInput | ColorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Colors.
     */
    cursor?: ColorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Colors.
     */
    distinct?: ColorScalarFieldEnum | ColorScalarFieldEnum[]
  }

  /**
   * Color findMany
   */
  export type ColorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * Filter, which Colors to fetch.
     */
    where?: ColorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colors to fetch.
     */
    orderBy?: ColorOrderByWithRelationInput | ColorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Colors.
     */
    cursor?: ColorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colors.
     */
    skip?: number
    distinct?: ColorScalarFieldEnum | ColorScalarFieldEnum[]
  }

  /**
   * Color create
   */
  export type ColorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * The data needed to create a Color.
     */
    data: XOR<ColorCreateInput, ColorUncheckedCreateInput>
  }

  /**
   * Color createMany
   */
  export type ColorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Colors.
     */
    data: ColorCreateManyInput | ColorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Color createManyAndReturn
   */
  export type ColorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * The data used to create many Colors.
     */
    data: ColorCreateManyInput | ColorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Color update
   */
  export type ColorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * The data needed to update a Color.
     */
    data: XOR<ColorUpdateInput, ColorUncheckedUpdateInput>
    /**
     * Choose, which Color to update.
     */
    where: ColorWhereUniqueInput
  }

  /**
   * Color updateMany
   */
  export type ColorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Colors.
     */
    data: XOR<ColorUpdateManyMutationInput, ColorUncheckedUpdateManyInput>
    /**
     * Filter which Colors to update
     */
    where?: ColorWhereInput
    /**
     * Limit how many Colors to update.
     */
    limit?: number
  }

  /**
   * Color updateManyAndReturn
   */
  export type ColorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * The data used to update Colors.
     */
    data: XOR<ColorUpdateManyMutationInput, ColorUncheckedUpdateManyInput>
    /**
     * Filter which Colors to update
     */
    where?: ColorWhereInput
    /**
     * Limit how many Colors to update.
     */
    limit?: number
  }

  /**
   * Color upsert
   */
  export type ColorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * The filter to search for the Color to update in case it exists.
     */
    where: ColorWhereUniqueInput
    /**
     * In case the Color found by the `where` argument doesn't exist, create a new Color with this data.
     */
    create: XOR<ColorCreateInput, ColorUncheckedCreateInput>
    /**
     * In case the Color was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ColorUpdateInput, ColorUncheckedUpdateInput>
  }

  /**
   * Color delete
   */
  export type ColorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
    /**
     * Filter which Color to delete.
     */
    where: ColorWhereUniqueInput
  }

  /**
   * Color deleteMany
   */
  export type ColorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Colors to delete
     */
    where?: ColorWhereInput
    /**
     * Limit how many Colors to delete.
     */
    limit?: number
  }

  /**
   * Color.products
   */
  export type Color$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Color without action
   */
  export type ColorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Color
     */
    select?: ColorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Color
     */
    omit?: ColorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColorInclude<ExtArgs> | null
  }


  /**
   * Model Currency
   */

  export type AggregateCurrency = {
    _count: CurrencyCountAggregateOutputType | null
    _avg: CurrencyAvgAggregateOutputType | null
    _sum: CurrencySumAggregateOutputType | null
    _min: CurrencyMinAggregateOutputType | null
    _max: CurrencyMaxAggregateOutputType | null
  }

  export type CurrencyAvgAggregateOutputType = {
    id: number | null
  }

  export type CurrencySumAggregateOutputType = {
    id: bigint | null
  }

  export type CurrencyMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    symbol: string | null
  }

  export type CurrencyMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    symbol: string | null
  }

  export type CurrencyCountAggregateOutputType = {
    id: number
    name: number
    symbol: number
    _all: number
  }


  export type CurrencyAvgAggregateInputType = {
    id?: true
  }

  export type CurrencySumAggregateInputType = {
    id?: true
  }

  export type CurrencyMinAggregateInputType = {
    id?: true
    name?: true
    symbol?: true
  }

  export type CurrencyMaxAggregateInputType = {
    id?: true
    name?: true
    symbol?: true
  }

  export type CurrencyCountAggregateInputType = {
    id?: true
    name?: true
    symbol?: true
    _all?: true
  }

  export type CurrencyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Currency to aggregate.
     */
    where?: CurrencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Currencies to fetch.
     */
    orderBy?: CurrencyOrderByWithRelationInput | CurrencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CurrencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Currencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Currencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Currencies
    **/
    _count?: true | CurrencyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CurrencyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CurrencySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CurrencyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CurrencyMaxAggregateInputType
  }

  export type GetCurrencyAggregateType<T extends CurrencyAggregateArgs> = {
        [P in keyof T & keyof AggregateCurrency]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCurrency[P]>
      : GetScalarType<T[P], AggregateCurrency[P]>
  }




  export type CurrencyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CurrencyWhereInput
    orderBy?: CurrencyOrderByWithAggregationInput | CurrencyOrderByWithAggregationInput[]
    by: CurrencyScalarFieldEnum[] | CurrencyScalarFieldEnum
    having?: CurrencyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CurrencyCountAggregateInputType | true
    _avg?: CurrencyAvgAggregateInputType
    _sum?: CurrencySumAggregateInputType
    _min?: CurrencyMinAggregateInputType
    _max?: CurrencyMaxAggregateInputType
  }

  export type CurrencyGroupByOutputType = {
    id: bigint
    name: string
    symbol: string
    _count: CurrencyCountAggregateOutputType | null
    _avg: CurrencyAvgAggregateOutputType | null
    _sum: CurrencySumAggregateOutputType | null
    _min: CurrencyMinAggregateOutputType | null
    _max: CurrencyMaxAggregateOutputType | null
  }

  type GetCurrencyGroupByPayload<T extends CurrencyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CurrencyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CurrencyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CurrencyGroupByOutputType[P]>
            : GetScalarType<T[P], CurrencyGroupByOutputType[P]>
        }
      >
    >


  export type CurrencySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    symbol?: boolean
<<<<<<< HEAD
    user_preferences?: boolean | Currency$user_preferencesArgs<ExtArgs>
=======
    userPreferences?: boolean | Currency$userPreferencesArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: boolean | Currency$productsArgs<ExtArgs>
    _count?: boolean | CurrencyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["currency"]>

  export type CurrencySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    symbol?: boolean
  }, ExtArgs["result"]["currency"]>

  export type CurrencySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    symbol?: boolean
  }, ExtArgs["result"]["currency"]>

  export type CurrencySelectScalar = {
    id?: boolean
    name?: boolean
    symbol?: boolean
  }

  export type CurrencyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "symbol", ExtArgs["result"]["currency"]>
  export type CurrencyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
<<<<<<< HEAD
    user_preferences?: boolean | Currency$user_preferencesArgs<ExtArgs>
=======
    userPreferences?: boolean | Currency$userPreferencesArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: boolean | Currency$productsArgs<ExtArgs>
    _count?: boolean | CurrencyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CurrencyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CurrencyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CurrencyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Currency"
    objects: {
<<<<<<< HEAD
      user_preferences: Prisma.$UserPayload<ExtArgs>[]
=======
      userPreferences: Prisma.$UserPayload<ExtArgs>[]
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      symbol: string
    }, ExtArgs["result"]["currency"]>
    composites: {}
  }

  type CurrencyGetPayload<S extends boolean | null | undefined | CurrencyDefaultArgs> = $Result.GetResult<Prisma.$CurrencyPayload, S>

  type CurrencyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CurrencyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CurrencyCountAggregateInputType | true
    }

  export interface CurrencyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Currency'], meta: { name: 'Currency' } }
    /**
     * Find zero or one Currency that matches the filter.
     * @param {CurrencyFindUniqueArgs} args - Arguments to find a Currency
     * @example
     * // Get one Currency
     * const currency = await prisma.currency.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CurrencyFindUniqueArgs>(args: SelectSubset<T, CurrencyFindUniqueArgs<ExtArgs>>): Prisma__CurrencyClient<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Currency that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CurrencyFindUniqueOrThrowArgs} args - Arguments to find a Currency
     * @example
     * // Get one Currency
     * const currency = await prisma.currency.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CurrencyFindUniqueOrThrowArgs>(args: SelectSubset<T, CurrencyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CurrencyClient<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Currency that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyFindFirstArgs} args - Arguments to find a Currency
     * @example
     * // Get one Currency
     * const currency = await prisma.currency.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CurrencyFindFirstArgs>(args?: SelectSubset<T, CurrencyFindFirstArgs<ExtArgs>>): Prisma__CurrencyClient<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Currency that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyFindFirstOrThrowArgs} args - Arguments to find a Currency
     * @example
     * // Get one Currency
     * const currency = await prisma.currency.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CurrencyFindFirstOrThrowArgs>(args?: SelectSubset<T, CurrencyFindFirstOrThrowArgs<ExtArgs>>): Prisma__CurrencyClient<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Currencies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Currencies
     * const currencies = await prisma.currency.findMany()
     * 
     * // Get first 10 Currencies
     * const currencies = await prisma.currency.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const currencyWithIdOnly = await prisma.currency.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CurrencyFindManyArgs>(args?: SelectSubset<T, CurrencyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Currency.
     * @param {CurrencyCreateArgs} args - Arguments to create a Currency.
     * @example
     * // Create one Currency
     * const Currency = await prisma.currency.create({
     *   data: {
     *     // ... data to create a Currency
     *   }
     * })
     * 
     */
    create<T extends CurrencyCreateArgs>(args: SelectSubset<T, CurrencyCreateArgs<ExtArgs>>): Prisma__CurrencyClient<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Currencies.
     * @param {CurrencyCreateManyArgs} args - Arguments to create many Currencies.
     * @example
     * // Create many Currencies
     * const currency = await prisma.currency.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CurrencyCreateManyArgs>(args?: SelectSubset<T, CurrencyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Currencies and returns the data saved in the database.
     * @param {CurrencyCreateManyAndReturnArgs} args - Arguments to create many Currencies.
     * @example
     * // Create many Currencies
     * const currency = await prisma.currency.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Currencies and only return the `id`
     * const currencyWithIdOnly = await prisma.currency.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CurrencyCreateManyAndReturnArgs>(args?: SelectSubset<T, CurrencyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Currency.
     * @param {CurrencyDeleteArgs} args - Arguments to delete one Currency.
     * @example
     * // Delete one Currency
     * const Currency = await prisma.currency.delete({
     *   where: {
     *     // ... filter to delete one Currency
     *   }
     * })
     * 
     */
    delete<T extends CurrencyDeleteArgs>(args: SelectSubset<T, CurrencyDeleteArgs<ExtArgs>>): Prisma__CurrencyClient<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Currency.
     * @param {CurrencyUpdateArgs} args - Arguments to update one Currency.
     * @example
     * // Update one Currency
     * const currency = await prisma.currency.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CurrencyUpdateArgs>(args: SelectSubset<T, CurrencyUpdateArgs<ExtArgs>>): Prisma__CurrencyClient<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Currencies.
     * @param {CurrencyDeleteManyArgs} args - Arguments to filter Currencies to delete.
     * @example
     * // Delete a few Currencies
     * const { count } = await prisma.currency.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CurrencyDeleteManyArgs>(args?: SelectSubset<T, CurrencyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Currencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Currencies
     * const currency = await prisma.currency.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CurrencyUpdateManyArgs>(args: SelectSubset<T, CurrencyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Currencies and returns the data updated in the database.
     * @param {CurrencyUpdateManyAndReturnArgs} args - Arguments to update many Currencies.
     * @example
     * // Update many Currencies
     * const currency = await prisma.currency.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Currencies and only return the `id`
     * const currencyWithIdOnly = await prisma.currency.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CurrencyUpdateManyAndReturnArgs>(args: SelectSubset<T, CurrencyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Currency.
     * @param {CurrencyUpsertArgs} args - Arguments to update or create a Currency.
     * @example
     * // Update or create a Currency
     * const currency = await prisma.currency.upsert({
     *   create: {
     *     // ... data to create a Currency
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Currency we want to update
     *   }
     * })
     */
    upsert<T extends CurrencyUpsertArgs>(args: SelectSubset<T, CurrencyUpsertArgs<ExtArgs>>): Prisma__CurrencyClient<$Result.GetResult<Prisma.$CurrencyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Currencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyCountArgs} args - Arguments to filter Currencies to count.
     * @example
     * // Count the number of Currencies
     * const count = await prisma.currency.count({
     *   where: {
     *     // ... the filter for the Currencies we want to count
     *   }
     * })
    **/
    count<T extends CurrencyCountArgs>(
      args?: Subset<T, CurrencyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CurrencyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Currency.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CurrencyAggregateArgs>(args: Subset<T, CurrencyAggregateArgs>): Prisma.PrismaPromise<GetCurrencyAggregateType<T>>

    /**
     * Group by Currency.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CurrencyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CurrencyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CurrencyGroupByArgs['orderBy'] }
        : { orderBy?: CurrencyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CurrencyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCurrencyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Currency model
   */
  readonly fields: CurrencyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Currency.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CurrencyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
<<<<<<< HEAD
    user_preferences<T extends Currency$user_preferencesArgs<ExtArgs> = {}>(args?: Subset<T, Currency$user_preferencesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
=======
    userPreferences<T extends Currency$userPreferencesArgs<ExtArgs> = {}>(args?: Subset<T, Currency$userPreferencesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products<T extends Currency$productsArgs<ExtArgs> = {}>(args?: Subset<T, Currency$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Currency model
   */
  interface CurrencyFieldRefs {
    readonly id: FieldRef<"Currency", 'BigInt'>
    readonly name: FieldRef<"Currency", 'String'>
    readonly symbol: FieldRef<"Currency", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Currency findUnique
   */
  export type CurrencyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Currency
     */
    select?: CurrencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Currency
     */
    omit?: CurrencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyInclude<ExtArgs> | null
    /**
     * Filter, which Currency to fetch.
     */
    where: CurrencyWhereUniqueInput
  }

  /**
   * Currency findUniqueOrThrow
   */
  export type CurrencyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Currency
     */
    select?: CurrencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Currency
     */
    omit?: CurrencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyInclude<ExtArgs> | null
    /**
     * Filter, which Currency to fetch.
     */
    where: CurrencyWhereUniqueInput
  }

  /**
   * Currency findFirst
   */
  export type CurrencyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Currency
     */
    select?: CurrencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Currency
     */
    omit?: CurrencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyInclude<ExtArgs> | null
    /**
     * Filter, which Currency to fetch.
     */
    where?: CurrencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Currencies to fetch.
     */
    orderBy?: CurrencyOrderByWithRelationInput | CurrencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Currencies.
     */
    cursor?: CurrencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Currencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Currencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Currencies.
     */
    distinct?: CurrencyScalarFieldEnum | CurrencyScalarFieldEnum[]
  }

  /**
   * Currency findFirstOrThrow
   */
  export type CurrencyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Currency
     */
    select?: CurrencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Currency
     */
    omit?: CurrencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyInclude<ExtArgs> | null
    /**
     * Filter, which Currency to fetch.
     */
    where?: CurrencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Currencies to fetch.
     */
    orderBy?: CurrencyOrderByWithRelationInput | CurrencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Currencies.
     */
    cursor?: CurrencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Currencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Currencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Currencies.
     */
    distinct?: CurrencyScalarFieldEnum | CurrencyScalarFieldEnum[]
  }

  /**
   * Currency findMany
   */
  export type CurrencyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Currency
     */
    select?: CurrencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Currency
     */
    omit?: CurrencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyInclude<ExtArgs> | null
    /**
     * Filter, which Currencies to fetch.
     */
    where?: CurrencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Currencies to fetch.
     */
    orderBy?: CurrencyOrderByWithRelationInput | CurrencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Currencies.
     */
    cursor?: CurrencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Currencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Currencies.
     */
    skip?: number
    distinct?: CurrencyScalarFieldEnum | CurrencyScalarFieldEnum[]
  }

  /**
   * Currency create
   */
  export type CurrencyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Currency
     */
    select?: CurrencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Currency
     */
    omit?: CurrencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyInclude<ExtArgs> | null
    /**
     * The data needed to create a Currency.
     */
    data: XOR<CurrencyCreateInput, CurrencyUncheckedCreateInput>
  }

  /**
   * Currency createMany
   */
  export type CurrencyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Currencies.
     */
    data: CurrencyCreateManyInput | CurrencyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Currency createManyAndReturn
   */
  export type CurrencyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Currency
     */
    select?: CurrencySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Currency
     */
    omit?: CurrencyOmit<ExtArgs> | null
    /**
     * The data used to create many Currencies.
     */
    data: CurrencyCreateManyInput | CurrencyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Currency update
   */
  export type CurrencyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Currency
     */
    select?: CurrencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Currency
     */
    omit?: CurrencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyInclude<ExtArgs> | null
    /**
     * The data needed to update a Currency.
     */
    data: XOR<CurrencyUpdateInput, CurrencyUncheckedUpdateInput>
    /**
     * Choose, which Currency to update.
     */
    where: CurrencyWhereUniqueInput
  }

  /**
   * Currency updateMany
   */
  export type CurrencyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Currencies.
     */
    data: XOR<CurrencyUpdateManyMutationInput, CurrencyUncheckedUpdateManyInput>
    /**
     * Filter which Currencies to update
     */
    where?: CurrencyWhereInput
    /**
     * Limit how many Currencies to update.
     */
    limit?: number
  }

  /**
   * Currency updateManyAndReturn
   */
  export type CurrencyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Currency
     */
    select?: CurrencySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Currency
     */
    omit?: CurrencyOmit<ExtArgs> | null
    /**
     * The data used to update Currencies.
     */
    data: XOR<CurrencyUpdateManyMutationInput, CurrencyUncheckedUpdateManyInput>
    /**
     * Filter which Currencies to update
     */
    where?: CurrencyWhereInput
    /**
     * Limit how many Currencies to update.
     */
    limit?: number
  }

  /**
   * Currency upsert
   */
  export type CurrencyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Currency
     */
    select?: CurrencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Currency
     */
    omit?: CurrencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyInclude<ExtArgs> | null
    /**
     * The filter to search for the Currency to update in case it exists.
     */
    where: CurrencyWhereUniqueInput
    /**
     * In case the Currency found by the `where` argument doesn't exist, create a new Currency with this data.
     */
    create: XOR<CurrencyCreateInput, CurrencyUncheckedCreateInput>
    /**
     * In case the Currency was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CurrencyUpdateInput, CurrencyUncheckedUpdateInput>
  }

  /**
   * Currency delete
   */
  export type CurrencyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Currency
     */
    select?: CurrencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Currency
     */
    omit?: CurrencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyInclude<ExtArgs> | null
    /**
     * Filter which Currency to delete.
     */
    where: CurrencyWhereUniqueInput
  }

  /**
   * Currency deleteMany
   */
  export type CurrencyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Currencies to delete
     */
    where?: CurrencyWhereInput
    /**
     * Limit how many Currencies to delete.
     */
    limit?: number
  }

  /**
<<<<<<< HEAD
   * Currency.user_preferences
   */
  export type Currency$user_preferencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
=======
   * Currency.userPreferences
   */
  export type Currency$userPreferencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Currency.products
   */
  export type Currency$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Currency without action
   */
  export type CurrencyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Currency
     */
    select?: CurrencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Currency
     */
    omit?: CurrencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CurrencyInclude<ExtArgs> | null
  }


  /**
   * Model Admin
   */

  export type AggregateAdmin = {
    _count: AdminCountAggregateOutputType | null
    _avg: AdminAvgAggregateOutputType | null
    _sum: AdminSumAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  export type AdminAvgAggregateOutputType = {
    id: number | null
    lang_id: number | null
  }

  export type AdminSumAggregateOutputType = {
    id: bigint | null
    lang_id: bigint | null
  }

  export type AdminMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    surname: string | null
    birth_date: Date | null
    phone: string | null
    password: string | null
    avatar: string | null
    refresh_token: string | null
    lang_id: bigint | null
    is_creator: boolean | null
  }

  export type AdminMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    surname: string | null
    birth_date: Date | null
    phone: string | null
    password: string | null
    avatar: string | null
    refresh_token: string | null
    lang_id: bigint | null
    is_creator: boolean | null
  }

  export type AdminCountAggregateOutputType = {
    id: number
    name: number
    surname: number
    birth_date: number
    phone: number
    password: number
    avatar: number
    refresh_token: number
    lang_id: number
    is_creator: number
    _all: number
  }


  export type AdminAvgAggregateInputType = {
    id?: true
    lang_id?: true
  }

  export type AdminSumAggregateInputType = {
    id?: true
    lang_id?: true
  }

  export type AdminMinAggregateInputType = {
    id?: true
    name?: true
    surname?: true
    birth_date?: true
    phone?: true
    password?: true
    avatar?: true
    refresh_token?: true
    lang_id?: true
    is_creator?: true
  }

  export type AdminMaxAggregateInputType = {
    id?: true
    name?: true
    surname?: true
    birth_date?: true
    phone?: true
    password?: true
    avatar?: true
    refresh_token?: true
    lang_id?: true
    is_creator?: true
  }

  export type AdminCountAggregateInputType = {
    id?: true
    name?: true
    surname?: true
    birth_date?: true
    phone?: true
    password?: true
    avatar?: true
    refresh_token?: true
    lang_id?: true
    is_creator?: true
    _all?: true
  }

  export type AdminAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admin to aggregate.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Admins
    **/
    _count?: true | AdminCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdminAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdminSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminMaxAggregateInputType
  }

  export type GetAdminAggregateType<T extends AdminAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin[P]>
      : GetScalarType<T[P], AggregateAdmin[P]>
  }




  export type AdminGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminWhereInput
    orderBy?: AdminOrderByWithAggregationInput | AdminOrderByWithAggregationInput[]
    by: AdminScalarFieldEnum[] | AdminScalarFieldEnum
    having?: AdminScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminCountAggregateInputType | true
    _avg?: AdminAvgAggregateInputType
    _sum?: AdminSumAggregateInputType
    _min?: AdminMinAggregateInputType
    _max?: AdminMaxAggregateInputType
  }

  export type AdminGroupByOutputType = {
    id: bigint
    name: string
    surname: string
    birth_date: Date
    phone: string
    password: string
<<<<<<< HEAD
    avatar: string | null
    refresh_token: string | null
=======
    avatar: string
    refresh_token: string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lang_id: bigint
    is_creator: boolean
    _count: AdminCountAggregateOutputType | null
    _avg: AdminAvgAggregateOutputType | null
    _sum: AdminSumAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  type GetAdminGroupByPayload<T extends AdminGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminGroupByOutputType[P]>
            : GetScalarType<T[P], AdminGroupByOutputType[P]>
        }
      >
    >


  export type AdminSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    surname?: boolean
    birth_date?: boolean
    phone?: boolean
    password?: boolean
    avatar?: boolean
    refresh_token?: boolean
    lang_id?: boolean
    is_creator?: boolean
    language?: boolean | LanguageDefaultArgs<ExtArgs>
<<<<<<< HEAD
    blocks_issued?: boolean | Admin$blocks_issuedArgs<ExtArgs>
    products_managed?: boolean | Admin$products_managedArgs<ExtArgs>
=======
    blocksIssued?: boolean | Admin$blocksIssuedArgs<ExtArgs>
    productsManaged?: boolean | Admin$productsManagedArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _count?: boolean | AdminCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    surname?: boolean
    birth_date?: boolean
    phone?: boolean
    password?: boolean
    avatar?: boolean
    refresh_token?: boolean
    lang_id?: boolean
    is_creator?: boolean
    language?: boolean | LanguageDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    surname?: boolean
    birth_date?: boolean
    phone?: boolean
    password?: boolean
    avatar?: boolean
    refresh_token?: boolean
    lang_id?: boolean
    is_creator?: boolean
    language?: boolean | LanguageDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectScalar = {
    id?: boolean
    name?: boolean
    surname?: boolean
    birth_date?: boolean
    phone?: boolean
    password?: boolean
    avatar?: boolean
    refresh_token?: boolean
    lang_id?: boolean
    is_creator?: boolean
  }

  export type AdminOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "surname" | "birth_date" | "phone" | "password" | "avatar" | "refresh_token" | "lang_id" | "is_creator", ExtArgs["result"]["admin"]>
  export type AdminInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    language?: boolean | LanguageDefaultArgs<ExtArgs>
<<<<<<< HEAD
    blocks_issued?: boolean | Admin$blocks_issuedArgs<ExtArgs>
    products_managed?: boolean | Admin$products_managedArgs<ExtArgs>
=======
    blocksIssued?: boolean | Admin$blocksIssuedArgs<ExtArgs>
    productsManaged?: boolean | Admin$productsManagedArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _count?: boolean | AdminCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AdminIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    language?: boolean | LanguageDefaultArgs<ExtArgs>
  }
  export type AdminIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    language?: boolean | LanguageDefaultArgs<ExtArgs>
  }

  export type $AdminPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Admin"
    objects: {
      language: Prisma.$LanguagePayload<ExtArgs>
<<<<<<< HEAD
      blocks_issued: Prisma.$BlockPayload<ExtArgs>[]
      products_managed: Prisma.$ProductPayload<ExtArgs>[]
=======
      blocksIssued: Prisma.$BlockPayload<ExtArgs>[]
      productsManaged: Prisma.$ProductPayload<ExtArgs>[]
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      surname: string
      birth_date: Date
      phone: string
      password: string
<<<<<<< HEAD
      avatar: string | null
      refresh_token: string | null
=======
      avatar: string
      refresh_token: string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
      lang_id: bigint
      is_creator: boolean
    }, ExtArgs["result"]["admin"]>
    composites: {}
  }

  type AdminGetPayload<S extends boolean | null | undefined | AdminDefaultArgs> = $Result.GetResult<Prisma.$AdminPayload, S>

  type AdminCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AdminFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdminCountAggregateInputType | true
    }

  export interface AdminDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Admin'], meta: { name: 'Admin' } }
    /**
     * Find zero or one Admin that matches the filter.
     * @param {AdminFindUniqueArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdminFindUniqueArgs>(args: SelectSubset<T, AdminFindUniqueArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Admin that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AdminFindUniqueOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdminFindUniqueOrThrowArgs>(args: SelectSubset<T, AdminFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdminFindFirstArgs>(args?: SelectSubset<T, AdminFindFirstArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdminFindFirstOrThrowArgs>(args?: SelectSubset<T, AdminFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admins
     * const admins = await prisma.admin.findMany()
     * 
     * // Get first 10 Admins
     * const admins = await prisma.admin.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminWithIdOnly = await prisma.admin.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdminFindManyArgs>(args?: SelectSubset<T, AdminFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Admin.
     * @param {AdminCreateArgs} args - Arguments to create a Admin.
     * @example
     * // Create one Admin
     * const Admin = await prisma.admin.create({
     *   data: {
     *     // ... data to create a Admin
     *   }
     * })
     * 
     */
    create<T extends AdminCreateArgs>(args: SelectSubset<T, AdminCreateArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Admins.
     * @param {AdminCreateManyArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admin = await prisma.admin.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdminCreateManyArgs>(args?: SelectSubset<T, AdminCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admins and returns the data saved in the database.
     * @param {AdminCreateManyAndReturnArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admin = await prisma.admin.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admins and only return the `id`
     * const adminWithIdOnly = await prisma.admin.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdminCreateManyAndReturnArgs>(args?: SelectSubset<T, AdminCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Admin.
     * @param {AdminDeleteArgs} args - Arguments to delete one Admin.
     * @example
     * // Delete one Admin
     * const Admin = await prisma.admin.delete({
     *   where: {
     *     // ... filter to delete one Admin
     *   }
     * })
     * 
     */
    delete<T extends AdminDeleteArgs>(args: SelectSubset<T, AdminDeleteArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Admin.
     * @param {AdminUpdateArgs} args - Arguments to update one Admin.
     * @example
     * // Update one Admin
     * const admin = await prisma.admin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdminUpdateArgs>(args: SelectSubset<T, AdminUpdateArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Admins.
     * @param {AdminDeleteManyArgs} args - Arguments to filter Admins to delete.
     * @example
     * // Delete a few Admins
     * const { count } = await prisma.admin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdminDeleteManyArgs>(args?: SelectSubset<T, AdminDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admins
     * const admin = await prisma.admin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdminUpdateManyArgs>(args: SelectSubset<T, AdminUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins and returns the data updated in the database.
     * @param {AdminUpdateManyAndReturnArgs} args - Arguments to update many Admins.
     * @example
     * // Update many Admins
     * const admin = await prisma.admin.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Admins and only return the `id`
     * const adminWithIdOnly = await prisma.admin.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AdminUpdateManyAndReturnArgs>(args: SelectSubset<T, AdminUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Admin.
     * @param {AdminUpsertArgs} args - Arguments to update or create a Admin.
     * @example
     * // Update or create a Admin
     * const admin = await prisma.admin.upsert({
     *   create: {
     *     // ... data to create a Admin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin we want to update
     *   }
     * })
     */
    upsert<T extends AdminUpsertArgs>(args: SelectSubset<T, AdminUpsertArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminCountArgs} args - Arguments to filter Admins to count.
     * @example
     * // Count the number of Admins
     * const count = await prisma.admin.count({
     *   where: {
     *     // ... the filter for the Admins we want to count
     *   }
     * })
    **/
    count<T extends AdminCountArgs>(
      args?: Subset<T, AdminCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminAggregateArgs>(args: Subset<T, AdminAggregateArgs>): Prisma.PrismaPromise<GetAdminAggregateType<T>>

    /**
     * Group by Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdminGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdminGroupByArgs['orderBy'] }
        : { orderBy?: AdminGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdminGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Admin model
   */
  readonly fields: AdminFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Admin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdminClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    language<T extends LanguageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LanguageDefaultArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
<<<<<<< HEAD
    blocks_issued<T extends Admin$blocks_issuedArgs<ExtArgs> = {}>(args?: Subset<T, Admin$blocks_issuedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products_managed<T extends Admin$products_managedArgs<ExtArgs> = {}>(args?: Subset<T, Admin$products_managedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
=======
    blocksIssued<T extends Admin$blocksIssuedArgs<ExtArgs> = {}>(args?: Subset<T, Admin$blocksIssuedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productsManaged<T extends Admin$productsManagedArgs<ExtArgs> = {}>(args?: Subset<T, Admin$productsManagedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Admin model
   */
  interface AdminFieldRefs {
    readonly id: FieldRef<"Admin", 'BigInt'>
    readonly name: FieldRef<"Admin", 'String'>
    readonly surname: FieldRef<"Admin", 'String'>
    readonly birth_date: FieldRef<"Admin", 'DateTime'>
    readonly phone: FieldRef<"Admin", 'String'>
    readonly password: FieldRef<"Admin", 'String'>
    readonly avatar: FieldRef<"Admin", 'String'>
    readonly refresh_token: FieldRef<"Admin", 'String'>
    readonly lang_id: FieldRef<"Admin", 'BigInt'>
    readonly is_creator: FieldRef<"Admin", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Admin findUnique
   */
  export type AdminFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin findUniqueOrThrow
   */
  export type AdminFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin findFirst
   */
  export type AdminFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin findFirstOrThrow
   */
  export type AdminFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin findMany
   */
  export type AdminFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admins to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin create
   */
  export type AdminCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * The data needed to create a Admin.
     */
    data: XOR<AdminCreateInput, AdminUncheckedCreateInput>
  }

  /**
   * Admin createMany
   */
  export type AdminCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Admins.
     */
    data: AdminCreateManyInput | AdminCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Admin createManyAndReturn
   */
  export type AdminCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The data used to create many Admins.
     */
    data: AdminCreateManyInput | AdminCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Admin update
   */
  export type AdminUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * The data needed to update a Admin.
     */
    data: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
    /**
     * Choose, which Admin to update.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin updateMany
   */
  export type AdminUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Admins.
     */
    data: XOR<AdminUpdateManyMutationInput, AdminUncheckedUpdateManyInput>
    /**
     * Filter which Admins to update
     */
    where?: AdminWhereInput
    /**
     * Limit how many Admins to update.
     */
    limit?: number
  }

  /**
   * Admin updateManyAndReturn
   */
  export type AdminUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The data used to update Admins.
     */
    data: XOR<AdminUpdateManyMutationInput, AdminUncheckedUpdateManyInput>
    /**
     * Filter which Admins to update
     */
    where?: AdminWhereInput
    /**
     * Limit how many Admins to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Admin upsert
   */
  export type AdminUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * The filter to search for the Admin to update in case it exists.
     */
    where: AdminWhereUniqueInput
    /**
     * In case the Admin found by the `where` argument doesn't exist, create a new Admin with this data.
     */
    create: XOR<AdminCreateInput, AdminUncheckedCreateInput>
    /**
     * In case the Admin was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
  }

  /**
   * Admin delete
   */
  export type AdminDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter which Admin to delete.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin deleteMany
   */
  export type AdminDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admins to delete
     */
    where?: AdminWhereInput
    /**
     * Limit how many Admins to delete.
     */
    limit?: number
  }

  /**
<<<<<<< HEAD
   * Admin.blocks_issued
   */
  export type Admin$blocks_issuedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
=======
   * Admin.blocksIssued
   */
  export type Admin$blocksIssuedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockInclude<ExtArgs> | null
    where?: BlockWhereInput
    orderBy?: BlockOrderByWithRelationInput | BlockOrderByWithRelationInput[]
    cursor?: BlockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlockScalarFieldEnum | BlockScalarFieldEnum[]
  }

  /**
<<<<<<< HEAD
   * Admin.products_managed
   */
  export type Admin$products_managedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
=======
   * Admin.productsManaged
   */
  export type Admin$productsManagedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Admin without action
   */
  export type AdminDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
  }


  /**
   * Model Block
   */

  export type AggregateBlock = {
    _count: BlockCountAggregateOutputType | null
    _avg: BlockAvgAggregateOutputType | null
    _sum: BlockSumAggregateOutputType | null
    _min: BlockMinAggregateOutputType | null
    _max: BlockMaxAggregateOutputType | null
  }

  export type BlockAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    admin_id: number | null
  }

  export type BlockSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    admin_id: bigint | null
  }

  export type BlockMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    admin_id: bigint | null
    reason: string | null
<<<<<<< HEAD
    expire_date: Date | null
=======
    expireDate: Date | null
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    admin_id: bigint | null
    reason: string | null
<<<<<<< HEAD
    expire_date: Date | null
=======
    expireDate: Date | null
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockCountAggregateOutputType = {
    id: number
    user_id: number
    admin_id: number
    reason: number
<<<<<<< HEAD
    expire_date: number
=======
    expireDate: number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _all: number
  }


  export type BlockAvgAggregateInputType = {
    id?: true
    user_id?: true
    admin_id?: true
  }

  export type BlockSumAggregateInputType = {
    id?: true
    user_id?: true
    admin_id?: true
  }

  export type BlockMinAggregateInputType = {
    id?: true
    user_id?: true
    admin_id?: true
    reason?: true
<<<<<<< HEAD
    expire_date?: true
=======
    expireDate?: true
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockMaxAggregateInputType = {
    id?: true
    user_id?: true
    admin_id?: true
    reason?: true
<<<<<<< HEAD
    expire_date?: true
=======
    expireDate?: true
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockCountAggregateInputType = {
    id?: true
    user_id?: true
    admin_id?: true
    reason?: true
<<<<<<< HEAD
    expire_date?: true
=======
    expireDate?: true
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _all?: true
  }

  export type BlockAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Block to aggregate.
     */
    where?: BlockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Blocks to fetch.
     */
    orderBy?: BlockOrderByWithRelationInput | BlockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BlockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Blocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Blocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Blocks
    **/
    _count?: true | BlockCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BlockAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BlockSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BlockMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BlockMaxAggregateInputType
  }

  export type GetBlockAggregateType<T extends BlockAggregateArgs> = {
        [P in keyof T & keyof AggregateBlock]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBlock[P]>
      : GetScalarType<T[P], AggregateBlock[P]>
  }




  export type BlockGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlockWhereInput
    orderBy?: BlockOrderByWithAggregationInput | BlockOrderByWithAggregationInput[]
    by: BlockScalarFieldEnum[] | BlockScalarFieldEnum
    having?: BlockScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BlockCountAggregateInputType | true
    _avg?: BlockAvgAggregateInputType
    _sum?: BlockSumAggregateInputType
    _min?: BlockMinAggregateInputType
    _max?: BlockMaxAggregateInputType
  }

  export type BlockGroupByOutputType = {
    id: bigint
    user_id: bigint
    admin_id: bigint
    reason: string
<<<<<<< HEAD
    expire_date: Date
=======
    expireDate: Date
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _count: BlockCountAggregateOutputType | null
    _avg: BlockAvgAggregateOutputType | null
    _sum: BlockSumAggregateOutputType | null
    _min: BlockMinAggregateOutputType | null
    _max: BlockMaxAggregateOutputType | null
  }

  type GetBlockGroupByPayload<T extends BlockGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BlockGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BlockGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BlockGroupByOutputType[P]>
            : GetScalarType<T[P], BlockGroupByOutputType[P]>
        }
      >
    >


  export type BlockSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    admin_id?: boolean
    reason?: boolean
<<<<<<< HEAD
    expire_date?: boolean
=======
    expireDate?: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user?: boolean | UserDefaultArgs<ExtArgs>
    admin?: boolean | AdminDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["block"]>

  export type BlockSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    admin_id?: boolean
    reason?: boolean
<<<<<<< HEAD
    expire_date?: boolean
=======
    expireDate?: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user?: boolean | UserDefaultArgs<ExtArgs>
    admin?: boolean | AdminDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["block"]>

  export type BlockSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    admin_id?: boolean
    reason?: boolean
<<<<<<< HEAD
    expire_date?: boolean
=======
    expireDate?: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user?: boolean | UserDefaultArgs<ExtArgs>
    admin?: boolean | AdminDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["block"]>

  export type BlockSelectScalar = {
    id?: boolean
    user_id?: boolean
    admin_id?: boolean
    reason?: boolean
<<<<<<< HEAD
    expire_date?: boolean
  }

  export type BlockOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "admin_id" | "reason" | "expire_date", ExtArgs["result"]["block"]>
=======
    expireDate?: boolean
  }

  export type BlockOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "admin_id" | "reason" | "expireDate", ExtArgs["result"]["block"]>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type BlockInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    admin?: boolean | AdminDefaultArgs<ExtArgs>
  }
  export type BlockIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    admin?: boolean | AdminDefaultArgs<ExtArgs>
  }
  export type BlockIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    admin?: boolean | AdminDefaultArgs<ExtArgs>
  }

  export type $BlockPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Block"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      admin: Prisma.$AdminPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint
      admin_id: bigint
      reason: string
<<<<<<< HEAD
      expire_date: Date
=======
      expireDate: Date
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    }, ExtArgs["result"]["block"]>
    composites: {}
  }

  type BlockGetPayload<S extends boolean | null | undefined | BlockDefaultArgs> = $Result.GetResult<Prisma.$BlockPayload, S>

  type BlockCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BlockFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BlockCountAggregateInputType | true
    }

  export interface BlockDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Block'], meta: { name: 'Block' } }
    /**
     * Find zero or one Block that matches the filter.
     * @param {BlockFindUniqueArgs} args - Arguments to find a Block
     * @example
     * // Get one Block
     * const block = await prisma.block.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BlockFindUniqueArgs>(args: SelectSubset<T, BlockFindUniqueArgs<ExtArgs>>): Prisma__BlockClient<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Block that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BlockFindUniqueOrThrowArgs} args - Arguments to find a Block
     * @example
     * // Get one Block
     * const block = await prisma.block.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BlockFindUniqueOrThrowArgs>(args: SelectSubset<T, BlockFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BlockClient<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Block that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockFindFirstArgs} args - Arguments to find a Block
     * @example
     * // Get one Block
     * const block = await prisma.block.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BlockFindFirstArgs>(args?: SelectSubset<T, BlockFindFirstArgs<ExtArgs>>): Prisma__BlockClient<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Block that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockFindFirstOrThrowArgs} args - Arguments to find a Block
     * @example
     * // Get one Block
     * const block = await prisma.block.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BlockFindFirstOrThrowArgs>(args?: SelectSubset<T, BlockFindFirstOrThrowArgs<ExtArgs>>): Prisma__BlockClient<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Blocks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Blocks
     * const blocks = await prisma.block.findMany()
     * 
     * // Get first 10 Blocks
     * const blocks = await prisma.block.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const blockWithIdOnly = await prisma.block.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BlockFindManyArgs>(args?: SelectSubset<T, BlockFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Block.
     * @param {BlockCreateArgs} args - Arguments to create a Block.
     * @example
     * // Create one Block
     * const Block = await prisma.block.create({
     *   data: {
     *     // ... data to create a Block
     *   }
     * })
     * 
     */
    create<T extends BlockCreateArgs>(args: SelectSubset<T, BlockCreateArgs<ExtArgs>>): Prisma__BlockClient<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Blocks.
     * @param {BlockCreateManyArgs} args - Arguments to create many Blocks.
     * @example
     * // Create many Blocks
     * const block = await prisma.block.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BlockCreateManyArgs>(args?: SelectSubset<T, BlockCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Blocks and returns the data saved in the database.
     * @param {BlockCreateManyAndReturnArgs} args - Arguments to create many Blocks.
     * @example
     * // Create many Blocks
     * const block = await prisma.block.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Blocks and only return the `id`
     * const blockWithIdOnly = await prisma.block.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BlockCreateManyAndReturnArgs>(args?: SelectSubset<T, BlockCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Block.
     * @param {BlockDeleteArgs} args - Arguments to delete one Block.
     * @example
     * // Delete one Block
     * const Block = await prisma.block.delete({
     *   where: {
     *     // ... filter to delete one Block
     *   }
     * })
     * 
     */
    delete<T extends BlockDeleteArgs>(args: SelectSubset<T, BlockDeleteArgs<ExtArgs>>): Prisma__BlockClient<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Block.
     * @param {BlockUpdateArgs} args - Arguments to update one Block.
     * @example
     * // Update one Block
     * const block = await prisma.block.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BlockUpdateArgs>(args: SelectSubset<T, BlockUpdateArgs<ExtArgs>>): Prisma__BlockClient<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Blocks.
     * @param {BlockDeleteManyArgs} args - Arguments to filter Blocks to delete.
     * @example
     * // Delete a few Blocks
     * const { count } = await prisma.block.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BlockDeleteManyArgs>(args?: SelectSubset<T, BlockDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Blocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Blocks
     * const block = await prisma.block.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BlockUpdateManyArgs>(args: SelectSubset<T, BlockUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Blocks and returns the data updated in the database.
     * @param {BlockUpdateManyAndReturnArgs} args - Arguments to update many Blocks.
     * @example
     * // Update many Blocks
     * const block = await prisma.block.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Blocks and only return the `id`
     * const blockWithIdOnly = await prisma.block.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BlockUpdateManyAndReturnArgs>(args: SelectSubset<T, BlockUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Block.
     * @param {BlockUpsertArgs} args - Arguments to update or create a Block.
     * @example
     * // Update or create a Block
     * const block = await prisma.block.upsert({
     *   create: {
     *     // ... data to create a Block
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Block we want to update
     *   }
     * })
     */
    upsert<T extends BlockUpsertArgs>(args: SelectSubset<T, BlockUpsertArgs<ExtArgs>>): Prisma__BlockClient<$Result.GetResult<Prisma.$BlockPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Blocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockCountArgs} args - Arguments to filter Blocks to count.
     * @example
     * // Count the number of Blocks
     * const count = await prisma.block.count({
     *   where: {
     *     // ... the filter for the Blocks we want to count
     *   }
     * })
    **/
    count<T extends BlockCountArgs>(
      args?: Subset<T, BlockCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BlockCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Block.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BlockAggregateArgs>(args: Subset<T, BlockAggregateArgs>): Prisma.PrismaPromise<GetBlockAggregateType<T>>

    /**
     * Group by Block.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BlockGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BlockGroupByArgs['orderBy'] }
        : { orderBy?: BlockGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BlockGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBlockGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Block model
   */
  readonly fields: BlockFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Block.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BlockClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    admin<T extends AdminDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AdminDefaultArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Block model
   */
  interface BlockFieldRefs {
    readonly id: FieldRef<"Block", 'BigInt'>
    readonly user_id: FieldRef<"Block", 'BigInt'>
    readonly admin_id: FieldRef<"Block", 'BigInt'>
    readonly reason: FieldRef<"Block", 'String'>
<<<<<<< HEAD
    readonly expire_date: FieldRef<"Block", 'DateTime'>
=======
    readonly expireDate: FieldRef<"Block", 'DateTime'>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }
    

  // Custom InputTypes
  /**
   * Block findUnique
   */
  export type BlockFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockInclude<ExtArgs> | null
    /**
     * Filter, which Block to fetch.
     */
    where: BlockWhereUniqueInput
  }

  /**
   * Block findUniqueOrThrow
   */
  export type BlockFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockInclude<ExtArgs> | null
    /**
     * Filter, which Block to fetch.
     */
    where: BlockWhereUniqueInput
  }

  /**
   * Block findFirst
   */
  export type BlockFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockInclude<ExtArgs> | null
    /**
     * Filter, which Block to fetch.
     */
    where?: BlockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Blocks to fetch.
     */
    orderBy?: BlockOrderByWithRelationInput | BlockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Blocks.
     */
    cursor?: BlockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Blocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Blocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Blocks.
     */
    distinct?: BlockScalarFieldEnum | BlockScalarFieldEnum[]
  }

  /**
   * Block findFirstOrThrow
   */
  export type BlockFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockInclude<ExtArgs> | null
    /**
     * Filter, which Block to fetch.
     */
    where?: BlockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Blocks to fetch.
     */
    orderBy?: BlockOrderByWithRelationInput | BlockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Blocks.
     */
    cursor?: BlockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Blocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Blocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Blocks.
     */
    distinct?: BlockScalarFieldEnum | BlockScalarFieldEnum[]
  }

  /**
   * Block findMany
   */
  export type BlockFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockInclude<ExtArgs> | null
    /**
     * Filter, which Blocks to fetch.
     */
    where?: BlockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Blocks to fetch.
     */
    orderBy?: BlockOrderByWithRelationInput | BlockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Blocks.
     */
    cursor?: BlockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Blocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Blocks.
     */
    skip?: number
    distinct?: BlockScalarFieldEnum | BlockScalarFieldEnum[]
  }

  /**
   * Block create
   */
  export type BlockCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockInclude<ExtArgs> | null
    /**
     * The data needed to create a Block.
     */
    data: XOR<BlockCreateInput, BlockUncheckedCreateInput>
  }

  /**
   * Block createMany
   */
  export type BlockCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Blocks.
     */
    data: BlockCreateManyInput | BlockCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Block createManyAndReturn
   */
  export type BlockCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * The data used to create many Blocks.
     */
    data: BlockCreateManyInput | BlockCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Block update
   */
  export type BlockUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockInclude<ExtArgs> | null
    /**
     * The data needed to update a Block.
     */
    data: XOR<BlockUpdateInput, BlockUncheckedUpdateInput>
    /**
     * Choose, which Block to update.
     */
    where: BlockWhereUniqueInput
  }

  /**
   * Block updateMany
   */
  export type BlockUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Blocks.
     */
    data: XOR<BlockUpdateManyMutationInput, BlockUncheckedUpdateManyInput>
    /**
     * Filter which Blocks to update
     */
    where?: BlockWhereInput
    /**
     * Limit how many Blocks to update.
     */
    limit?: number
  }

  /**
   * Block updateManyAndReturn
   */
  export type BlockUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * The data used to update Blocks.
     */
    data: XOR<BlockUpdateManyMutationInput, BlockUncheckedUpdateManyInput>
    /**
     * Filter which Blocks to update
     */
    where?: BlockWhereInput
    /**
     * Limit how many Blocks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Block upsert
   */
  export type BlockUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockInclude<ExtArgs> | null
    /**
     * The filter to search for the Block to update in case it exists.
     */
    where: BlockWhereUniqueInput
    /**
     * In case the Block found by the `where` argument doesn't exist, create a new Block with this data.
     */
    create: XOR<BlockCreateInput, BlockUncheckedCreateInput>
    /**
     * In case the Block was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BlockUpdateInput, BlockUncheckedUpdateInput>
  }

  /**
   * Block delete
   */
  export type BlockDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockInclude<ExtArgs> | null
    /**
     * Filter which Block to delete.
     */
    where: BlockWhereUniqueInput
  }

  /**
   * Block deleteMany
   */
  export type BlockDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Blocks to delete
     */
    where?: BlockWhereInput
    /**
     * Limit how many Blocks to delete.
     */
    limit?: number
  }

  /**
   * Block without action
   */
  export type BlockDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Block
     */
    select?: BlockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Block
     */
    omit?: BlockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    amount: number | null
    payment_method_id: number | null
  }

  export type PaymentSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    amount: number | null
    payment_method_id: bigint | null
  }

  export type PaymentMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    amount: number | null
    payment_method_id: bigint | null
  }

  export type PaymentMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    amount: number | null
    payment_method_id: bigint | null
  }

  export type PaymentCountAggregateOutputType = {
    id: number
    user_id: number
    amount: number
    payment_method_id: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    id?: true
    user_id?: true
    amount?: true
    payment_method_id?: true
  }

  export type PaymentSumAggregateInputType = {
    id?: true
    user_id?: true
    amount?: true
    payment_method_id?: true
  }

  export type PaymentMinAggregateInputType = {
    id?: true
    user_id?: true
    amount?: true
    payment_method_id?: true
  }

  export type PaymentMaxAggregateInputType = {
    id?: true
    user_id?: true
    amount?: true
    payment_method_id?: true
  }

  export type PaymentCountAggregateInputType = {
    id?: true
    user_id?: true
    amount?: true
    payment_method_id?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    id: bigint
    user_id: bigint
    amount: number
    payment_method_id: bigint
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    amount?: boolean
    payment_method_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
<<<<<<< HEAD
    payment_method?: boolean | PaymentMethodDefaultArgs<ExtArgs>
=======
    paymentMethod?: boolean | PaymentMethodDefaultArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    amount?: boolean
    payment_method_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
<<<<<<< HEAD
    payment_method?: boolean | PaymentMethodDefaultArgs<ExtArgs>
=======
    paymentMethod?: boolean | PaymentMethodDefaultArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    amount?: boolean
    payment_method_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
<<<<<<< HEAD
    payment_method?: boolean | PaymentMethodDefaultArgs<ExtArgs>
=======
    paymentMethod?: boolean | PaymentMethodDefaultArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectScalar = {
    id?: boolean
    user_id?: boolean
    amount?: boolean
    payment_method_id?: boolean
  }

  export type PaymentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "amount" | "payment_method_id", ExtArgs["result"]["payment"]>
  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
<<<<<<< HEAD
    payment_method?: boolean | PaymentMethodDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    payment_method?: boolean | PaymentMethodDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    payment_method?: boolean | PaymentMethodDefaultArgs<ExtArgs>
=======
    paymentMethod?: boolean | PaymentMethodDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    paymentMethod?: boolean | PaymentMethodDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    paymentMethod?: boolean | PaymentMethodDefaultArgs<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
<<<<<<< HEAD
      payment_method: Prisma.$PaymentMethodPayload<ExtArgs>
=======
      paymentMethod: Prisma.$PaymentMethodPayload<ExtArgs>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint
      amount: number
      payment_method_id: bigint
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentWithIdOnly = await prisma.payment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {PaymentCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments and returns the data updated in the database.
     * @param {PaymentUpdateManyAndReturnArgs} args - Arguments to update many Payments.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
<<<<<<< HEAD
    payment_method<T extends PaymentMethodDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PaymentMethodDefaultArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
=======
    paymentMethod<T extends PaymentMethodDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PaymentMethodDefaultArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */
  interface PaymentFieldRefs {
    readonly id: FieldRef<"Payment", 'BigInt'>
    readonly user_id: FieldRef<"Payment", 'BigInt'>
    readonly amount: FieldRef<"Payment", 'Float'>
    readonly payment_method_id: FieldRef<"Payment", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment createManyAndReturn
   */
  export type PaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
  }

  /**
   * Payment updateManyAndReturn
   */
  export type PaymentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to delete.
     */
    limit?: number
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model Comment
   */

  export type AggregateComment = {
    _count: CommentCountAggregateOutputType | null
    _avg: CommentAvgAggregateOutputType | null
    _sum: CommentSumAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  export type CommentAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    product_id: number | null
  }

  export type CommentSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    product_id: bigint | null
  }

  export type CommentMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    product_id: bigint | null
    text: string | null
  }

  export type CommentMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    product_id: bigint | null
    text: string | null
  }

  export type CommentCountAggregateOutputType = {
    id: number
    user_id: number
    product_id: number
    text: number
    _all: number
  }


  export type CommentAvgAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
  }

  export type CommentSumAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
  }

  export type CommentMinAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
    text?: true
  }

  export type CommentMaxAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
    text?: true
  }

  export type CommentCountAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
    text?: true
    _all?: true
  }

  export type CommentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comment to aggregate.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Comments
    **/
    _count?: true | CommentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CommentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CommentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommentMaxAggregateInputType
  }

  export type GetCommentAggregateType<T extends CommentAggregateArgs> = {
        [P in keyof T & keyof AggregateComment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComment[P]>
      : GetScalarType<T[P], AggregateComment[P]>
  }




  export type CommentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithAggregationInput | CommentOrderByWithAggregationInput[]
    by: CommentScalarFieldEnum[] | CommentScalarFieldEnum
    having?: CommentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommentCountAggregateInputType | true
    _avg?: CommentAvgAggregateInputType
    _sum?: CommentSumAggregateInputType
    _min?: CommentMinAggregateInputType
    _max?: CommentMaxAggregateInputType
  }

  export type CommentGroupByOutputType = {
    id: bigint
    user_id: bigint
    product_id: bigint
    text: string
    _count: CommentCountAggregateOutputType | null
    _avg: CommentAvgAggregateOutputType | null
    _sum: CommentSumAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  type GetCommentGroupByPayload<T extends CommentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommentGroupByOutputType[P]>
            : GetScalarType<T[P], CommentGroupByOutputType[P]>
        }
      >
    >


  export type CommentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    product_id?: boolean
    text?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    product_id?: boolean
    text?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    product_id?: boolean
    text?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectScalar = {
    id?: boolean
    user_id?: boolean
    product_id?: boolean
    text?: boolean
  }

  export type CommentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "product_id" | "text", ExtArgs["result"]["comment"]>
  export type CommentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type CommentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type CommentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $CommentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Comment"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint
      product_id: bigint
      text: string
    }, ExtArgs["result"]["comment"]>
    composites: {}
  }

  type CommentGetPayload<S extends boolean | null | undefined | CommentDefaultArgs> = $Result.GetResult<Prisma.$CommentPayload, S>

  type CommentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommentCountAggregateInputType | true
    }

  export interface CommentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Comment'], meta: { name: 'Comment' } }
    /**
     * Find zero or one Comment that matches the filter.
     * @param {CommentFindUniqueArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommentFindUniqueArgs>(args: SelectSubset<T, CommentFindUniqueArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Comment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommentFindUniqueOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommentFindUniqueOrThrowArgs>(args: SelectSubset<T, CommentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindFirstArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommentFindFirstArgs>(args?: SelectSubset<T, CommentFindFirstArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindFirstOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommentFindFirstOrThrowArgs>(args?: SelectSubset<T, CommentFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comments
     * const comments = await prisma.comment.findMany()
     * 
     * // Get first 10 Comments
     * const comments = await prisma.comment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commentWithIdOnly = await prisma.comment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CommentFindManyArgs>(args?: SelectSubset<T, CommentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Comment.
     * @param {CommentCreateArgs} args - Arguments to create a Comment.
     * @example
     * // Create one Comment
     * const Comment = await prisma.comment.create({
     *   data: {
     *     // ... data to create a Comment
     *   }
     * })
     * 
     */
    create<T extends CommentCreateArgs>(args: SelectSubset<T, CommentCreateArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Comments.
     * @param {CommentCreateManyArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comment = await prisma.comment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommentCreateManyArgs>(args?: SelectSubset<T, CommentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Comments and returns the data saved in the database.
     * @param {CommentCreateManyAndReturnArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comment = await prisma.comment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Comments and only return the `id`
     * const commentWithIdOnly = await prisma.comment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CommentCreateManyAndReturnArgs>(args?: SelectSubset<T, CommentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Comment.
     * @param {CommentDeleteArgs} args - Arguments to delete one Comment.
     * @example
     * // Delete one Comment
     * const Comment = await prisma.comment.delete({
     *   where: {
     *     // ... filter to delete one Comment
     *   }
     * })
     * 
     */
    delete<T extends CommentDeleteArgs>(args: SelectSubset<T, CommentDeleteArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Comment.
     * @param {CommentUpdateArgs} args - Arguments to update one Comment.
     * @example
     * // Update one Comment
     * const comment = await prisma.comment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommentUpdateArgs>(args: SelectSubset<T, CommentUpdateArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Comments.
     * @param {CommentDeleteManyArgs} args - Arguments to filter Comments to delete.
     * @example
     * // Delete a few Comments
     * const { count } = await prisma.comment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommentDeleteManyArgs>(args?: SelectSubset<T, CommentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comments
     * const comment = await prisma.comment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommentUpdateManyArgs>(args: SelectSubset<T, CommentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments and returns the data updated in the database.
     * @param {CommentUpdateManyAndReturnArgs} args - Arguments to update many Comments.
     * @example
     * // Update many Comments
     * const comment = await prisma.comment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Comments and only return the `id`
     * const commentWithIdOnly = await prisma.comment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CommentUpdateManyAndReturnArgs>(args: SelectSubset<T, CommentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Comment.
     * @param {CommentUpsertArgs} args - Arguments to update or create a Comment.
     * @example
     * // Update or create a Comment
     * const comment = await prisma.comment.upsert({
     *   create: {
     *     // ... data to create a Comment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comment we want to update
     *   }
     * })
     */
    upsert<T extends CommentUpsertArgs>(args: SelectSubset<T, CommentUpsertArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentCountArgs} args - Arguments to filter Comments to count.
     * @example
     * // Count the number of Comments
     * const count = await prisma.comment.count({
     *   where: {
     *     // ... the filter for the Comments we want to count
     *   }
     * })
    **/
    count<T extends CommentCountArgs>(
      args?: Subset<T, CommentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommentAggregateArgs>(args: Subset<T, CommentAggregateArgs>): Prisma.PrismaPromise<GetCommentAggregateType<T>>

    /**
     * Group by Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommentGroupByArgs['orderBy'] }
        : { orderBy?: CommentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Comment model
   */
  readonly fields: CommentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Comment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Comment model
   */
  interface CommentFieldRefs {
    readonly id: FieldRef<"Comment", 'BigInt'>
    readonly user_id: FieldRef<"Comment", 'BigInt'>
    readonly product_id: FieldRef<"Comment", 'BigInt'>
    readonly text: FieldRef<"Comment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Comment findUnique
   */
  export type CommentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment findUniqueOrThrow
   */
  export type CommentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment findFirst
   */
  export type CommentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment findFirstOrThrow
   */
  export type CommentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment findMany
   */
  export type CommentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comments to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment create
   */
  export type CommentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The data needed to create a Comment.
     */
    data: XOR<CommentCreateInput, CommentUncheckedCreateInput>
  }

  /**
   * Comment createMany
   */
  export type CommentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Comments.
     */
    data: CommentCreateManyInput | CommentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Comment createManyAndReturn
   */
  export type CommentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * The data used to create many Comments.
     */
    data: CommentCreateManyInput | CommentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Comment update
   */
  export type CommentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The data needed to update a Comment.
     */
    data: XOR<CommentUpdateInput, CommentUncheckedUpdateInput>
    /**
     * Choose, which Comment to update.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment updateMany
   */
  export type CommentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Comments.
     */
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyInput>
    /**
     * Filter which Comments to update
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to update.
     */
    limit?: number
  }

  /**
   * Comment updateManyAndReturn
   */
  export type CommentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * The data used to update Comments.
     */
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyInput>
    /**
     * Filter which Comments to update
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Comment upsert
   */
  export type CommentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The filter to search for the Comment to update in case it exists.
     */
    where: CommentWhereUniqueInput
    /**
     * In case the Comment found by the `where` argument doesn't exist, create a new Comment with this data.
     */
    create: XOR<CommentCreateInput, CommentUncheckedCreateInput>
    /**
     * In case the Comment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommentUpdateInput, CommentUncheckedUpdateInput>
  }

  /**
   * Comment delete
   */
  export type CommentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter which Comment to delete.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment deleteMany
   */
  export type CommentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comments to delete
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to delete.
     */
    limit?: number
  }

  /**
   * Comment without action
   */
  export type CommentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
  }


  /**
   * Model PaymentMethod
   */

  export type AggregatePaymentMethod = {
    _count: PaymentMethodCountAggregateOutputType | null
    _avg: PaymentMethodAvgAggregateOutputType | null
    _sum: PaymentMethodSumAggregateOutputType | null
    _min: PaymentMethodMinAggregateOutputType | null
    _max: PaymentMethodMaxAggregateOutputType | null
  }

  export type PaymentMethodAvgAggregateOutputType = {
    id: number | null
  }

  export type PaymentMethodSumAggregateOutputType = {
    id: bigint | null
  }

  export type PaymentMethodMinAggregateOutputType = {
    id: bigint | null
    name: string | null
  }

  export type PaymentMethodMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
  }

  export type PaymentMethodCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type PaymentMethodAvgAggregateInputType = {
    id?: true
  }

  export type PaymentMethodSumAggregateInputType = {
    id?: true
  }

  export type PaymentMethodMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type PaymentMethodMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type PaymentMethodCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type PaymentMethodAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentMethod to aggregate.
     */
    where?: PaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentMethods to fetch.
     */
    orderBy?: PaymentMethodOrderByWithRelationInput | PaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentMethods
    **/
    _count?: true | PaymentMethodCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentMethodAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentMethodSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMethodMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMethodMaxAggregateInputType
  }

  export type GetPaymentMethodAggregateType<T extends PaymentMethodAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentMethod]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentMethod[P]>
      : GetScalarType<T[P], AggregatePaymentMethod[P]>
  }




  export type PaymentMethodGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentMethodWhereInput
    orderBy?: PaymentMethodOrderByWithAggregationInput | PaymentMethodOrderByWithAggregationInput[]
    by: PaymentMethodScalarFieldEnum[] | PaymentMethodScalarFieldEnum
    having?: PaymentMethodScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentMethodCountAggregateInputType | true
    _avg?: PaymentMethodAvgAggregateInputType
    _sum?: PaymentMethodSumAggregateInputType
    _min?: PaymentMethodMinAggregateInputType
    _max?: PaymentMethodMaxAggregateInputType
  }

  export type PaymentMethodGroupByOutputType = {
    id: bigint
    name: string
    _count: PaymentMethodCountAggregateOutputType | null
    _avg: PaymentMethodAvgAggregateOutputType | null
    _sum: PaymentMethodSumAggregateOutputType | null
    _min: PaymentMethodMinAggregateOutputType | null
    _max: PaymentMethodMaxAggregateOutputType | null
  }

  type GetPaymentMethodGroupByPayload<T extends PaymentMethodGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentMethodGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentMethodGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentMethodGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentMethodGroupByOutputType[P]>
        }
      >
    >


  export type PaymentMethodSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    payments?: boolean | PaymentMethod$paymentsArgs<ExtArgs>
    _count?: boolean | PaymentMethodCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentMethod"]>

  export type PaymentMethodSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["paymentMethod"]>

  export type PaymentMethodSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["paymentMethod"]>

  export type PaymentMethodSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type PaymentMethodOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["paymentMethod"]>
  export type PaymentMethodInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payments?: boolean | PaymentMethod$paymentsArgs<ExtArgs>
    _count?: boolean | PaymentMethodCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PaymentMethodIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PaymentMethodIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PaymentMethodPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentMethod"
    objects: {
      payments: Prisma.$PaymentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
    }, ExtArgs["result"]["paymentMethod"]>
    composites: {}
  }

  type PaymentMethodGetPayload<S extends boolean | null | undefined | PaymentMethodDefaultArgs> = $Result.GetResult<Prisma.$PaymentMethodPayload, S>

  type PaymentMethodCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentMethodFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentMethodCountAggregateInputType | true
    }

  export interface PaymentMethodDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentMethod'], meta: { name: 'PaymentMethod' } }
    /**
     * Find zero or one PaymentMethod that matches the filter.
     * @param {PaymentMethodFindUniqueArgs} args - Arguments to find a PaymentMethod
     * @example
     * // Get one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentMethodFindUniqueArgs>(args: SelectSubset<T, PaymentMethodFindUniqueArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PaymentMethod that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentMethodFindUniqueOrThrowArgs} args - Arguments to find a PaymentMethod
     * @example
     * // Get one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentMethodFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentMethodFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentMethod that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodFindFirstArgs} args - Arguments to find a PaymentMethod
     * @example
     * // Get one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentMethodFindFirstArgs>(args?: SelectSubset<T, PaymentMethodFindFirstArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentMethod that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodFindFirstOrThrowArgs} args - Arguments to find a PaymentMethod
     * @example
     * // Get one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentMethodFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentMethodFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PaymentMethods that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentMethods
     * const paymentMethods = await prisma.paymentMethod.findMany()
     * 
     * // Get first 10 PaymentMethods
     * const paymentMethods = await prisma.paymentMethod.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentMethodWithIdOnly = await prisma.paymentMethod.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentMethodFindManyArgs>(args?: SelectSubset<T, PaymentMethodFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PaymentMethod.
     * @param {PaymentMethodCreateArgs} args - Arguments to create a PaymentMethod.
     * @example
     * // Create one PaymentMethod
     * const PaymentMethod = await prisma.paymentMethod.create({
     *   data: {
     *     // ... data to create a PaymentMethod
     *   }
     * })
     * 
     */
    create<T extends PaymentMethodCreateArgs>(args: SelectSubset<T, PaymentMethodCreateArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PaymentMethods.
     * @param {PaymentMethodCreateManyArgs} args - Arguments to create many PaymentMethods.
     * @example
     * // Create many PaymentMethods
     * const paymentMethod = await prisma.paymentMethod.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentMethodCreateManyArgs>(args?: SelectSubset<T, PaymentMethodCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentMethods and returns the data saved in the database.
     * @param {PaymentMethodCreateManyAndReturnArgs} args - Arguments to create many PaymentMethods.
     * @example
     * // Create many PaymentMethods
     * const paymentMethod = await prisma.paymentMethod.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentMethods and only return the `id`
     * const paymentMethodWithIdOnly = await prisma.paymentMethod.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentMethodCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentMethodCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PaymentMethod.
     * @param {PaymentMethodDeleteArgs} args - Arguments to delete one PaymentMethod.
     * @example
     * // Delete one PaymentMethod
     * const PaymentMethod = await prisma.paymentMethod.delete({
     *   where: {
     *     // ... filter to delete one PaymentMethod
     *   }
     * })
     * 
     */
    delete<T extends PaymentMethodDeleteArgs>(args: SelectSubset<T, PaymentMethodDeleteArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PaymentMethod.
     * @param {PaymentMethodUpdateArgs} args - Arguments to update one PaymentMethod.
     * @example
     * // Update one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentMethodUpdateArgs>(args: SelectSubset<T, PaymentMethodUpdateArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PaymentMethods.
     * @param {PaymentMethodDeleteManyArgs} args - Arguments to filter PaymentMethods to delete.
     * @example
     * // Delete a few PaymentMethods
     * const { count } = await prisma.paymentMethod.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentMethodDeleteManyArgs>(args?: SelectSubset<T, PaymentMethodDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentMethods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentMethods
     * const paymentMethod = await prisma.paymentMethod.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentMethodUpdateManyArgs>(args: SelectSubset<T, PaymentMethodUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentMethods and returns the data updated in the database.
     * @param {PaymentMethodUpdateManyAndReturnArgs} args - Arguments to update many PaymentMethods.
     * @example
     * // Update many PaymentMethods
     * const paymentMethod = await prisma.paymentMethod.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PaymentMethods and only return the `id`
     * const paymentMethodWithIdOnly = await prisma.paymentMethod.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentMethodUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentMethodUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PaymentMethod.
     * @param {PaymentMethodUpsertArgs} args - Arguments to update or create a PaymentMethod.
     * @example
     * // Update or create a PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.upsert({
     *   create: {
     *     // ... data to create a PaymentMethod
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentMethod we want to update
     *   }
     * })
     */
    upsert<T extends PaymentMethodUpsertArgs>(args: SelectSubset<T, PaymentMethodUpsertArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PaymentMethods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodCountArgs} args - Arguments to filter PaymentMethods to count.
     * @example
     * // Count the number of PaymentMethods
     * const count = await prisma.paymentMethod.count({
     *   where: {
     *     // ... the filter for the PaymentMethods we want to count
     *   }
     * })
    **/
    count<T extends PaymentMethodCountArgs>(
      args?: Subset<T, PaymentMethodCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentMethodCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentMethod.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentMethodAggregateArgs>(args: Subset<T, PaymentMethodAggregateArgs>): Prisma.PrismaPromise<GetPaymentMethodAggregateType<T>>

    /**
     * Group by PaymentMethod.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentMethodGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentMethodGroupByArgs['orderBy'] }
        : { orderBy?: PaymentMethodGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentMethodGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentMethodGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentMethod model
   */
  readonly fields: PaymentMethodFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentMethod.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentMethodClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    payments<T extends PaymentMethod$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, PaymentMethod$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentMethod model
   */
  interface PaymentMethodFieldRefs {
    readonly id: FieldRef<"PaymentMethod", 'BigInt'>
    readonly name: FieldRef<"PaymentMethod", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PaymentMethod findUnique
   */
  export type PaymentMethodFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which PaymentMethod to fetch.
     */
    where: PaymentMethodWhereUniqueInput
  }

  /**
   * PaymentMethod findUniqueOrThrow
   */
  export type PaymentMethodFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which PaymentMethod to fetch.
     */
    where: PaymentMethodWhereUniqueInput
  }

  /**
   * PaymentMethod findFirst
   */
  export type PaymentMethodFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which PaymentMethod to fetch.
     */
    where?: PaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentMethods to fetch.
     */
    orderBy?: PaymentMethodOrderByWithRelationInput | PaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentMethods.
     */
    cursor?: PaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentMethods.
     */
    distinct?: PaymentMethodScalarFieldEnum | PaymentMethodScalarFieldEnum[]
  }

  /**
   * PaymentMethod findFirstOrThrow
   */
  export type PaymentMethodFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which PaymentMethod to fetch.
     */
    where?: PaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentMethods to fetch.
     */
    orderBy?: PaymentMethodOrderByWithRelationInput | PaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentMethods.
     */
    cursor?: PaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentMethods.
     */
    distinct?: PaymentMethodScalarFieldEnum | PaymentMethodScalarFieldEnum[]
  }

  /**
   * PaymentMethod findMany
   */
  export type PaymentMethodFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which PaymentMethods to fetch.
     */
    where?: PaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentMethods to fetch.
     */
    orderBy?: PaymentMethodOrderByWithRelationInput | PaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentMethods.
     */
    cursor?: PaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentMethods.
     */
    skip?: number
    distinct?: PaymentMethodScalarFieldEnum | PaymentMethodScalarFieldEnum[]
  }

  /**
   * PaymentMethod create
   */
  export type PaymentMethodCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * The data needed to create a PaymentMethod.
     */
    data: XOR<PaymentMethodCreateInput, PaymentMethodUncheckedCreateInput>
  }

  /**
   * PaymentMethod createMany
   */
  export type PaymentMethodCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentMethods.
     */
    data: PaymentMethodCreateManyInput | PaymentMethodCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentMethod createManyAndReturn
   */
  export type PaymentMethodCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * The data used to create many PaymentMethods.
     */
    data: PaymentMethodCreateManyInput | PaymentMethodCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentMethod update
   */
  export type PaymentMethodUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * The data needed to update a PaymentMethod.
     */
    data: XOR<PaymentMethodUpdateInput, PaymentMethodUncheckedUpdateInput>
    /**
     * Choose, which PaymentMethod to update.
     */
    where: PaymentMethodWhereUniqueInput
  }

  /**
   * PaymentMethod updateMany
   */
  export type PaymentMethodUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentMethods.
     */
    data: XOR<PaymentMethodUpdateManyMutationInput, PaymentMethodUncheckedUpdateManyInput>
    /**
     * Filter which PaymentMethods to update
     */
    where?: PaymentMethodWhereInput
    /**
     * Limit how many PaymentMethods to update.
     */
    limit?: number
  }

  /**
   * PaymentMethod updateManyAndReturn
   */
  export type PaymentMethodUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * The data used to update PaymentMethods.
     */
    data: XOR<PaymentMethodUpdateManyMutationInput, PaymentMethodUncheckedUpdateManyInput>
    /**
     * Filter which PaymentMethods to update
     */
    where?: PaymentMethodWhereInput
    /**
     * Limit how many PaymentMethods to update.
     */
    limit?: number
  }

  /**
   * PaymentMethod upsert
   */
  export type PaymentMethodUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * The filter to search for the PaymentMethod to update in case it exists.
     */
    where: PaymentMethodWhereUniqueInput
    /**
     * In case the PaymentMethod found by the `where` argument doesn't exist, create a new PaymentMethod with this data.
     */
    create: XOR<PaymentMethodCreateInput, PaymentMethodUncheckedCreateInput>
    /**
     * In case the PaymentMethod was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentMethodUpdateInput, PaymentMethodUncheckedUpdateInput>
  }

  /**
   * PaymentMethod delete
   */
  export type PaymentMethodDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
    /**
     * Filter which PaymentMethod to delete.
     */
    where: PaymentMethodWhereUniqueInput
  }

  /**
   * PaymentMethod deleteMany
   */
  export type PaymentMethodDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentMethods to delete
     */
    where?: PaymentMethodWhereInput
    /**
     * Limit how many PaymentMethods to delete.
     */
    limit?: number
  }

  /**
   * PaymentMethod.payments
   */
  export type PaymentMethod$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * PaymentMethod without action
   */
  export type PaymentMethodDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentMethodInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    surname: 'surname',
    birth_date: 'birth_date',
    phone: 'phone',
    avatar: 'avatar',
    refresh_token: 'refresh_token',
    balance: 'balance',
    otp_id: 'otp_id',
    lang_id: 'lang_id',
<<<<<<< HEAD
    currency_id: 'currency_id'
=======
    preferredCurrencyId: 'preferredCurrencyId'
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const OTPScalarFieldEnum: {
    id: 'id',
    uuid: 'uuid',
    otp: 'otp',
    expire: 'expire'
  };

  export type OTPScalarFieldEnum = (typeof OTPScalarFieldEnum)[keyof typeof OTPScalarFieldEnum]


  export const PhoneScalarFieldEnum: {
    id: 'id',
    phone: 'phone',
    user_id: 'user_id'
  };

  export type PhoneScalarFieldEnum = (typeof PhoneScalarFieldEnum)[keyof typeof PhoneScalarFieldEnum]


  export const EmailScalarFieldEnum: {
    id: 'id',
    email: 'email',
    user_id: 'user_id'
  };

  export type EmailScalarFieldEnum = (typeof EmailScalarFieldEnum)[keyof typeof EmailScalarFieldEnum]


  export const AddressScalarFieldEnum: {
    id: 'id',
    name: 'name',
<<<<<<< HEAD
    address_value: 'address_value',
=======
    addressValue: 'addressValue',
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat: 'lat',
    long: 'long',
    user_id: 'user_id',
    is_active: 'is_active'
  };

  export type AddressScalarFieldEnum = (typeof AddressScalarFieldEnum)[keyof typeof AddressScalarFieldEnum]


  export const LanguageScalarFieldEnum: {
    id: 'id',
<<<<<<< HEAD
    name: 'name',
    flag_url: 'flag_url'
=======
    name: 'name'
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  };

  export type LanguageScalarFieldEnum = (typeof LanguageScalarFieldEnum)[keyof typeof LanguageScalarFieldEnum]


  export const FavouriteItemScalarFieldEnum: {
    id: 'id',
    product_id: 'product_id',
    user_id: 'user_id'
  };

  export type FavouriteItemScalarFieldEnum = (typeof FavouriteItemScalarFieldEnum)[keyof typeof FavouriteItemScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    title: 'title',
    description: 'description',
    year: 'year',
    brand_id: 'brand_id',
    model_id: 'model_id',
    custom_model: 'custom_model',
    color_id: 'color_id',
    price: 'price',
    floor_price: 'floor_price',
    currency_id: 'currency_id',
    is_new: 'is_new',
    has_document: 'has_document',
    address_id: 'address_id',
    phone_id: 'phone_id',
    storage: 'storage',
    ram: 'ram',
    views: 'views',
    is_archived: 'is_archived',
    is_sold: 'is_sold',
    is_checked: 'is_checked',
    admin_id: 'admin_id',
    is_top: 'is_top',
    top_expire_date: 'top_expire_date'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const ProductImageScalarFieldEnum: {
    id: 'id',
    url: 'url',
    product_id: 'product_id',
    is_main: 'is_main'
  };

  export type ProductImageScalarFieldEnum = (typeof ProductImageScalarFieldEnum)[keyof typeof ProductImageScalarFieldEnum]


  export const BrandScalarFieldEnum: {
    id: 'id',
    name: 'name',
    logo: 'logo'
  };

  export type BrandScalarFieldEnum = (typeof BrandScalarFieldEnum)[keyof typeof BrandScalarFieldEnum]


  export const ModelScalarFieldEnum: {
    id: 'id',
    name: 'name',
    brand_id: 'brand_id'
  };

  export type ModelScalarFieldEnum = (typeof ModelScalarFieldEnum)[keyof typeof ModelScalarFieldEnum]


  export const ColorScalarFieldEnum: {
    id: 'id',
<<<<<<< HEAD
    name: 'name',
    hex: 'hex'
=======
    name: 'name'
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  };

  export type ColorScalarFieldEnum = (typeof ColorScalarFieldEnum)[keyof typeof ColorScalarFieldEnum]


  export const CurrencyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    symbol: 'symbol'
  };

  export type CurrencyScalarFieldEnum = (typeof CurrencyScalarFieldEnum)[keyof typeof CurrencyScalarFieldEnum]


  export const AdminScalarFieldEnum: {
    id: 'id',
    name: 'name',
    surname: 'surname',
    birth_date: 'birth_date',
    phone: 'phone',
    password: 'password',
    avatar: 'avatar',
    refresh_token: 'refresh_token',
    lang_id: 'lang_id',
    is_creator: 'is_creator'
  };

  export type AdminScalarFieldEnum = (typeof AdminScalarFieldEnum)[keyof typeof AdminScalarFieldEnum]


  export const BlockScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    admin_id: 'admin_id',
    reason: 'reason',
<<<<<<< HEAD
    expire_date: 'expire_date'
=======
    expireDate: 'expireDate'
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  };

  export type BlockScalarFieldEnum = (typeof BlockScalarFieldEnum)[keyof typeof BlockScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    amount: 'amount',
    payment_method_id: 'payment_method_id'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const CommentScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    product_id: 'product_id',
    text: 'text'
  };

  export type CommentScalarFieldEnum = (typeof CommentScalarFieldEnum)[keyof typeof CommentScalarFieldEnum]


  export const PaymentMethodScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type PaymentMethodScalarFieldEnum = (typeof PaymentMethodScalarFieldEnum)[keyof typeof PaymentMethodScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


<<<<<<< HEAD
  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  /**
   * Field references
   */


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: BigIntFilter<"User"> | bigint | number
    name?: StringFilter<"User"> | string
    surname?: StringFilter<"User"> | string
<<<<<<< HEAD
    birth_date?: DateTimeNullableFilter<"User"> | Date | string | null
    phone?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    refresh_token?: StringNullableFilter<"User"> | string | null
    balance?: FloatFilter<"User"> | number
    otp_id?: BigIntNullableFilter<"User"> | bigint | number | null
    lang_id?: BigIntFilter<"User"> | bigint | number
    currency_id?: BigIntFilter<"User"> | bigint | number
    otp?: XOR<OTPNullableScalarRelationFilter, OTPWhereInput> | null
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    currency?: XOR<CurrencyScalarRelationFilter, CurrencyWhereInput>
    emails?: EmailListRelationFilter
    additional_phones?: PhoneListRelationFilter
    favourite_items?: FavouriteItemListRelationFilter
=======
    birth_date?: DateTimeFilter<"User"> | Date | string
    phone?: StringFilter<"User"> | string
    avatar?: StringFilter<"User"> | string
    refresh_token?: StringFilter<"User"> | string
    balance?: FloatFilter<"User"> | number
    otp_id?: BigIntFilter<"User"> | bigint | number
    lang_id?: BigIntFilter<"User"> | bigint | number
    preferredCurrencyId?: BigIntFilter<"User"> | bigint | number
    otp?: XOR<OTPScalarRelationFilter, OTPWhereInput>
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    preferredCurrency?: XOR<CurrencyScalarRelationFilter, CurrencyWhereInput>
    emails?: EmailListRelationFilter
    additionalPhones?: PhoneListRelationFilter
    favouriteItems?: FavouriteItemListRelationFilter
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressListRelationFilter
    products?: ProductListRelationFilter
    comments?: CommentListRelationFilter
    payments?: PaymentListRelationFilter
    blocks?: BlockListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    surname?: SortOrder
<<<<<<< HEAD
    birth_date?: SortOrderInput | SortOrder
    phone?: SortOrder
    avatar?: SortOrderInput | SortOrder
    refresh_token?: SortOrderInput | SortOrder
    balance?: SortOrder
    otp_id?: SortOrderInput | SortOrder
    lang_id?: SortOrder
    currency_id?: SortOrder
    otp?: OTPOrderByWithRelationInput
    language?: LanguageOrderByWithRelationInput
    currency?: CurrencyOrderByWithRelationInput
    emails?: EmailOrderByRelationAggregateInput
    additional_phones?: PhoneOrderByRelationAggregateInput
    favourite_items?: FavouriteItemOrderByRelationAggregateInput
=======
    birth_date?: SortOrder
    phone?: SortOrder
    avatar?: SortOrder
    refresh_token?: SortOrder
    balance?: SortOrder
    otp_id?: SortOrder
    lang_id?: SortOrder
    preferredCurrencyId?: SortOrder
    otp?: OTPOrderByWithRelationInput
    language?: LanguageOrderByWithRelationInput
    preferredCurrency?: CurrencyOrderByWithRelationInput
    emails?: EmailOrderByRelationAggregateInput
    additionalPhones?: PhoneOrderByRelationAggregateInput
    favouriteItems?: FavouriteItemOrderByRelationAggregateInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressOrderByRelationAggregateInput
    products?: ProductOrderByRelationAggregateInput
    comments?: CommentOrderByRelationAggregateInput
    payments?: PaymentOrderByRelationAggregateInput
    blocks?: BlockOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    surname?: StringFilter<"User"> | string
<<<<<<< HEAD
    birth_date?: DateTimeNullableFilter<"User"> | Date | string | null
    phone?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    refresh_token?: StringNullableFilter<"User"> | string | null
    balance?: FloatFilter<"User"> | number
    otp_id?: BigIntNullableFilter<"User"> | bigint | number | null
    lang_id?: BigIntFilter<"User"> | bigint | number
    currency_id?: BigIntFilter<"User"> | bigint | number
    otp?: XOR<OTPNullableScalarRelationFilter, OTPWhereInput> | null
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    currency?: XOR<CurrencyScalarRelationFilter, CurrencyWhereInput>
    emails?: EmailListRelationFilter
    additional_phones?: PhoneListRelationFilter
    favourite_items?: FavouriteItemListRelationFilter
=======
    birth_date?: DateTimeFilter<"User"> | Date | string
    phone?: StringFilter<"User"> | string
    avatar?: StringFilter<"User"> | string
    refresh_token?: StringFilter<"User"> | string
    balance?: FloatFilter<"User"> | number
    otp_id?: BigIntFilter<"User"> | bigint | number
    lang_id?: BigIntFilter<"User"> | bigint | number
    preferredCurrencyId?: BigIntFilter<"User"> | bigint | number
    otp?: XOR<OTPScalarRelationFilter, OTPWhereInput>
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    preferredCurrency?: XOR<CurrencyScalarRelationFilter, CurrencyWhereInput>
    emails?: EmailListRelationFilter
    additionalPhones?: PhoneListRelationFilter
    favouriteItems?: FavouriteItemListRelationFilter
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressListRelationFilter
    products?: ProductListRelationFilter
    comments?: CommentListRelationFilter
    payments?: PaymentListRelationFilter
    blocks?: BlockListRelationFilter
  }, "id">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    surname?: SortOrder
<<<<<<< HEAD
    birth_date?: SortOrderInput | SortOrder
    phone?: SortOrder
    avatar?: SortOrderInput | SortOrder
    refresh_token?: SortOrderInput | SortOrder
    balance?: SortOrder
    otp_id?: SortOrderInput | SortOrder
    lang_id?: SortOrder
    currency_id?: SortOrder
=======
    birth_date?: SortOrder
    phone?: SortOrder
    avatar?: SortOrder
    refresh_token?: SortOrder
    balance?: SortOrder
    otp_id?: SortOrder
    lang_id?: SortOrder
    preferredCurrencyId?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"User"> | bigint | number
    name?: StringWithAggregatesFilter<"User"> | string
    surname?: StringWithAggregatesFilter<"User"> | string
<<<<<<< HEAD
    birth_date?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    phone?: StringWithAggregatesFilter<"User"> | string
    avatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    refresh_token?: StringNullableWithAggregatesFilter<"User"> | string | null
    balance?: FloatWithAggregatesFilter<"User"> | number
    otp_id?: BigIntNullableWithAggregatesFilter<"User"> | bigint | number | null
    lang_id?: BigIntWithAggregatesFilter<"User"> | bigint | number
    currency_id?: BigIntWithAggregatesFilter<"User"> | bigint | number
=======
    birth_date?: DateTimeWithAggregatesFilter<"User"> | Date | string
    phone?: StringWithAggregatesFilter<"User"> | string
    avatar?: StringWithAggregatesFilter<"User"> | string
    refresh_token?: StringWithAggregatesFilter<"User"> | string
    balance?: FloatWithAggregatesFilter<"User"> | number
    otp_id?: BigIntWithAggregatesFilter<"User"> | bigint | number
    lang_id?: BigIntWithAggregatesFilter<"User"> | bigint | number
    preferredCurrencyId?: BigIntWithAggregatesFilter<"User"> | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type OTPWhereInput = {
    AND?: OTPWhereInput | OTPWhereInput[]
    OR?: OTPWhereInput[]
    NOT?: OTPWhereInput | OTPWhereInput[]
    id?: BigIntFilter<"OTP"> | bigint | number
    uuid?: StringFilter<"OTP"> | string
    otp?: IntFilter<"OTP"> | number
    expire?: DateTimeFilter<"OTP"> | Date | string
    users?: UserListRelationFilter
  }

  export type OTPOrderByWithRelationInput = {
    id?: SortOrder
    uuid?: SortOrder
    otp?: SortOrder
    expire?: SortOrder
    users?: UserOrderByRelationAggregateInput
  }

  export type OTPWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: OTPWhereInput | OTPWhereInput[]
    OR?: OTPWhereInput[]
    NOT?: OTPWhereInput | OTPWhereInput[]
    uuid?: StringFilter<"OTP"> | string
    otp?: IntFilter<"OTP"> | number
    expire?: DateTimeFilter<"OTP"> | Date | string
    users?: UserListRelationFilter
  }, "id">

  export type OTPOrderByWithAggregationInput = {
    id?: SortOrder
    uuid?: SortOrder
    otp?: SortOrder
    expire?: SortOrder
    _count?: OTPCountOrderByAggregateInput
    _avg?: OTPAvgOrderByAggregateInput
    _max?: OTPMaxOrderByAggregateInput
    _min?: OTPMinOrderByAggregateInput
    _sum?: OTPSumOrderByAggregateInput
  }

  export type OTPScalarWhereWithAggregatesInput = {
    AND?: OTPScalarWhereWithAggregatesInput | OTPScalarWhereWithAggregatesInput[]
    OR?: OTPScalarWhereWithAggregatesInput[]
    NOT?: OTPScalarWhereWithAggregatesInput | OTPScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"OTP"> | bigint | number
    uuid?: StringWithAggregatesFilter<"OTP"> | string
    otp?: IntWithAggregatesFilter<"OTP"> | number
    expire?: DateTimeWithAggregatesFilter<"OTP"> | Date | string
  }

  export type PhoneWhereInput = {
    AND?: PhoneWhereInput | PhoneWhereInput[]
    OR?: PhoneWhereInput[]
    NOT?: PhoneWhereInput | PhoneWhereInput[]
    id?: BigIntFilter<"Phone"> | bigint | number
    phone?: StringFilter<"Phone"> | string
    user_id?: BigIntFilter<"Phone"> | bigint | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    products?: ProductListRelationFilter
  }

  export type PhoneOrderByWithRelationInput = {
    id?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
    user?: UserOrderByWithRelationInput
    products?: ProductOrderByRelationAggregateInput
  }

  export type PhoneWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: PhoneWhereInput | PhoneWhereInput[]
    OR?: PhoneWhereInput[]
    NOT?: PhoneWhereInput | PhoneWhereInput[]
    phone?: StringFilter<"Phone"> | string
    user_id?: BigIntFilter<"Phone"> | bigint | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    products?: ProductListRelationFilter
  }, "id">

  export type PhoneOrderByWithAggregationInput = {
    id?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
    _count?: PhoneCountOrderByAggregateInput
    _avg?: PhoneAvgOrderByAggregateInput
    _max?: PhoneMaxOrderByAggregateInput
    _min?: PhoneMinOrderByAggregateInput
    _sum?: PhoneSumOrderByAggregateInput
  }

  export type PhoneScalarWhereWithAggregatesInput = {
    AND?: PhoneScalarWhereWithAggregatesInput | PhoneScalarWhereWithAggregatesInput[]
    OR?: PhoneScalarWhereWithAggregatesInput[]
    NOT?: PhoneScalarWhereWithAggregatesInput | PhoneScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Phone"> | bigint | number
    phone?: StringWithAggregatesFilter<"Phone"> | string
    user_id?: BigIntWithAggregatesFilter<"Phone"> | bigint | number
  }

  export type EmailWhereInput = {
    AND?: EmailWhereInput | EmailWhereInput[]
    OR?: EmailWhereInput[]
    NOT?: EmailWhereInput | EmailWhereInput[]
    id?: BigIntFilter<"Email"> | bigint | number
    email?: StringFilter<"Email"> | string
    user_id?: BigIntFilter<"Email"> | bigint | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type EmailOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    user_id?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type EmailWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    email?: string
    AND?: EmailWhereInput | EmailWhereInput[]
    OR?: EmailWhereInput[]
    NOT?: EmailWhereInput | EmailWhereInput[]
    user_id?: BigIntFilter<"Email"> | bigint | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "email">

  export type EmailOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    user_id?: SortOrder
    _count?: EmailCountOrderByAggregateInput
    _avg?: EmailAvgOrderByAggregateInput
    _max?: EmailMaxOrderByAggregateInput
    _min?: EmailMinOrderByAggregateInput
    _sum?: EmailSumOrderByAggregateInput
  }

  export type EmailScalarWhereWithAggregatesInput = {
    AND?: EmailScalarWhereWithAggregatesInput | EmailScalarWhereWithAggregatesInput[]
    OR?: EmailScalarWhereWithAggregatesInput[]
    NOT?: EmailScalarWhereWithAggregatesInput | EmailScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Email"> | bigint | number
    email?: StringWithAggregatesFilter<"Email"> | string
    user_id?: BigIntWithAggregatesFilter<"Email"> | bigint | number
  }

  export type AddressWhereInput = {
    AND?: AddressWhereInput | AddressWhereInput[]
    OR?: AddressWhereInput[]
    NOT?: AddressWhereInput | AddressWhereInput[]
    id?: BigIntFilter<"Address"> | bigint | number
    name?: StringFilter<"Address"> | string
<<<<<<< HEAD
    address_value?: BigIntFilter<"Address"> | bigint | number
=======
    addressValue?: BigIntFilter<"Address"> | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: StringFilter<"Address"> | string
    long?: StringFilter<"Address"> | string
    user_id?: BigIntFilter<"Address"> | bigint | number
    is_active?: BoolFilter<"Address"> | boolean
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    products?: ProductListRelationFilter
  }

  export type AddressOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    address_value?: SortOrder
=======
    addressValue?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: SortOrder
    long?: SortOrder
    user_id?: SortOrder
    is_active?: SortOrder
    user?: UserOrderByWithRelationInput
    products?: ProductOrderByRelationAggregateInput
  }

  export type AddressWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: AddressWhereInput | AddressWhereInput[]
    OR?: AddressWhereInput[]
    NOT?: AddressWhereInput | AddressWhereInput[]
    name?: StringFilter<"Address"> | string
<<<<<<< HEAD
    address_value?: BigIntFilter<"Address"> | bigint | number
=======
    addressValue?: BigIntFilter<"Address"> | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: StringFilter<"Address"> | string
    long?: StringFilter<"Address"> | string
    user_id?: BigIntFilter<"Address"> | bigint | number
    is_active?: BoolFilter<"Address"> | boolean
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    products?: ProductListRelationFilter
  }, "id">

  export type AddressOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    address_value?: SortOrder
=======
    addressValue?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: SortOrder
    long?: SortOrder
    user_id?: SortOrder
    is_active?: SortOrder
    _count?: AddressCountOrderByAggregateInput
    _avg?: AddressAvgOrderByAggregateInput
    _max?: AddressMaxOrderByAggregateInput
    _min?: AddressMinOrderByAggregateInput
    _sum?: AddressSumOrderByAggregateInput
  }

  export type AddressScalarWhereWithAggregatesInput = {
    AND?: AddressScalarWhereWithAggregatesInput | AddressScalarWhereWithAggregatesInput[]
    OR?: AddressScalarWhereWithAggregatesInput[]
    NOT?: AddressScalarWhereWithAggregatesInput | AddressScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Address"> | bigint | number
    name?: StringWithAggregatesFilter<"Address"> | string
<<<<<<< HEAD
    address_value?: BigIntWithAggregatesFilter<"Address"> | bigint | number
=======
    addressValue?: BigIntWithAggregatesFilter<"Address"> | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: StringWithAggregatesFilter<"Address"> | string
    long?: StringWithAggregatesFilter<"Address"> | string
    user_id?: BigIntWithAggregatesFilter<"Address"> | bigint | number
    is_active?: BoolWithAggregatesFilter<"Address"> | boolean
  }

  export type LanguageWhereInput = {
    AND?: LanguageWhereInput | LanguageWhereInput[]
    OR?: LanguageWhereInput[]
    NOT?: LanguageWhereInput | LanguageWhereInput[]
    id?: BigIntFilter<"Language"> | bigint | number
    name?: StringFilter<"Language"> | string
<<<<<<< HEAD
    flag_url?: StringFilter<"Language"> | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    users?: UserListRelationFilter
    admins?: AdminListRelationFilter
  }

  export type LanguageOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    flag_url?: SortOrder
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    users?: UserOrderByRelationAggregateInput
    admins?: AdminOrderByRelationAggregateInput
  }

  export type LanguageWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    name?: string
    AND?: LanguageWhereInput | LanguageWhereInput[]
    OR?: LanguageWhereInput[]
    NOT?: LanguageWhereInput | LanguageWhereInput[]
<<<<<<< HEAD
    flag_url?: StringFilter<"Language"> | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    users?: UserListRelationFilter
    admins?: AdminListRelationFilter
  }, "id" | "name">

  export type LanguageOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    flag_url?: SortOrder
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _count?: LanguageCountOrderByAggregateInput
    _avg?: LanguageAvgOrderByAggregateInput
    _max?: LanguageMaxOrderByAggregateInput
    _min?: LanguageMinOrderByAggregateInput
    _sum?: LanguageSumOrderByAggregateInput
  }

  export type LanguageScalarWhereWithAggregatesInput = {
    AND?: LanguageScalarWhereWithAggregatesInput | LanguageScalarWhereWithAggregatesInput[]
    OR?: LanguageScalarWhereWithAggregatesInput[]
    NOT?: LanguageScalarWhereWithAggregatesInput | LanguageScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Language"> | bigint | number
    name?: StringWithAggregatesFilter<"Language"> | string
<<<<<<< HEAD
    flag_url?: StringWithAggregatesFilter<"Language"> | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type FavouriteItemWhereInput = {
    AND?: FavouriteItemWhereInput | FavouriteItemWhereInput[]
    OR?: FavouriteItemWhereInput[]
    NOT?: FavouriteItemWhereInput | FavouriteItemWhereInput[]
    id?: BigIntFilter<"FavouriteItem"> | bigint | number
    product_id?: BigIntFilter<"FavouriteItem"> | bigint | number
    user_id?: BigIntFilter<"FavouriteItem"> | bigint | number
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type FavouriteItemOrderByWithRelationInput = {
    id?: SortOrder
    product_id?: SortOrder
    user_id?: SortOrder
    product?: ProductOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type FavouriteItemWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    user_id_product_id?: FavouriteItemUser_idProduct_idCompoundUniqueInput
    AND?: FavouriteItemWhereInput | FavouriteItemWhereInput[]
    OR?: FavouriteItemWhereInput[]
    NOT?: FavouriteItemWhereInput | FavouriteItemWhereInput[]
    product_id?: BigIntFilter<"FavouriteItem"> | bigint | number
    user_id?: BigIntFilter<"FavouriteItem"> | bigint | number
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "user_id_product_id">

  export type FavouriteItemOrderByWithAggregationInput = {
    id?: SortOrder
    product_id?: SortOrder
    user_id?: SortOrder
    _count?: FavouriteItemCountOrderByAggregateInput
    _avg?: FavouriteItemAvgOrderByAggregateInput
    _max?: FavouriteItemMaxOrderByAggregateInput
    _min?: FavouriteItemMinOrderByAggregateInput
    _sum?: FavouriteItemSumOrderByAggregateInput
  }

  export type FavouriteItemScalarWhereWithAggregatesInput = {
    AND?: FavouriteItemScalarWhereWithAggregatesInput | FavouriteItemScalarWhereWithAggregatesInput[]
    OR?: FavouriteItemScalarWhereWithAggregatesInput[]
    NOT?: FavouriteItemScalarWhereWithAggregatesInput | FavouriteItemScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"FavouriteItem"> | bigint | number
    product_id?: BigIntWithAggregatesFilter<"FavouriteItem"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"FavouriteItem"> | bigint | number
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: BigIntFilter<"Product"> | bigint | number
    user_id?: BigIntFilter<"Product"> | bigint | number
    title?: StringFilter<"Product"> | string
    description?: StringFilter<"Product"> | string
    year?: IntFilter<"Product"> | number
<<<<<<< HEAD
    brand_id?: BigIntNullableFilter<"Product"> | bigint | number | null
    model_id?: BigIntNullableFilter<"Product"> | bigint | number | null
    custom_model?: StringNullableFilter<"Product"> | string | null
=======
    brand_id?: BigIntFilter<"Product"> | bigint | number
    model_id?: BigIntFilter<"Product"> | bigint | number
    custom_model?: StringFilter<"Product"> | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFilter<"Product"> | bigint | number
    price?: FloatFilter<"Product"> | number
    floor_price?: BoolFilter<"Product"> | boolean
    currency_id?: BigIntFilter<"Product"> | bigint | number
    is_new?: BoolFilter<"Product"> | boolean
    has_document?: BoolFilter<"Product"> | boolean
    address_id?: BigIntFilter<"Product"> | bigint | number
    phone_id?: BigIntFilter<"Product"> | bigint | number
    storage?: BigIntFilter<"Product"> | bigint | number
    ram?: BigIntFilter<"Product"> | bigint | number
    views?: BigIntFilter<"Product"> | bigint | number
    is_archived?: BoolFilter<"Product"> | boolean
    is_sold?: BoolFilter<"Product"> | boolean
    is_checked?: BoolFilter<"Product"> | boolean
<<<<<<< HEAD
    admin_id?: BigIntNullableFilter<"Product"> | bigint | number | null
    is_top?: BoolFilter<"Product"> | boolean
    top_expire_date?: DateTimeNullableFilter<"Product"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    brand?: XOR<BrandNullableScalarRelationFilter, BrandWhereInput> | null
    model?: XOR<ModelNullableScalarRelationFilter, ModelWhereInput> | null
    color?: XOR<ColorScalarRelationFilter, ColorWhereInput>
    currency?: XOR<CurrencyScalarRelationFilter, CurrencyWhereInput>
    address?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    contact_phone?: XOR<PhoneScalarRelationFilter, PhoneWhereInput>
    admin?: XOR<AdminNullableScalarRelationFilter, AdminWhereInput> | null
    images?: ProductImageListRelationFilter
    favourited_by?: FavouriteItemListRelationFilter
=======
    admin_id?: BigIntFilter<"Product"> | bigint | number
    is_top?: BoolFilter<"Product"> | boolean
    top_expire_date?: DateTimeFilter<"Product"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    brand?: XOR<BrandScalarRelationFilter, BrandWhereInput>
    model?: XOR<ModelScalarRelationFilter, ModelWhereInput>
    color?: XOR<ColorScalarRelationFilter, ColorWhereInput>
    currency?: XOR<CurrencyScalarRelationFilter, CurrencyWhereInput>
    address?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    contactPhone?: XOR<PhoneScalarRelationFilter, PhoneWhereInput>
    admin?: XOR<AdminScalarRelationFilter, AdminWhereInput>
    images?: ProductImageListRelationFilter
    favouritedBy?: FavouriteItemListRelationFilter
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentListRelationFilter
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    year?: SortOrder
<<<<<<< HEAD
    brand_id?: SortOrderInput | SortOrder
    model_id?: SortOrderInput | SortOrder
    custom_model?: SortOrderInput | SortOrder
=======
    brand_id?: SortOrder
    model_id?: SortOrder
    custom_model?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: SortOrder
    price?: SortOrder
    floor_price?: SortOrder
    currency_id?: SortOrder
    is_new?: SortOrder
    has_document?: SortOrder
    address_id?: SortOrder
    phone_id?: SortOrder
    storage?: SortOrder
    ram?: SortOrder
    views?: SortOrder
    is_archived?: SortOrder
    is_sold?: SortOrder
    is_checked?: SortOrder
<<<<<<< HEAD
    admin_id?: SortOrderInput | SortOrder
    is_top?: SortOrder
    top_expire_date?: SortOrderInput | SortOrder
=======
    admin_id?: SortOrder
    is_top?: SortOrder
    top_expire_date?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user?: UserOrderByWithRelationInput
    brand?: BrandOrderByWithRelationInput
    model?: ModelOrderByWithRelationInput
    color?: ColorOrderByWithRelationInput
    currency?: CurrencyOrderByWithRelationInput
    address?: AddressOrderByWithRelationInput
<<<<<<< HEAD
    contact_phone?: PhoneOrderByWithRelationInput
    admin?: AdminOrderByWithRelationInput
    images?: ProductImageOrderByRelationAggregateInput
    favourited_by?: FavouriteItemOrderByRelationAggregateInput
=======
    contactPhone?: PhoneOrderByWithRelationInput
    admin?: AdminOrderByWithRelationInput
    images?: ProductImageOrderByRelationAggregateInput
    favouritedBy?: FavouriteItemOrderByRelationAggregateInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentOrderByRelationAggregateInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    user_id?: BigIntFilter<"Product"> | bigint | number
    title?: StringFilter<"Product"> | string
    description?: StringFilter<"Product"> | string
    year?: IntFilter<"Product"> | number
<<<<<<< HEAD
    brand_id?: BigIntNullableFilter<"Product"> | bigint | number | null
    model_id?: BigIntNullableFilter<"Product"> | bigint | number | null
    custom_model?: StringNullableFilter<"Product"> | string | null
=======
    brand_id?: BigIntFilter<"Product"> | bigint | number
    model_id?: BigIntFilter<"Product"> | bigint | number
    custom_model?: StringFilter<"Product"> | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFilter<"Product"> | bigint | number
    price?: FloatFilter<"Product"> | number
    floor_price?: BoolFilter<"Product"> | boolean
    currency_id?: BigIntFilter<"Product"> | bigint | number
    is_new?: BoolFilter<"Product"> | boolean
    has_document?: BoolFilter<"Product"> | boolean
    address_id?: BigIntFilter<"Product"> | bigint | number
    phone_id?: BigIntFilter<"Product"> | bigint | number
    storage?: BigIntFilter<"Product"> | bigint | number
    ram?: BigIntFilter<"Product"> | bigint | number
    views?: BigIntFilter<"Product"> | bigint | number
    is_archived?: BoolFilter<"Product"> | boolean
    is_sold?: BoolFilter<"Product"> | boolean
    is_checked?: BoolFilter<"Product"> | boolean
<<<<<<< HEAD
    admin_id?: BigIntNullableFilter<"Product"> | bigint | number | null
    is_top?: BoolFilter<"Product"> | boolean
    top_expire_date?: DateTimeNullableFilter<"Product"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    brand?: XOR<BrandNullableScalarRelationFilter, BrandWhereInput> | null
    model?: XOR<ModelNullableScalarRelationFilter, ModelWhereInput> | null
    color?: XOR<ColorScalarRelationFilter, ColorWhereInput>
    currency?: XOR<CurrencyScalarRelationFilter, CurrencyWhereInput>
    address?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    contact_phone?: XOR<PhoneScalarRelationFilter, PhoneWhereInput>
    admin?: XOR<AdminNullableScalarRelationFilter, AdminWhereInput> | null
    images?: ProductImageListRelationFilter
    favourited_by?: FavouriteItemListRelationFilter
=======
    admin_id?: BigIntFilter<"Product"> | bigint | number
    is_top?: BoolFilter<"Product"> | boolean
    top_expire_date?: DateTimeFilter<"Product"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    brand?: XOR<BrandScalarRelationFilter, BrandWhereInput>
    model?: XOR<ModelScalarRelationFilter, ModelWhereInput>
    color?: XOR<ColorScalarRelationFilter, ColorWhereInput>
    currency?: XOR<CurrencyScalarRelationFilter, CurrencyWhereInput>
    address?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    contactPhone?: XOR<PhoneScalarRelationFilter, PhoneWhereInput>
    admin?: XOR<AdminScalarRelationFilter, AdminWhereInput>
    images?: ProductImageListRelationFilter
    favouritedBy?: FavouriteItemListRelationFilter
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentListRelationFilter
  }, "id">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    year?: SortOrder
<<<<<<< HEAD
    brand_id?: SortOrderInput | SortOrder
    model_id?: SortOrderInput | SortOrder
    custom_model?: SortOrderInput | SortOrder
=======
    brand_id?: SortOrder
    model_id?: SortOrder
    custom_model?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: SortOrder
    price?: SortOrder
    floor_price?: SortOrder
    currency_id?: SortOrder
    is_new?: SortOrder
    has_document?: SortOrder
    address_id?: SortOrder
    phone_id?: SortOrder
    storage?: SortOrder
    ram?: SortOrder
    views?: SortOrder
    is_archived?: SortOrder
    is_sold?: SortOrder
    is_checked?: SortOrder
<<<<<<< HEAD
    admin_id?: SortOrderInput | SortOrder
    is_top?: SortOrder
    top_expire_date?: SortOrderInput | SortOrder
=======
    admin_id?: SortOrder
    is_top?: SortOrder
    top_expire_date?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Product"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"Product"> | bigint | number
    title?: StringWithAggregatesFilter<"Product"> | string
    description?: StringWithAggregatesFilter<"Product"> | string
    year?: IntWithAggregatesFilter<"Product"> | number
<<<<<<< HEAD
    brand_id?: BigIntNullableWithAggregatesFilter<"Product"> | bigint | number | null
    model_id?: BigIntNullableWithAggregatesFilter<"Product"> | bigint | number | null
    custom_model?: StringNullableWithAggregatesFilter<"Product"> | string | null
=======
    brand_id?: BigIntWithAggregatesFilter<"Product"> | bigint | number
    model_id?: BigIntWithAggregatesFilter<"Product"> | bigint | number
    custom_model?: StringWithAggregatesFilter<"Product"> | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntWithAggregatesFilter<"Product"> | bigint | number
    price?: FloatWithAggregatesFilter<"Product"> | number
    floor_price?: BoolWithAggregatesFilter<"Product"> | boolean
    currency_id?: BigIntWithAggregatesFilter<"Product"> | bigint | number
    is_new?: BoolWithAggregatesFilter<"Product"> | boolean
    has_document?: BoolWithAggregatesFilter<"Product"> | boolean
    address_id?: BigIntWithAggregatesFilter<"Product"> | bigint | number
    phone_id?: BigIntWithAggregatesFilter<"Product"> | bigint | number
    storage?: BigIntWithAggregatesFilter<"Product"> | bigint | number
    ram?: BigIntWithAggregatesFilter<"Product"> | bigint | number
    views?: BigIntWithAggregatesFilter<"Product"> | bigint | number
    is_archived?: BoolWithAggregatesFilter<"Product"> | boolean
    is_sold?: BoolWithAggregatesFilter<"Product"> | boolean
    is_checked?: BoolWithAggregatesFilter<"Product"> | boolean
<<<<<<< HEAD
    admin_id?: BigIntNullableWithAggregatesFilter<"Product"> | bigint | number | null
    is_top?: BoolWithAggregatesFilter<"Product"> | boolean
    top_expire_date?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
=======
    admin_id?: BigIntWithAggregatesFilter<"Product"> | bigint | number
    is_top?: BoolWithAggregatesFilter<"Product"> | boolean
    top_expire_date?: DateTimeWithAggregatesFilter<"Product"> | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductImageWhereInput = {
    AND?: ProductImageWhereInput | ProductImageWhereInput[]
    OR?: ProductImageWhereInput[]
    NOT?: ProductImageWhereInput | ProductImageWhereInput[]
    id?: BigIntFilter<"ProductImage"> | bigint | number
    url?: StringFilter<"ProductImage"> | string
    product_id?: BigIntFilter<"ProductImage"> | bigint | number
    is_main?: BoolFilter<"ProductImage"> | boolean
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type ProductImageOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    product_id?: SortOrder
    is_main?: SortOrder
    product?: ProductOrderByWithRelationInput
  }

  export type ProductImageWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: ProductImageWhereInput | ProductImageWhereInput[]
    OR?: ProductImageWhereInput[]
    NOT?: ProductImageWhereInput | ProductImageWhereInput[]
    url?: StringFilter<"ProductImage"> | string
    product_id?: BigIntFilter<"ProductImage"> | bigint | number
    is_main?: BoolFilter<"ProductImage"> | boolean
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id">

  export type ProductImageOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    product_id?: SortOrder
    is_main?: SortOrder
    _count?: ProductImageCountOrderByAggregateInput
    _avg?: ProductImageAvgOrderByAggregateInput
    _max?: ProductImageMaxOrderByAggregateInput
    _min?: ProductImageMinOrderByAggregateInput
    _sum?: ProductImageSumOrderByAggregateInput
  }

  export type ProductImageScalarWhereWithAggregatesInput = {
    AND?: ProductImageScalarWhereWithAggregatesInput | ProductImageScalarWhereWithAggregatesInput[]
    OR?: ProductImageScalarWhereWithAggregatesInput[]
    NOT?: ProductImageScalarWhereWithAggregatesInput | ProductImageScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"ProductImage"> | bigint | number
    url?: StringWithAggregatesFilter<"ProductImage"> | string
    product_id?: BigIntWithAggregatesFilter<"ProductImage"> | bigint | number
    is_main?: BoolWithAggregatesFilter<"ProductImage"> | boolean
  }

  export type BrandWhereInput = {
    AND?: BrandWhereInput | BrandWhereInput[]
    OR?: BrandWhereInput[]
    NOT?: BrandWhereInput | BrandWhereInput[]
    id?: BigIntFilter<"Brand"> | bigint | number
    name?: StringFilter<"Brand"> | string
    logo?: StringFilter<"Brand"> | string
    models?: ModelListRelationFilter
    products?: ProductListRelationFilter
  }

  export type BrandOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrder
    models?: ModelOrderByRelationAggregateInput
    products?: ProductOrderByRelationAggregateInput
  }

  export type BrandWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    name?: string
    AND?: BrandWhereInput | BrandWhereInput[]
    OR?: BrandWhereInput[]
    NOT?: BrandWhereInput | BrandWhereInput[]
    logo?: StringFilter<"Brand"> | string
    models?: ModelListRelationFilter
    products?: ProductListRelationFilter
  }, "id" | "name">

  export type BrandOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrder
    _count?: BrandCountOrderByAggregateInput
    _avg?: BrandAvgOrderByAggregateInput
    _max?: BrandMaxOrderByAggregateInput
    _min?: BrandMinOrderByAggregateInput
    _sum?: BrandSumOrderByAggregateInput
  }

  export type BrandScalarWhereWithAggregatesInput = {
    AND?: BrandScalarWhereWithAggregatesInput | BrandScalarWhereWithAggregatesInput[]
    OR?: BrandScalarWhereWithAggregatesInput[]
    NOT?: BrandScalarWhereWithAggregatesInput | BrandScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Brand"> | bigint | number
    name?: StringWithAggregatesFilter<"Brand"> | string
    logo?: StringWithAggregatesFilter<"Brand"> | string
  }

  export type ModelWhereInput = {
    AND?: ModelWhereInput | ModelWhereInput[]
    OR?: ModelWhereInput[]
    NOT?: ModelWhereInput | ModelWhereInput[]
    id?: BigIntFilter<"Model"> | bigint | number
    name?: StringFilter<"Model"> | string
    brand_id?: BigIntFilter<"Model"> | bigint | number
    brand?: XOR<BrandScalarRelationFilter, BrandWhereInput>
    products?: ProductListRelationFilter
  }

  export type ModelOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    brand_id?: SortOrder
    brand?: BrandOrderByWithRelationInput
    products?: ProductOrderByRelationAggregateInput
  }

  export type ModelWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    brand_id_name?: ModelBrand_idNameCompoundUniqueInput
    AND?: ModelWhereInput | ModelWhereInput[]
    OR?: ModelWhereInput[]
    NOT?: ModelWhereInput | ModelWhereInput[]
    name?: StringFilter<"Model"> | string
    brand_id?: BigIntFilter<"Model"> | bigint | number
    brand?: XOR<BrandScalarRelationFilter, BrandWhereInput>
    products?: ProductListRelationFilter
  }, "id" | "brand_id_name">

  export type ModelOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    brand_id?: SortOrder
    _count?: ModelCountOrderByAggregateInput
    _avg?: ModelAvgOrderByAggregateInput
    _max?: ModelMaxOrderByAggregateInput
    _min?: ModelMinOrderByAggregateInput
    _sum?: ModelSumOrderByAggregateInput
  }

  export type ModelScalarWhereWithAggregatesInput = {
    AND?: ModelScalarWhereWithAggregatesInput | ModelScalarWhereWithAggregatesInput[]
    OR?: ModelScalarWhereWithAggregatesInput[]
    NOT?: ModelScalarWhereWithAggregatesInput | ModelScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Model"> | bigint | number
    name?: StringWithAggregatesFilter<"Model"> | string
    brand_id?: BigIntWithAggregatesFilter<"Model"> | bigint | number
  }

  export type ColorWhereInput = {
    AND?: ColorWhereInput | ColorWhereInput[]
    OR?: ColorWhereInput[]
    NOT?: ColorWhereInput | ColorWhereInput[]
    id?: BigIntFilter<"Color"> | bigint | number
    name?: StringFilter<"Color"> | string
<<<<<<< HEAD
    hex?: StringFilter<"Color"> | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductListRelationFilter
  }

  export type ColorOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    hex?: SortOrder
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductOrderByRelationAggregateInput
  }

  export type ColorWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    name?: string
    AND?: ColorWhereInput | ColorWhereInput[]
    OR?: ColorWhereInput[]
    NOT?: ColorWhereInput | ColorWhereInput[]
<<<<<<< HEAD
    hex?: StringFilter<"Color"> | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductListRelationFilter
  }, "id" | "name">

  export type ColorOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    hex?: SortOrder
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _count?: ColorCountOrderByAggregateInput
    _avg?: ColorAvgOrderByAggregateInput
    _max?: ColorMaxOrderByAggregateInput
    _min?: ColorMinOrderByAggregateInput
    _sum?: ColorSumOrderByAggregateInput
  }

  export type ColorScalarWhereWithAggregatesInput = {
    AND?: ColorScalarWhereWithAggregatesInput | ColorScalarWhereWithAggregatesInput[]
    OR?: ColorScalarWhereWithAggregatesInput[]
    NOT?: ColorScalarWhereWithAggregatesInput | ColorScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Color"> | bigint | number
    name?: StringWithAggregatesFilter<"Color"> | string
<<<<<<< HEAD
    hex?: StringWithAggregatesFilter<"Color"> | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type CurrencyWhereInput = {
    AND?: CurrencyWhereInput | CurrencyWhereInput[]
    OR?: CurrencyWhereInput[]
    NOT?: CurrencyWhereInput | CurrencyWhereInput[]
    id?: BigIntFilter<"Currency"> | bigint | number
    name?: StringFilter<"Currency"> | string
    symbol?: StringFilter<"Currency"> | string
<<<<<<< HEAD
    user_preferences?: UserListRelationFilter
=======
    userPreferences?: UserListRelationFilter
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductListRelationFilter
  }

  export type CurrencyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    symbol?: SortOrder
<<<<<<< HEAD
    user_preferences?: UserOrderByRelationAggregateInput
=======
    userPreferences?: UserOrderByRelationAggregateInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductOrderByRelationAggregateInput
  }

  export type CurrencyWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    name?: string
    AND?: CurrencyWhereInput | CurrencyWhereInput[]
    OR?: CurrencyWhereInput[]
    NOT?: CurrencyWhereInput | CurrencyWhereInput[]
    symbol?: StringFilter<"Currency"> | string
<<<<<<< HEAD
    user_preferences?: UserListRelationFilter
=======
    userPreferences?: UserListRelationFilter
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductListRelationFilter
  }, "id" | "name">

  export type CurrencyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    symbol?: SortOrder
    _count?: CurrencyCountOrderByAggregateInput
    _avg?: CurrencyAvgOrderByAggregateInput
    _max?: CurrencyMaxOrderByAggregateInput
    _min?: CurrencyMinOrderByAggregateInput
    _sum?: CurrencySumOrderByAggregateInput
  }

  export type CurrencyScalarWhereWithAggregatesInput = {
    AND?: CurrencyScalarWhereWithAggregatesInput | CurrencyScalarWhereWithAggregatesInput[]
    OR?: CurrencyScalarWhereWithAggregatesInput[]
    NOT?: CurrencyScalarWhereWithAggregatesInput | CurrencyScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Currency"> | bigint | number
    name?: StringWithAggregatesFilter<"Currency"> | string
    symbol?: StringWithAggregatesFilter<"Currency"> | string
  }

  export type AdminWhereInput = {
    AND?: AdminWhereInput | AdminWhereInput[]
    OR?: AdminWhereInput[]
    NOT?: AdminWhereInput | AdminWhereInput[]
    id?: BigIntFilter<"Admin"> | bigint | number
    name?: StringFilter<"Admin"> | string
    surname?: StringFilter<"Admin"> | string
    birth_date?: DateTimeFilter<"Admin"> | Date | string
    phone?: StringFilter<"Admin"> | string
    password?: StringFilter<"Admin"> | string
<<<<<<< HEAD
    avatar?: StringNullableFilter<"Admin"> | string | null
    refresh_token?: StringNullableFilter<"Admin"> | string | null
    lang_id?: BigIntFilter<"Admin"> | bigint | number
    is_creator?: BoolFilter<"Admin"> | boolean
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    blocks_issued?: BlockListRelationFilter
    products_managed?: ProductListRelationFilter
=======
    avatar?: StringFilter<"Admin"> | string
    refresh_token?: StringFilter<"Admin"> | string
    lang_id?: BigIntFilter<"Admin"> | bigint | number
    is_creator?: BoolFilter<"Admin"> | boolean
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    blocksIssued?: BlockListRelationFilter
    productsManaged?: ProductListRelationFilter
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type AdminOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    surname?: SortOrder
    birth_date?: SortOrder
    phone?: SortOrder
    password?: SortOrder
<<<<<<< HEAD
    avatar?: SortOrderInput | SortOrder
    refresh_token?: SortOrderInput | SortOrder
    lang_id?: SortOrder
    is_creator?: SortOrder
    language?: LanguageOrderByWithRelationInput
    blocks_issued?: BlockOrderByRelationAggregateInput
    products_managed?: ProductOrderByRelationAggregateInput
=======
    avatar?: SortOrder
    refresh_token?: SortOrder
    lang_id?: SortOrder
    is_creator?: SortOrder
    language?: LanguageOrderByWithRelationInput
    blocksIssued?: BlockOrderByRelationAggregateInput
    productsManaged?: ProductOrderByRelationAggregateInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type AdminWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    phone?: string
    AND?: AdminWhereInput | AdminWhereInput[]
    OR?: AdminWhereInput[]
    NOT?: AdminWhereInput | AdminWhereInput[]
    name?: StringFilter<"Admin"> | string
    surname?: StringFilter<"Admin"> | string
    birth_date?: DateTimeFilter<"Admin"> | Date | string
    password?: StringFilter<"Admin"> | string
<<<<<<< HEAD
    avatar?: StringNullableFilter<"Admin"> | string | null
    refresh_token?: StringNullableFilter<"Admin"> | string | null
    lang_id?: BigIntFilter<"Admin"> | bigint | number
    is_creator?: BoolFilter<"Admin"> | boolean
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    blocks_issued?: BlockListRelationFilter
    products_managed?: ProductListRelationFilter
=======
    avatar?: StringFilter<"Admin"> | string
    refresh_token?: StringFilter<"Admin"> | string
    lang_id?: BigIntFilter<"Admin"> | bigint | number
    is_creator?: BoolFilter<"Admin"> | boolean
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    blocksIssued?: BlockListRelationFilter
    productsManaged?: ProductListRelationFilter
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }, "id" | "phone">

  export type AdminOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    surname?: SortOrder
    birth_date?: SortOrder
    phone?: SortOrder
    password?: SortOrder
<<<<<<< HEAD
    avatar?: SortOrderInput | SortOrder
    refresh_token?: SortOrderInput | SortOrder
=======
    avatar?: SortOrder
    refresh_token?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lang_id?: SortOrder
    is_creator?: SortOrder
    _count?: AdminCountOrderByAggregateInput
    _avg?: AdminAvgOrderByAggregateInput
    _max?: AdminMaxOrderByAggregateInput
    _min?: AdminMinOrderByAggregateInput
    _sum?: AdminSumOrderByAggregateInput
  }

  export type AdminScalarWhereWithAggregatesInput = {
    AND?: AdminScalarWhereWithAggregatesInput | AdminScalarWhereWithAggregatesInput[]
    OR?: AdminScalarWhereWithAggregatesInput[]
    NOT?: AdminScalarWhereWithAggregatesInput | AdminScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Admin"> | bigint | number
    name?: StringWithAggregatesFilter<"Admin"> | string
    surname?: StringWithAggregatesFilter<"Admin"> | string
    birth_date?: DateTimeWithAggregatesFilter<"Admin"> | Date | string
    phone?: StringWithAggregatesFilter<"Admin"> | string
    password?: StringWithAggregatesFilter<"Admin"> | string
<<<<<<< HEAD
    avatar?: StringNullableWithAggregatesFilter<"Admin"> | string | null
    refresh_token?: StringNullableWithAggregatesFilter<"Admin"> | string | null
=======
    avatar?: StringWithAggregatesFilter<"Admin"> | string
    refresh_token?: StringWithAggregatesFilter<"Admin"> | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lang_id?: BigIntWithAggregatesFilter<"Admin"> | bigint | number
    is_creator?: BoolWithAggregatesFilter<"Admin"> | boolean
  }

  export type BlockWhereInput = {
    AND?: BlockWhereInput | BlockWhereInput[]
    OR?: BlockWhereInput[]
    NOT?: BlockWhereInput | BlockWhereInput[]
    id?: BigIntFilter<"Block"> | bigint | number
    user_id?: BigIntFilter<"Block"> | bigint | number
    admin_id?: BigIntFilter<"Block"> | bigint | number
    reason?: StringFilter<"Block"> | string
<<<<<<< HEAD
    expire_date?: DateTimeFilter<"Block"> | Date | string
=======
    expireDate?: DateTimeFilter<"Block"> | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    admin?: XOR<AdminScalarRelationFilter, AdminWhereInput>
  }

  export type BlockOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    admin_id?: SortOrder
    reason?: SortOrder
<<<<<<< HEAD
    expire_date?: SortOrder
=======
    expireDate?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user?: UserOrderByWithRelationInput
    admin?: AdminOrderByWithRelationInput
  }

  export type BlockWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: BlockWhereInput | BlockWhereInput[]
    OR?: BlockWhereInput[]
    NOT?: BlockWhereInput | BlockWhereInput[]
    user_id?: BigIntFilter<"Block"> | bigint | number
    admin_id?: BigIntFilter<"Block"> | bigint | number
    reason?: StringFilter<"Block"> | string
<<<<<<< HEAD
    expire_date?: DateTimeFilter<"Block"> | Date | string
=======
    expireDate?: DateTimeFilter<"Block"> | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    admin?: XOR<AdminScalarRelationFilter, AdminWhereInput>
  }, "id">

  export type BlockOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    admin_id?: SortOrder
    reason?: SortOrder
<<<<<<< HEAD
    expire_date?: SortOrder
=======
    expireDate?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    _count?: BlockCountOrderByAggregateInput
    _avg?: BlockAvgOrderByAggregateInput
    _max?: BlockMaxOrderByAggregateInput
    _min?: BlockMinOrderByAggregateInput
    _sum?: BlockSumOrderByAggregateInput
  }

  export type BlockScalarWhereWithAggregatesInput = {
    AND?: BlockScalarWhereWithAggregatesInput | BlockScalarWhereWithAggregatesInput[]
    OR?: BlockScalarWhereWithAggregatesInput[]
    NOT?: BlockScalarWhereWithAggregatesInput | BlockScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Block"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"Block"> | bigint | number
    admin_id?: BigIntWithAggregatesFilter<"Block"> | bigint | number
    reason?: StringWithAggregatesFilter<"Block"> | string
<<<<<<< HEAD
    expire_date?: DateTimeWithAggregatesFilter<"Block"> | Date | string
=======
    expireDate?: DateTimeWithAggregatesFilter<"Block"> | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    id?: BigIntFilter<"Payment"> | bigint | number
    user_id?: BigIntFilter<"Payment"> | bigint | number
    amount?: FloatFilter<"Payment"> | number
    payment_method_id?: BigIntFilter<"Payment"> | bigint | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
<<<<<<< HEAD
    payment_method?: XOR<PaymentMethodScalarRelationFilter, PaymentMethodWhereInput>
=======
    paymentMethod?: XOR<PaymentMethodScalarRelationFilter, PaymentMethodWhereInput>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PaymentOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    payment_method_id?: SortOrder
    user?: UserOrderByWithRelationInput
<<<<<<< HEAD
    payment_method?: PaymentMethodOrderByWithRelationInput
=======
    paymentMethod?: PaymentMethodOrderByWithRelationInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    user_id?: BigIntFilter<"Payment"> | bigint | number
    amount?: FloatFilter<"Payment"> | number
    payment_method_id?: BigIntFilter<"Payment"> | bigint | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
<<<<<<< HEAD
    payment_method?: XOR<PaymentMethodScalarRelationFilter, PaymentMethodWhereInput>
=======
    paymentMethod?: XOR<PaymentMethodScalarRelationFilter, PaymentMethodWhereInput>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }, "id">

  export type PaymentOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    payment_method_id?: SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Payment"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"Payment"> | bigint | number
    amount?: FloatWithAggregatesFilter<"Payment"> | number
    payment_method_id?: BigIntWithAggregatesFilter<"Payment"> | bigint | number
  }

  export type CommentWhereInput = {
    AND?: CommentWhereInput | CommentWhereInput[]
    OR?: CommentWhereInput[]
    NOT?: CommentWhereInput | CommentWhereInput[]
    id?: BigIntFilter<"Comment"> | bigint | number
    user_id?: BigIntFilter<"Comment"> | bigint | number
    product_id?: BigIntFilter<"Comment"> | bigint | number
    text?: StringFilter<"Comment"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type CommentOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    text?: SortOrder
    user?: UserOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
  }

  export type CommentWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: CommentWhereInput | CommentWhereInput[]
    OR?: CommentWhereInput[]
    NOT?: CommentWhereInput | CommentWhereInput[]
    user_id?: BigIntFilter<"Comment"> | bigint | number
    product_id?: BigIntFilter<"Comment"> | bigint | number
    text?: StringFilter<"Comment"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id">

  export type CommentOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    text?: SortOrder
    _count?: CommentCountOrderByAggregateInput
    _avg?: CommentAvgOrderByAggregateInput
    _max?: CommentMaxOrderByAggregateInput
    _min?: CommentMinOrderByAggregateInput
    _sum?: CommentSumOrderByAggregateInput
  }

  export type CommentScalarWhereWithAggregatesInput = {
    AND?: CommentScalarWhereWithAggregatesInput | CommentScalarWhereWithAggregatesInput[]
    OR?: CommentScalarWhereWithAggregatesInput[]
    NOT?: CommentScalarWhereWithAggregatesInput | CommentScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Comment"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"Comment"> | bigint | number
    product_id?: BigIntWithAggregatesFilter<"Comment"> | bigint | number
    text?: StringWithAggregatesFilter<"Comment"> | string
  }

  export type PaymentMethodWhereInput = {
    AND?: PaymentMethodWhereInput | PaymentMethodWhereInput[]
    OR?: PaymentMethodWhereInput[]
    NOT?: PaymentMethodWhereInput | PaymentMethodWhereInput[]
    id?: BigIntFilter<"PaymentMethod"> | bigint | number
    name?: StringFilter<"PaymentMethod"> | string
    payments?: PaymentListRelationFilter
  }

  export type PaymentMethodOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    payments?: PaymentOrderByRelationAggregateInput
  }

  export type PaymentMethodWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    name?: string
    AND?: PaymentMethodWhereInput | PaymentMethodWhereInput[]
    OR?: PaymentMethodWhereInput[]
    NOT?: PaymentMethodWhereInput | PaymentMethodWhereInput[]
    payments?: PaymentListRelationFilter
  }, "id" | "name">

  export type PaymentMethodOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: PaymentMethodCountOrderByAggregateInput
    _avg?: PaymentMethodAvgOrderByAggregateInput
    _max?: PaymentMethodMaxOrderByAggregateInput
    _min?: PaymentMethodMinOrderByAggregateInput
    _sum?: PaymentMethodSumOrderByAggregateInput
  }

  export type PaymentMethodScalarWhereWithAggregatesInput = {
    AND?: PaymentMethodScalarWhereWithAggregatesInput | PaymentMethodScalarWhereWithAggregatesInput[]
    OR?: PaymentMethodScalarWhereWithAggregatesInput[]
    NOT?: PaymentMethodScalarWhereWithAggregatesInput | PaymentMethodScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"PaymentMethod"> | bigint | number
    name?: StringWithAggregatesFilter<"PaymentMethod"> | string
  }

  export type UserCreateInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp?: OTPCreateNestedOneWithoutUsersInput
    language?: LanguageCreateNestedOneWithoutUsersInput
    currency: CurrencyCreateNestedOneWithoutUser_preferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additional_phones?: PhoneCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp: OTPCreateNestedOneWithoutUsersInput
    language: LanguageCreateNestedOneWithoutUsersInput
    preferredCurrency: CurrencyCreateNestedOneWithoutUserPreferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutUserInput
    comments?: CommentCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    blocks?: BlockCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    lang_id?: bigint | number
    currency_id: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additional_phones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    lang_id: bigint | number
    preferredCurrencyId: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutUserInput
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    blocks?: BlockUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutUser_preferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneRequiredWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    preferredCurrency?: CurrencyUpdateOneRequiredWithoutUserPreferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutUserNestedInput
    comments?: CommentUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    blocks?: BlockUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutUserNestedInput
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    blocks?: BlockUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    lang_id?: bigint | number
    currency_id: bigint | number
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    lang_id: bigint | number
    preferredCurrencyId: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    balance?: FloatFieldUpdateOperationsInput | number
  }

  export type UserUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type OTPCreateInput = {
    id?: bigint | number
    uuid: string
    otp: number
    expire: Date | string
    users?: UserCreateNestedManyWithoutOtpInput
  }

  export type OTPUncheckedCreateInput = {
    id?: bigint | number
    uuid: string
    otp: number
    expire: Date | string
    users?: UserUncheckedCreateNestedManyWithoutOtpInput
  }

  export type OTPUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    otp?: IntFieldUpdateOperationsInput | number
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutOtpNestedInput
  }

  export type OTPUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    otp?: IntFieldUpdateOperationsInput | number
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutOtpNestedInput
  }

  export type OTPCreateManyInput = {
    id?: bigint | number
    uuid: string
    otp: number
    expire: Date | string
  }

  export type OTPUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    otp?: IntFieldUpdateOperationsInput | number
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OTPUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    otp?: IntFieldUpdateOperationsInput | number
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PhoneCreateInput = {
    id?: bigint | number
    phone: string
<<<<<<< HEAD
    user: UserCreateNestedOneWithoutAdditional_phonesInput
    products?: ProductCreateNestedManyWithoutContact_phoneInput
=======
    user: UserCreateNestedOneWithoutAdditionalPhonesInput
    products?: ProductCreateNestedManyWithoutContactPhoneInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PhoneUncheckedCreateInput = {
    id?: bigint | number
    phone: string
    user_id: bigint | number
<<<<<<< HEAD
    products?: ProductUncheckedCreateNestedManyWithoutContact_phoneInput
=======
    products?: ProductUncheckedCreateNestedManyWithoutContactPhoneInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PhoneUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    user?: UserUpdateOneRequiredWithoutAdditional_phonesNestedInput
    products?: ProductUpdateManyWithoutContact_phoneNestedInput
=======
    user?: UserUpdateOneRequiredWithoutAdditionalPhonesNestedInput
    products?: ProductUpdateManyWithoutContactPhoneNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PhoneUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
<<<<<<< HEAD
    products?: ProductUncheckedUpdateManyWithoutContact_phoneNestedInput
=======
    products?: ProductUncheckedUpdateManyWithoutContactPhoneNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PhoneCreateManyInput = {
    id?: bigint | number
    phone: string
    user_id: bigint | number
  }

  export type PhoneUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone?: StringFieldUpdateOperationsInput | string
  }

  export type PhoneUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type EmailCreateInput = {
    id?: bigint | number
    email: string
    user: UserCreateNestedOneWithoutEmailsInput
  }

  export type EmailUncheckedCreateInput = {
    id?: bigint | number
    email: string
    user_id: bigint | number
  }

  export type EmailUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    email?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutEmailsNestedInput
  }

  export type EmailUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    email?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type EmailCreateManyInput = {
    id?: bigint | number
    email: string
    user_id: bigint | number
  }

  export type EmailUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    email?: StringFieldUpdateOperationsInput | string
  }

  export type EmailUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    email?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type AddressCreateInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    address_value: bigint | number
=======
    addressValue: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat: string
    long: string
    is_active: boolean
    user: UserCreateNestedOneWithoutAddressesInput
    products?: ProductCreateNestedManyWithoutAddressInput
  }

  export type AddressUncheckedCreateInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    address_value: bigint | number
=======
    addressValue: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat: string
    long: string
    user_id: bigint | number
    is_active: boolean
    products?: ProductUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    address_value?: BigIntFieldUpdateOperationsInput | bigint | number
=======
    addressValue?: BigIntFieldUpdateOperationsInput | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: StringFieldUpdateOperationsInput | string
    long?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutAddressesNestedInput
    products?: ProductUpdateManyWithoutAddressNestedInput
  }

  export type AddressUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    address_value?: BigIntFieldUpdateOperationsInput | bigint | number
=======
    addressValue?: BigIntFieldUpdateOperationsInput | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: StringFieldUpdateOperationsInput | string
    long?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    products?: ProductUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type AddressCreateManyInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    address_value: bigint | number
=======
    addressValue: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat: string
    long: string
    user_id: bigint | number
    is_active: boolean
  }

  export type AddressUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    address_value?: BigIntFieldUpdateOperationsInput | bigint | number
=======
    addressValue?: BigIntFieldUpdateOperationsInput | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: StringFieldUpdateOperationsInput | string
    long?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AddressUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    address_value?: BigIntFieldUpdateOperationsInput | bigint | number
=======
    addressValue?: BigIntFieldUpdateOperationsInput | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: StringFieldUpdateOperationsInput | string
    long?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type LanguageCreateInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    flag_url: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    users?: UserCreateNestedManyWithoutLanguageInput
    admins?: AdminCreateNestedManyWithoutLanguageInput
  }

  export type LanguageUncheckedCreateInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    flag_url: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    users?: UserUncheckedCreateNestedManyWithoutLanguageInput
    admins?: AdminUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    flag_url?: StringFieldUpdateOperationsInput | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    users?: UserUpdateManyWithoutLanguageNestedInput
    admins?: AdminUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    flag_url?: StringFieldUpdateOperationsInput | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    users?: UserUncheckedUpdateManyWithoutLanguageNestedInput
    admins?: AdminUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageCreateManyInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    flag_url: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type LanguageUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    flag_url?: StringFieldUpdateOperationsInput | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type LanguageUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    flag_url?: StringFieldUpdateOperationsInput | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type FavouriteItemCreateInput = {
    id?: bigint | number
<<<<<<< HEAD
    product: ProductCreateNestedOneWithoutFavourited_byInput
    user: UserCreateNestedOneWithoutFavourite_itemsInput
=======
    product: ProductCreateNestedOneWithoutFavouritedByInput
    user: UserCreateNestedOneWithoutFavouriteItemsInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type FavouriteItemUncheckedCreateInput = {
    id?: bigint | number
    product_id: bigint | number
    user_id: bigint | number
  }

  export type FavouriteItemUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
<<<<<<< HEAD
    product?: ProductUpdateOneRequiredWithoutFavourited_byNestedInput
    user?: UserUpdateOneRequiredWithoutFavourite_itemsNestedInput
=======
    product?: ProductUpdateOneRequiredWithoutFavouritedByNestedInput
    user?: UserUpdateOneRequiredWithoutFavouriteItemsNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type FavouriteItemUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type FavouriteItemCreateManyInput = {
    id?: bigint | number
    product_id: bigint | number
    user_id: bigint | number
  }

  export type FavouriteItemUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type FavouriteItemUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type ProductCreateInput = {
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    custom_model?: string | null
    price: number
    floor_price?: boolean
=======
    custom_model: string
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
    user: UserCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    model?: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency?: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contact_phone: PhoneCreateNestedOneWithoutProductsInput
    admin?: AdminCreateNestedOneWithoutProducts_managedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemCreateNestedManyWithoutProductInput
=======
    top_expire_date: Date | string
    user: UserCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    model: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contactPhone: PhoneCreateNestedOneWithoutProductsInput
    admin: AdminCreateNestedOneWithoutProductsManagedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    model?: ModelUpdateOneWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contact_phone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneWithoutProducts_managedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUpdateManyWithoutProductNestedInput
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    model?: ModelUpdateOneRequiredWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contactPhone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneRequiredWithoutProductsManagedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductImageCreateInput = {
    id?: bigint | number
    url: string
    is_main?: boolean
    product: ProductCreateNestedOneWithoutImagesInput
  }

  export type ProductImageUncheckedCreateInput = {
    id?: bigint | number
    url: string
    product_id: bigint | number
    is_main?: boolean
  }

  export type ProductImageUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    is_main?: BoolFieldUpdateOperationsInput | boolean
    product?: ProductUpdateOneRequiredWithoutImagesNestedInput
  }

  export type ProductImageUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_main?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductImageCreateManyInput = {
    id?: bigint | number
    url: string
    product_id: bigint | number
    is_main?: boolean
  }

  export type ProductImageUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    is_main?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductImageUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_main?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BrandCreateInput = {
    id?: bigint | number
    name: string
    logo: string
    models?: ModelCreateNestedManyWithoutBrandInput
    products?: ProductCreateNestedManyWithoutBrandInput
  }

  export type BrandUncheckedCreateInput = {
    id?: bigint | number
    name: string
    logo: string
    models?: ModelUncheckedCreateNestedManyWithoutBrandInput
    products?: ProductUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    models?: ModelUpdateManyWithoutBrandNestedInput
    products?: ProductUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    models?: ModelUncheckedUpdateManyWithoutBrandNestedInput
    products?: ProductUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type BrandCreateManyInput = {
    id?: bigint | number
    name: string
    logo: string
  }

  export type BrandUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
  }

  export type BrandUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
  }

  export type ModelCreateInput = {
    id?: bigint | number
    name: string
    brand: BrandCreateNestedOneWithoutModelsInput
    products?: ProductCreateNestedManyWithoutModelInput
  }

  export type ModelUncheckedCreateInput = {
    id?: bigint | number
    name: string
    brand_id: bigint | number
    products?: ProductUncheckedCreateNestedManyWithoutModelInput
  }

  export type ModelUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    brand?: BrandUpdateOneRequiredWithoutModelsNestedInput
    products?: ProductUpdateManyWithoutModelNestedInput
  }

  export type ModelUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    products?: ProductUncheckedUpdateManyWithoutModelNestedInput
  }

  export type ModelCreateManyInput = {
    id?: bigint | number
    name: string
    brand_id: bigint | number
  }

  export type ModelUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type ModelUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type ColorCreateInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    hex: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductCreateNestedManyWithoutColorInput
  }

  export type ColorUncheckedCreateInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    hex: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductUncheckedCreateNestedManyWithoutColorInput
  }

  export type ColorUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    hex?: StringFieldUpdateOperationsInput | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductUpdateManyWithoutColorNestedInput
  }

  export type ColorUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    hex?: StringFieldUpdateOperationsInput | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductUncheckedUpdateManyWithoutColorNestedInput
  }

  export type ColorCreateManyInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    hex: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ColorUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    hex?: StringFieldUpdateOperationsInput | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ColorUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    hex?: StringFieldUpdateOperationsInput | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type CurrencyCreateInput = {
    id?: bigint | number
    name: string
    symbol: string
<<<<<<< HEAD
    user_preferences?: UserCreateNestedManyWithoutCurrencyInput
=======
    userPreferences?: UserCreateNestedManyWithoutPreferredCurrencyInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductCreateNestedManyWithoutCurrencyInput
  }

  export type CurrencyUncheckedCreateInput = {
    id?: bigint | number
    name: string
    symbol: string
<<<<<<< HEAD
    user_preferences?: UserUncheckedCreateNestedManyWithoutCurrencyInput
=======
    userPreferences?: UserUncheckedCreateNestedManyWithoutPreferredCurrencyInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductUncheckedCreateNestedManyWithoutCurrencyInput
  }

  export type CurrencyUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    user_preferences?: UserUpdateManyWithoutCurrencyNestedInput
=======
    userPreferences?: UserUpdateManyWithoutPreferredCurrencyNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductUpdateManyWithoutCurrencyNestedInput
  }

  export type CurrencyUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    user_preferences?: UserUncheckedUpdateManyWithoutCurrencyNestedInput
=======
    userPreferences?: UserUncheckedUpdateManyWithoutPreferredCurrencyNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductUncheckedUpdateManyWithoutCurrencyNestedInput
  }

  export type CurrencyCreateManyInput = {
    id?: bigint | number
    name: string
    symbol: string
  }

  export type CurrencyUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
  }

  export type CurrencyUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
  }

  export type AdminCreateInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    password: string
<<<<<<< HEAD
    avatar?: string | null
    refresh_token?: string | null
    is_creator?: boolean
    language?: LanguageCreateNestedOneWithoutAdminsInput
    blocks_issued?: BlockCreateNestedManyWithoutAdminInput
    products_managed?: ProductCreateNestedManyWithoutAdminInput
=======
    avatar: string
    refresh_token: string
    is_creator?: boolean
    language: LanguageCreateNestedOneWithoutAdminsInput
    blocksIssued?: BlockCreateNestedManyWithoutAdminInput
    productsManaged?: ProductCreateNestedManyWithoutAdminInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type AdminUncheckedCreateInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    password: string
<<<<<<< HEAD
    avatar?: string | null
    refresh_token?: string | null
    lang_id?: bigint | number
    is_creator?: boolean
    blocks_issued?: BlockUncheckedCreateNestedManyWithoutAdminInput
    products_managed?: ProductUncheckedCreateNestedManyWithoutAdminInput
=======
    avatar: string
    refresh_token: string
    lang_id: bigint | number
    is_creator?: boolean
    blocksIssued?: BlockUncheckedCreateNestedManyWithoutAdminInput
    productsManaged?: ProductUncheckedCreateNestedManyWithoutAdminInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type AdminUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    language?: LanguageUpdateOneRequiredWithoutAdminsNestedInput
    blocks_issued?: BlockUpdateManyWithoutAdminNestedInput
    products_managed?: ProductUpdateManyWithoutAdminNestedInput
=======
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    language?: LanguageUpdateOneRequiredWithoutAdminsNestedInput
    blocksIssued?: BlockUpdateManyWithoutAdminNestedInput
    productsManaged?: ProductUpdateManyWithoutAdminNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type AdminUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    blocks_issued?: BlockUncheckedUpdateManyWithoutAdminNestedInput
    products_managed?: ProductUncheckedUpdateManyWithoutAdminNestedInput
=======
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    blocksIssued?: BlockUncheckedUpdateManyWithoutAdminNestedInput
    productsManaged?: ProductUncheckedUpdateManyWithoutAdminNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type AdminCreateManyInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    password: string
<<<<<<< HEAD
    avatar?: string | null
    refresh_token?: string | null
    lang_id?: bigint | number
=======
    avatar: string
    refresh_token: string
    lang_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_creator?: boolean
  }

  export type AdminUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
=======
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_creator?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AdminUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
=======
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_creator?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BlockCreateInput = {
    id?: bigint | number
    reason: string
<<<<<<< HEAD
    expire_date: Date | string
    user: UserCreateNestedOneWithoutBlocksInput
    admin: AdminCreateNestedOneWithoutBlocks_issuedInput
=======
    expireDate: Date | string
    user: UserCreateNestedOneWithoutBlocksInput
    admin: AdminCreateNestedOneWithoutBlocksIssuedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockUncheckedCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    admin_id: bigint | number
    reason: string
<<<<<<< HEAD
    expire_date: Date | string
=======
    expireDate: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    reason?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutBlocksNestedInput
    admin?: AdminUpdateOneRequiredWithoutBlocks_issuedNestedInput
=======
    expireDate?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutBlocksNestedInput
    admin?: AdminUpdateOneRequiredWithoutBlocksIssuedNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    reason?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
=======
    expireDate?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockCreateManyInput = {
    id?: bigint | number
    user_id: bigint | number
    admin_id: bigint | number
    reason: string
<<<<<<< HEAD
    expire_date: Date | string
=======
    expireDate: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    reason?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
=======
    expireDate?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    reason?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
=======
    expireDate?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PaymentCreateInput = {
    id?: bigint | number
    amount: number
    user: UserCreateNestedOneWithoutPaymentsInput
<<<<<<< HEAD
    payment_method: PaymentMethodCreateNestedOneWithoutPaymentsInput
=======
    paymentMethod: PaymentMethodCreateNestedOneWithoutPaymentsInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PaymentUncheckedCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    amount: number
    payment_method_id: bigint | number
  }

  export type PaymentUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: FloatFieldUpdateOperationsInput | number
    user?: UserUpdateOneRequiredWithoutPaymentsNestedInput
<<<<<<< HEAD
    payment_method?: PaymentMethodUpdateOneRequiredWithoutPaymentsNestedInput
=======
    paymentMethod?: PaymentMethodUpdateOneRequiredWithoutPaymentsNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PaymentUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: FloatFieldUpdateOperationsInput | number
    payment_method_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type PaymentCreateManyInput = {
    id?: bigint | number
    user_id: bigint | number
    amount: number
    payment_method_id: bigint | number
  }

  export type PaymentUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: FloatFieldUpdateOperationsInput | number
  }

  export type PaymentUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: FloatFieldUpdateOperationsInput | number
    payment_method_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type CommentCreateInput = {
    id?: bigint | number
    text: string
    user: UserCreateNestedOneWithoutCommentsInput
    product: ProductCreateNestedOneWithoutCommentsInput
  }

  export type CommentUncheckedCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    product_id: bigint | number
    text: string
  }

  export type CommentUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    text?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutCommentsNestedInput
    product?: ProductUpdateOneRequiredWithoutCommentsNestedInput
  }

  export type CommentUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    text?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCreateManyInput = {
    id?: bigint | number
    user_id: bigint | number
    product_id: bigint | number
    text: string
  }

  export type CommentUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    text?: StringFieldUpdateOperationsInput | string
  }

  export type CommentUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    text?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentMethodCreateInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    payments?: PaymentCreateNestedManyWithoutPayment_methodInput
=======
    payments?: PaymentCreateNestedManyWithoutPaymentMethodInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PaymentMethodUncheckedCreateInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    payments?: PaymentUncheckedCreateNestedManyWithoutPayment_methodInput
=======
    payments?: PaymentUncheckedCreateNestedManyWithoutPaymentMethodInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PaymentMethodUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    payments?: PaymentUpdateManyWithoutPayment_methodNestedInput
=======
    payments?: PaymentUpdateManyWithoutPaymentMethodNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PaymentMethodUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    payments?: PaymentUncheckedUpdateManyWithoutPayment_methodNestedInput
=======
    payments?: PaymentUncheckedUpdateManyWithoutPaymentMethodNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PaymentMethodCreateManyInput = {
    id?: bigint | number
    name: string
  }

  export type PaymentMethodUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentMethodUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

<<<<<<< HEAD
  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
=======
  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
<<<<<<< HEAD
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
=======
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

<<<<<<< HEAD
  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type OTPNullableScalarRelationFilter = {
    is?: OTPWhereInput | null
    isNot?: OTPWhereInput | null
=======
  export type OTPScalarRelationFilter = {
    is?: OTPWhereInput
    isNot?: OTPWhereInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type LanguageScalarRelationFilter = {
    is?: LanguageWhereInput
    isNot?: LanguageWhereInput
  }

  export type CurrencyScalarRelationFilter = {
    is?: CurrencyWhereInput
    isNot?: CurrencyWhereInput
  }

  export type EmailListRelationFilter = {
    every?: EmailWhereInput
    some?: EmailWhereInput
    none?: EmailWhereInput
  }

  export type PhoneListRelationFilter = {
    every?: PhoneWhereInput
    some?: PhoneWhereInput
    none?: PhoneWhereInput
  }

  export type FavouriteItemListRelationFilter = {
    every?: FavouriteItemWhereInput
    some?: FavouriteItemWhereInput
    none?: FavouriteItemWhereInput
  }

  export type AddressListRelationFilter = {
    every?: AddressWhereInput
    some?: AddressWhereInput
    none?: AddressWhereInput
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type CommentListRelationFilter = {
    every?: CommentWhereInput
    some?: CommentWhereInput
    none?: CommentWhereInput
  }

  export type PaymentListRelationFilter = {
    every?: PaymentWhereInput
    some?: PaymentWhereInput
    none?: PaymentWhereInput
  }

  export type BlockListRelationFilter = {
    every?: BlockWhereInput
    some?: BlockWhereInput
    none?: BlockWhereInput
  }

<<<<<<< HEAD
  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type EmailOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PhoneOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FavouriteItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AddressOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BlockOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    surname?: SortOrder
    birth_date?: SortOrder
    phone?: SortOrder
    avatar?: SortOrder
    refresh_token?: SortOrder
    balance?: SortOrder
    otp_id?: SortOrder
    lang_id?: SortOrder
<<<<<<< HEAD
    currency_id?: SortOrder
=======
    preferredCurrencyId?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
    balance?: SortOrder
    otp_id?: SortOrder
    lang_id?: SortOrder
<<<<<<< HEAD
    currency_id?: SortOrder
=======
    preferredCurrencyId?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    surname?: SortOrder
    birth_date?: SortOrder
    phone?: SortOrder
    avatar?: SortOrder
    refresh_token?: SortOrder
    balance?: SortOrder
    otp_id?: SortOrder
    lang_id?: SortOrder
<<<<<<< HEAD
    currency_id?: SortOrder
=======
    preferredCurrencyId?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    surname?: SortOrder
    birth_date?: SortOrder
    phone?: SortOrder
    avatar?: SortOrder
    refresh_token?: SortOrder
    balance?: SortOrder
    otp_id?: SortOrder
    lang_id?: SortOrder
<<<<<<< HEAD
    currency_id?: SortOrder
=======
    preferredCurrencyId?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
    balance?: SortOrder
    otp_id?: SortOrder
    lang_id?: SortOrder
<<<<<<< HEAD
    currency_id?: SortOrder
=======
    preferredCurrencyId?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

<<<<<<< HEAD
  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
=======
  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
<<<<<<< HEAD
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
=======
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

<<<<<<< HEAD
  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

<<<<<<< HEAD
  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OTPCountOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    otp?: SortOrder
    expire?: SortOrder
  }

  export type OTPAvgOrderByAggregateInput = {
    id?: SortOrder
    otp?: SortOrder
  }

  export type OTPMaxOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    otp?: SortOrder
    expire?: SortOrder
  }

  export type OTPMinOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    otp?: SortOrder
    expire?: SortOrder
  }

  export type OTPSumOrderByAggregateInput = {
    id?: SortOrder
    otp?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

<<<<<<< HEAD
  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type PhoneCountOrderByAggregateInput = {
    id?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
  }

  export type PhoneAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type PhoneMaxOrderByAggregateInput = {
    id?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
  }

  export type PhoneMinOrderByAggregateInput = {
    id?: SortOrder
    phone?: SortOrder
    user_id?: SortOrder
  }

  export type PhoneSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type EmailCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    user_id?: SortOrder
  }

  export type EmailAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type EmailMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    user_id?: SortOrder
  }

  export type EmailMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    user_id?: SortOrder
  }

  export type EmailSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type AddressCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    address_value?: SortOrder
=======
    addressValue?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: SortOrder
    long?: SortOrder
    user_id?: SortOrder
    is_active?: SortOrder
  }

  export type AddressAvgOrderByAggregateInput = {
    id?: SortOrder
<<<<<<< HEAD
    address_value?: SortOrder
=======
    addressValue?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user_id?: SortOrder
  }

  export type AddressMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    address_value?: SortOrder
=======
    addressValue?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: SortOrder
    long?: SortOrder
    user_id?: SortOrder
    is_active?: SortOrder
  }

  export type AddressMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    address_value?: SortOrder
=======
    addressValue?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: SortOrder
    long?: SortOrder
    user_id?: SortOrder
    is_active?: SortOrder
  }

  export type AddressSumOrderByAggregateInput = {
    id?: SortOrder
<<<<<<< HEAD
    address_value?: SortOrder
=======
    addressValue?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user_id?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type AdminListRelationFilter = {
    every?: AdminWhereInput
    some?: AdminWhereInput
    none?: AdminWhereInput
  }

  export type AdminOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LanguageCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    flag_url?: SortOrder
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type LanguageAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type LanguageMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    flag_url?: SortOrder
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type LanguageMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    flag_url?: SortOrder
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type LanguageSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ProductScalarRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type FavouriteItemUser_idProduct_idCompoundUniqueInput = {
    user_id: bigint | number
    product_id: bigint | number
  }

  export type FavouriteItemCountOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    user_id?: SortOrder
  }

  export type FavouriteItemAvgOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    user_id?: SortOrder
  }

  export type FavouriteItemMaxOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    user_id?: SortOrder
  }

  export type FavouriteItemMinOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    user_id?: SortOrder
  }

  export type FavouriteItemSumOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    user_id?: SortOrder
  }

<<<<<<< HEAD
  export type BrandNullableScalarRelationFilter = {
    is?: BrandWhereInput | null
    isNot?: BrandWhereInput | null
  }

  export type ModelNullableScalarRelationFilter = {
    is?: ModelWhereInput | null
    isNot?: ModelWhereInput | null
=======
  export type BrandScalarRelationFilter = {
    is?: BrandWhereInput
    isNot?: BrandWhereInput
  }

  export type ModelScalarRelationFilter = {
    is?: ModelWhereInput
    isNot?: ModelWhereInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ColorScalarRelationFilter = {
    is?: ColorWhereInput
    isNot?: ColorWhereInput
  }

  export type AddressScalarRelationFilter = {
    is?: AddressWhereInput
    isNot?: AddressWhereInput
  }

  export type PhoneScalarRelationFilter = {
    is?: PhoneWhereInput
    isNot?: PhoneWhereInput
  }

<<<<<<< HEAD
  export type AdminNullableScalarRelationFilter = {
    is?: AdminWhereInput | null
    isNot?: AdminWhereInput | null
=======
  export type AdminScalarRelationFilter = {
    is?: AdminWhereInput
    isNot?: AdminWhereInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductImageListRelationFilter = {
    every?: ProductImageWhereInput
    some?: ProductImageWhereInput
    none?: ProductImageWhereInput
  }

  export type ProductImageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    year?: SortOrder
    brand_id?: SortOrder
    model_id?: SortOrder
    custom_model?: SortOrder
    color_id?: SortOrder
    price?: SortOrder
    floor_price?: SortOrder
    currency_id?: SortOrder
    is_new?: SortOrder
    has_document?: SortOrder
    address_id?: SortOrder
    phone_id?: SortOrder
    storage?: SortOrder
    ram?: SortOrder
    views?: SortOrder
    is_archived?: SortOrder
    is_sold?: SortOrder
    is_checked?: SortOrder
    admin_id?: SortOrder
    is_top?: SortOrder
    top_expire_date?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    year?: SortOrder
    brand_id?: SortOrder
    model_id?: SortOrder
    color_id?: SortOrder
    price?: SortOrder
    currency_id?: SortOrder
    address_id?: SortOrder
    phone_id?: SortOrder
    storage?: SortOrder
    ram?: SortOrder
    views?: SortOrder
    admin_id?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    year?: SortOrder
    brand_id?: SortOrder
    model_id?: SortOrder
    custom_model?: SortOrder
    color_id?: SortOrder
    price?: SortOrder
    floor_price?: SortOrder
    currency_id?: SortOrder
    is_new?: SortOrder
    has_document?: SortOrder
    address_id?: SortOrder
    phone_id?: SortOrder
    storage?: SortOrder
    ram?: SortOrder
    views?: SortOrder
    is_archived?: SortOrder
    is_sold?: SortOrder
    is_checked?: SortOrder
    admin_id?: SortOrder
    is_top?: SortOrder
    top_expire_date?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    year?: SortOrder
    brand_id?: SortOrder
    model_id?: SortOrder
    custom_model?: SortOrder
    color_id?: SortOrder
    price?: SortOrder
    floor_price?: SortOrder
    currency_id?: SortOrder
    is_new?: SortOrder
    has_document?: SortOrder
    address_id?: SortOrder
    phone_id?: SortOrder
    storage?: SortOrder
    ram?: SortOrder
    views?: SortOrder
    is_archived?: SortOrder
    is_sold?: SortOrder
    is_checked?: SortOrder
    admin_id?: SortOrder
    is_top?: SortOrder
    top_expire_date?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    year?: SortOrder
    brand_id?: SortOrder
    model_id?: SortOrder
    color_id?: SortOrder
    price?: SortOrder
    currency_id?: SortOrder
    address_id?: SortOrder
    phone_id?: SortOrder
    storage?: SortOrder
    ram?: SortOrder
    views?: SortOrder
    admin_id?: SortOrder
  }

  export type ProductImageCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    product_id?: SortOrder
    is_main?: SortOrder
  }

  export type ProductImageAvgOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
  }

  export type ProductImageMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    product_id?: SortOrder
    is_main?: SortOrder
  }

  export type ProductImageMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    product_id?: SortOrder
    is_main?: SortOrder
  }

  export type ProductImageSumOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
  }

  export type ModelListRelationFilter = {
    every?: ModelWhereInput
    some?: ModelWhereInput
    none?: ModelWhereInput
  }

  export type ModelOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BrandCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrder
  }

  export type BrandAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BrandMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrder
  }

  export type BrandMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrder
  }

  export type BrandSumOrderByAggregateInput = {
    id?: SortOrder
  }

<<<<<<< HEAD
  export type BrandScalarRelationFilter = {
    is?: BrandWhereInput
    isNot?: BrandWhereInput
  }

=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type ModelBrand_idNameCompoundUniqueInput = {
    brand_id: bigint | number
    name: string
  }

  export type ModelCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    brand_id?: SortOrder
  }

  export type ModelAvgOrderByAggregateInput = {
    id?: SortOrder
    brand_id?: SortOrder
  }

  export type ModelMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    brand_id?: SortOrder
  }

  export type ModelMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    brand_id?: SortOrder
  }

  export type ModelSumOrderByAggregateInput = {
    id?: SortOrder
    brand_id?: SortOrder
  }

  export type ColorCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    hex?: SortOrder
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ColorAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ColorMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    hex?: SortOrder
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ColorMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
<<<<<<< HEAD
    hex?: SortOrder
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ColorSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CurrencyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    symbol?: SortOrder
  }

  export type CurrencyAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CurrencyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    symbol?: SortOrder
  }

  export type CurrencyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    symbol?: SortOrder
  }

  export type CurrencySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type AdminCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    surname?: SortOrder
    birth_date?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    avatar?: SortOrder
    refresh_token?: SortOrder
    lang_id?: SortOrder
    is_creator?: SortOrder
  }

  export type AdminAvgOrderByAggregateInput = {
    id?: SortOrder
    lang_id?: SortOrder
  }

  export type AdminMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    surname?: SortOrder
    birth_date?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    avatar?: SortOrder
    refresh_token?: SortOrder
    lang_id?: SortOrder
    is_creator?: SortOrder
  }

  export type AdminMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    surname?: SortOrder
    birth_date?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    avatar?: SortOrder
    refresh_token?: SortOrder
    lang_id?: SortOrder
    is_creator?: SortOrder
  }

  export type AdminSumOrderByAggregateInput = {
    id?: SortOrder
    lang_id?: SortOrder
  }

<<<<<<< HEAD
  export type AdminScalarRelationFilter = {
    is?: AdminWhereInput
    isNot?: AdminWhereInput
  }

=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type BlockCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    admin_id?: SortOrder
    reason?: SortOrder
<<<<<<< HEAD
    expire_date?: SortOrder
=======
    expireDate?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    admin_id?: SortOrder
  }

  export type BlockMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    admin_id?: SortOrder
    reason?: SortOrder
<<<<<<< HEAD
    expire_date?: SortOrder
=======
    expireDate?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    admin_id?: SortOrder
    reason?: SortOrder
<<<<<<< HEAD
    expire_date?: SortOrder
=======
    expireDate?: SortOrder
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    admin_id?: SortOrder
  }

  export type PaymentMethodScalarRelationFilter = {
    is?: PaymentMethodWhereInput
    isNot?: PaymentMethodWhereInput
  }

  export type PaymentCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    payment_method_id?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    payment_method_id?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    payment_method_id?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    payment_method_id?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    payment_method_id?: SortOrder
  }

  export type CommentCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    text?: SortOrder
  }

  export type CommentAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
  }

  export type CommentMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    text?: SortOrder
  }

  export type CommentMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    text?: SortOrder
  }

  export type CommentSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
  }

  export type PaymentMethodCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type PaymentMethodAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PaymentMethodMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type PaymentMethodMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type PaymentMethodSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type OTPCreateNestedOneWithoutUsersInput = {
    create?: XOR<OTPCreateWithoutUsersInput, OTPUncheckedCreateWithoutUsersInput>
    connectOrCreate?: OTPCreateOrConnectWithoutUsersInput
    connect?: OTPWhereUniqueInput
  }

  export type LanguageCreateNestedOneWithoutUsersInput = {
    create?: XOR<LanguageCreateWithoutUsersInput, LanguageUncheckedCreateWithoutUsersInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutUsersInput
    connect?: LanguageWhereUniqueInput
  }

<<<<<<< HEAD
  export type CurrencyCreateNestedOneWithoutUser_preferencesInput = {
    create?: XOR<CurrencyCreateWithoutUser_preferencesInput, CurrencyUncheckedCreateWithoutUser_preferencesInput>
    connectOrCreate?: CurrencyCreateOrConnectWithoutUser_preferencesInput
=======
  export type CurrencyCreateNestedOneWithoutUserPreferencesInput = {
    create?: XOR<CurrencyCreateWithoutUserPreferencesInput, CurrencyUncheckedCreateWithoutUserPreferencesInput>
    connectOrCreate?: CurrencyCreateOrConnectWithoutUserPreferencesInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    connect?: CurrencyWhereUniqueInput
  }

  export type EmailCreateNestedManyWithoutUserInput = {
    create?: XOR<EmailCreateWithoutUserInput, EmailUncheckedCreateWithoutUserInput> | EmailCreateWithoutUserInput[] | EmailUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EmailCreateOrConnectWithoutUserInput | EmailCreateOrConnectWithoutUserInput[]
    createMany?: EmailCreateManyUserInputEnvelope
    connect?: EmailWhereUniqueInput | EmailWhereUniqueInput[]
  }

  export type PhoneCreateNestedManyWithoutUserInput = {
    create?: XOR<PhoneCreateWithoutUserInput, PhoneUncheckedCreateWithoutUserInput> | PhoneCreateWithoutUserInput[] | PhoneUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PhoneCreateOrConnectWithoutUserInput | PhoneCreateOrConnectWithoutUserInput[]
    createMany?: PhoneCreateManyUserInputEnvelope
    connect?: PhoneWhereUniqueInput | PhoneWhereUniqueInput[]
  }

  export type FavouriteItemCreateNestedManyWithoutUserInput = {
    create?: XOR<FavouriteItemCreateWithoutUserInput, FavouriteItemUncheckedCreateWithoutUserInput> | FavouriteItemCreateWithoutUserInput[] | FavouriteItemUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavouriteItemCreateOrConnectWithoutUserInput | FavouriteItemCreateOrConnectWithoutUserInput[]
    createMany?: FavouriteItemCreateManyUserInputEnvelope
    connect?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
  }

  export type AddressCreateNestedManyWithoutUserInput = {
    create?: XOR<AddressCreateWithoutUserInput, AddressUncheckedCreateWithoutUserInput> | AddressCreateWithoutUserInput[] | AddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutUserInput | AddressCreateOrConnectWithoutUserInput[]
    createMany?: AddressCreateManyUserInputEnvelope
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutUserInput = {
    create?: XOR<ProductCreateWithoutUserInput, ProductUncheckedCreateWithoutUserInput> | ProductCreateWithoutUserInput[] | ProductUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUserInput | ProductCreateOrConnectWithoutUserInput[]
    createMany?: ProductCreateManyUserInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type CommentCreateNestedManyWithoutUserInput = {
    create?: XOR<CommentCreateWithoutUserInput, CommentUncheckedCreateWithoutUserInput> | CommentCreateWithoutUserInput[] | CommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutUserInput | CommentCreateOrConnectWithoutUserInput[]
    createMany?: CommentCreateManyUserInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type BlockCreateNestedManyWithoutUserInput = {
    create?: XOR<BlockCreateWithoutUserInput, BlockUncheckedCreateWithoutUserInput> | BlockCreateWithoutUserInput[] | BlockUncheckedCreateWithoutUserInput[]
    connectOrCreate?: BlockCreateOrConnectWithoutUserInput | BlockCreateOrConnectWithoutUserInput[]
    createMany?: BlockCreateManyUserInputEnvelope
    connect?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
  }

  export type EmailUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<EmailCreateWithoutUserInput, EmailUncheckedCreateWithoutUserInput> | EmailCreateWithoutUserInput[] | EmailUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EmailCreateOrConnectWithoutUserInput | EmailCreateOrConnectWithoutUserInput[]
    createMany?: EmailCreateManyUserInputEnvelope
    connect?: EmailWhereUniqueInput | EmailWhereUniqueInput[]
  }

  export type PhoneUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PhoneCreateWithoutUserInput, PhoneUncheckedCreateWithoutUserInput> | PhoneCreateWithoutUserInput[] | PhoneUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PhoneCreateOrConnectWithoutUserInput | PhoneCreateOrConnectWithoutUserInput[]
    createMany?: PhoneCreateManyUserInputEnvelope
    connect?: PhoneWhereUniqueInput | PhoneWhereUniqueInput[]
  }

  export type FavouriteItemUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FavouriteItemCreateWithoutUserInput, FavouriteItemUncheckedCreateWithoutUserInput> | FavouriteItemCreateWithoutUserInput[] | FavouriteItemUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavouriteItemCreateOrConnectWithoutUserInput | FavouriteItemCreateOrConnectWithoutUserInput[]
    createMany?: FavouriteItemCreateManyUserInputEnvelope
    connect?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
  }

  export type AddressUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AddressCreateWithoutUserInput, AddressUncheckedCreateWithoutUserInput> | AddressCreateWithoutUserInput[] | AddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutUserInput | AddressCreateOrConnectWithoutUserInput[]
    createMany?: AddressCreateManyUserInputEnvelope
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ProductCreateWithoutUserInput, ProductUncheckedCreateWithoutUserInput> | ProductCreateWithoutUserInput[] | ProductUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUserInput | ProductCreateOrConnectWithoutUserInput[]
    createMany?: ProductCreateManyUserInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CommentCreateWithoutUserInput, CommentUncheckedCreateWithoutUserInput> | CommentCreateWithoutUserInput[] | CommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutUserInput | CommentCreateOrConnectWithoutUserInput[]
    createMany?: CommentCreateManyUserInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type BlockUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<BlockCreateWithoutUserInput, BlockUncheckedCreateWithoutUserInput> | BlockCreateWithoutUserInput[] | BlockUncheckedCreateWithoutUserInput[]
    connectOrCreate?: BlockCreateOrConnectWithoutUserInput | BlockCreateOrConnectWithoutUserInput[]
    createMany?: BlockCreateManyUserInputEnvelope
    connect?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

<<<<<<< HEAD
  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
=======
  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

<<<<<<< HEAD
  export type OTPUpdateOneWithoutUsersNestedInput = {
    create?: XOR<OTPCreateWithoutUsersInput, OTPUncheckedCreateWithoutUsersInput>
    connectOrCreate?: OTPCreateOrConnectWithoutUsersInput
    upsert?: OTPUpsertWithoutUsersInput
    disconnect?: OTPWhereInput | boolean
    delete?: OTPWhereInput | boolean
=======
  export type OTPUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<OTPCreateWithoutUsersInput, OTPUncheckedCreateWithoutUsersInput>
    connectOrCreate?: OTPCreateOrConnectWithoutUsersInput
    upsert?: OTPUpsertWithoutUsersInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    connect?: OTPWhereUniqueInput
    update?: XOR<XOR<OTPUpdateToOneWithWhereWithoutUsersInput, OTPUpdateWithoutUsersInput>, OTPUncheckedUpdateWithoutUsersInput>
  }

  export type LanguageUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<LanguageCreateWithoutUsersInput, LanguageUncheckedCreateWithoutUsersInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutUsersInput
    upsert?: LanguageUpsertWithoutUsersInput
    connect?: LanguageWhereUniqueInput
    update?: XOR<XOR<LanguageUpdateToOneWithWhereWithoutUsersInput, LanguageUpdateWithoutUsersInput>, LanguageUncheckedUpdateWithoutUsersInput>
  }

<<<<<<< HEAD
  export type CurrencyUpdateOneRequiredWithoutUser_preferencesNestedInput = {
    create?: XOR<CurrencyCreateWithoutUser_preferencesInput, CurrencyUncheckedCreateWithoutUser_preferencesInput>
    connectOrCreate?: CurrencyCreateOrConnectWithoutUser_preferencesInput
    upsert?: CurrencyUpsertWithoutUser_preferencesInput
    connect?: CurrencyWhereUniqueInput
    update?: XOR<XOR<CurrencyUpdateToOneWithWhereWithoutUser_preferencesInput, CurrencyUpdateWithoutUser_preferencesInput>, CurrencyUncheckedUpdateWithoutUser_preferencesInput>
=======
  export type CurrencyUpdateOneRequiredWithoutUserPreferencesNestedInput = {
    create?: XOR<CurrencyCreateWithoutUserPreferencesInput, CurrencyUncheckedCreateWithoutUserPreferencesInput>
    connectOrCreate?: CurrencyCreateOrConnectWithoutUserPreferencesInput
    upsert?: CurrencyUpsertWithoutUserPreferencesInput
    connect?: CurrencyWhereUniqueInput
    update?: XOR<XOR<CurrencyUpdateToOneWithWhereWithoutUserPreferencesInput, CurrencyUpdateWithoutUserPreferencesInput>, CurrencyUncheckedUpdateWithoutUserPreferencesInput>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type EmailUpdateManyWithoutUserNestedInput = {
    create?: XOR<EmailCreateWithoutUserInput, EmailUncheckedCreateWithoutUserInput> | EmailCreateWithoutUserInput[] | EmailUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EmailCreateOrConnectWithoutUserInput | EmailCreateOrConnectWithoutUserInput[]
    upsert?: EmailUpsertWithWhereUniqueWithoutUserInput | EmailUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EmailCreateManyUserInputEnvelope
    set?: EmailWhereUniqueInput | EmailWhereUniqueInput[]
    disconnect?: EmailWhereUniqueInput | EmailWhereUniqueInput[]
    delete?: EmailWhereUniqueInput | EmailWhereUniqueInput[]
    connect?: EmailWhereUniqueInput | EmailWhereUniqueInput[]
    update?: EmailUpdateWithWhereUniqueWithoutUserInput | EmailUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EmailUpdateManyWithWhereWithoutUserInput | EmailUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EmailScalarWhereInput | EmailScalarWhereInput[]
  }

  export type PhoneUpdateManyWithoutUserNestedInput = {
    create?: XOR<PhoneCreateWithoutUserInput, PhoneUncheckedCreateWithoutUserInput> | PhoneCreateWithoutUserInput[] | PhoneUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PhoneCreateOrConnectWithoutUserInput | PhoneCreateOrConnectWithoutUserInput[]
    upsert?: PhoneUpsertWithWhereUniqueWithoutUserInput | PhoneUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PhoneCreateManyUserInputEnvelope
    set?: PhoneWhereUniqueInput | PhoneWhereUniqueInput[]
    disconnect?: PhoneWhereUniqueInput | PhoneWhereUniqueInput[]
    delete?: PhoneWhereUniqueInput | PhoneWhereUniqueInput[]
    connect?: PhoneWhereUniqueInput | PhoneWhereUniqueInput[]
    update?: PhoneUpdateWithWhereUniqueWithoutUserInput | PhoneUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PhoneUpdateManyWithWhereWithoutUserInput | PhoneUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PhoneScalarWhereInput | PhoneScalarWhereInput[]
  }

  export type FavouriteItemUpdateManyWithoutUserNestedInput = {
    create?: XOR<FavouriteItemCreateWithoutUserInput, FavouriteItemUncheckedCreateWithoutUserInput> | FavouriteItemCreateWithoutUserInput[] | FavouriteItemUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavouriteItemCreateOrConnectWithoutUserInput | FavouriteItemCreateOrConnectWithoutUserInput[]
    upsert?: FavouriteItemUpsertWithWhereUniqueWithoutUserInput | FavouriteItemUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FavouriteItemCreateManyUserInputEnvelope
    set?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    disconnect?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    delete?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    connect?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    update?: FavouriteItemUpdateWithWhereUniqueWithoutUserInput | FavouriteItemUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FavouriteItemUpdateManyWithWhereWithoutUserInput | FavouriteItemUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FavouriteItemScalarWhereInput | FavouriteItemScalarWhereInput[]
  }

  export type AddressUpdateManyWithoutUserNestedInput = {
    create?: XOR<AddressCreateWithoutUserInput, AddressUncheckedCreateWithoutUserInput> | AddressCreateWithoutUserInput[] | AddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutUserInput | AddressCreateOrConnectWithoutUserInput[]
    upsert?: AddressUpsertWithWhereUniqueWithoutUserInput | AddressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AddressCreateManyUserInputEnvelope
    set?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    disconnect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    delete?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    update?: AddressUpdateWithWhereUniqueWithoutUserInput | AddressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AddressUpdateManyWithWhereWithoutUserInput | AddressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AddressScalarWhereInput | AddressScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutUserNestedInput = {
    create?: XOR<ProductCreateWithoutUserInput, ProductUncheckedCreateWithoutUserInput> | ProductCreateWithoutUserInput[] | ProductUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUserInput | ProductCreateOrConnectWithoutUserInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUserInput | ProductUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ProductCreateManyUserInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUserInput | ProductUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUserInput | ProductUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type CommentUpdateManyWithoutUserNestedInput = {
    create?: XOR<CommentCreateWithoutUserInput, CommentUncheckedCreateWithoutUserInput> | CommentCreateWithoutUserInput[] | CommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutUserInput | CommentCreateOrConnectWithoutUserInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutUserInput | CommentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CommentCreateManyUserInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutUserInput | CommentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutUserInput | CommentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUserInput | PaymentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUserInput | PaymentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUserInput | PaymentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type BlockUpdateManyWithoutUserNestedInput = {
    create?: XOR<BlockCreateWithoutUserInput, BlockUncheckedCreateWithoutUserInput> | BlockCreateWithoutUserInput[] | BlockUncheckedCreateWithoutUserInput[]
    connectOrCreate?: BlockCreateOrConnectWithoutUserInput | BlockCreateOrConnectWithoutUserInput[]
    upsert?: BlockUpsertWithWhereUniqueWithoutUserInput | BlockUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: BlockCreateManyUserInputEnvelope
    set?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    disconnect?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    delete?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    connect?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    update?: BlockUpdateWithWhereUniqueWithoutUserInput | BlockUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: BlockUpdateManyWithWhereWithoutUserInput | BlockUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: BlockScalarWhereInput | BlockScalarWhereInput[]
  }

<<<<<<< HEAD
  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type EmailUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<EmailCreateWithoutUserInput, EmailUncheckedCreateWithoutUserInput> | EmailCreateWithoutUserInput[] | EmailUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EmailCreateOrConnectWithoutUserInput | EmailCreateOrConnectWithoutUserInput[]
    upsert?: EmailUpsertWithWhereUniqueWithoutUserInput | EmailUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EmailCreateManyUserInputEnvelope
    set?: EmailWhereUniqueInput | EmailWhereUniqueInput[]
    disconnect?: EmailWhereUniqueInput | EmailWhereUniqueInput[]
    delete?: EmailWhereUniqueInput | EmailWhereUniqueInput[]
    connect?: EmailWhereUniqueInput | EmailWhereUniqueInput[]
    update?: EmailUpdateWithWhereUniqueWithoutUserInput | EmailUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EmailUpdateManyWithWhereWithoutUserInput | EmailUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EmailScalarWhereInput | EmailScalarWhereInput[]
  }

  export type PhoneUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PhoneCreateWithoutUserInput, PhoneUncheckedCreateWithoutUserInput> | PhoneCreateWithoutUserInput[] | PhoneUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PhoneCreateOrConnectWithoutUserInput | PhoneCreateOrConnectWithoutUserInput[]
    upsert?: PhoneUpsertWithWhereUniqueWithoutUserInput | PhoneUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PhoneCreateManyUserInputEnvelope
    set?: PhoneWhereUniqueInput | PhoneWhereUniqueInput[]
    disconnect?: PhoneWhereUniqueInput | PhoneWhereUniqueInput[]
    delete?: PhoneWhereUniqueInput | PhoneWhereUniqueInput[]
    connect?: PhoneWhereUniqueInput | PhoneWhereUniqueInput[]
    update?: PhoneUpdateWithWhereUniqueWithoutUserInput | PhoneUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PhoneUpdateManyWithWhereWithoutUserInput | PhoneUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PhoneScalarWhereInput | PhoneScalarWhereInput[]
  }

  export type FavouriteItemUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FavouriteItemCreateWithoutUserInput, FavouriteItemUncheckedCreateWithoutUserInput> | FavouriteItemCreateWithoutUserInput[] | FavouriteItemUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavouriteItemCreateOrConnectWithoutUserInput | FavouriteItemCreateOrConnectWithoutUserInput[]
    upsert?: FavouriteItemUpsertWithWhereUniqueWithoutUserInput | FavouriteItemUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FavouriteItemCreateManyUserInputEnvelope
    set?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    disconnect?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    delete?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    connect?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    update?: FavouriteItemUpdateWithWhereUniqueWithoutUserInput | FavouriteItemUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FavouriteItemUpdateManyWithWhereWithoutUserInput | FavouriteItemUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FavouriteItemScalarWhereInput | FavouriteItemScalarWhereInput[]
  }

  export type AddressUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AddressCreateWithoutUserInput, AddressUncheckedCreateWithoutUserInput> | AddressCreateWithoutUserInput[] | AddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutUserInput | AddressCreateOrConnectWithoutUserInput[]
    upsert?: AddressUpsertWithWhereUniqueWithoutUserInput | AddressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AddressCreateManyUserInputEnvelope
    set?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    disconnect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    delete?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    update?: AddressUpdateWithWhereUniqueWithoutUserInput | AddressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AddressUpdateManyWithWhereWithoutUserInput | AddressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AddressScalarWhereInput | AddressScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ProductCreateWithoutUserInput, ProductUncheckedCreateWithoutUserInput> | ProductCreateWithoutUserInput[] | ProductUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUserInput | ProductCreateOrConnectWithoutUserInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUserInput | ProductUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ProductCreateManyUserInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUserInput | ProductUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUserInput | ProductUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CommentCreateWithoutUserInput, CommentUncheckedCreateWithoutUserInput> | CommentCreateWithoutUserInput[] | CommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutUserInput | CommentCreateOrConnectWithoutUserInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutUserInput | CommentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CommentCreateManyUserInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutUserInput | CommentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutUserInput | CommentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUserInput | PaymentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUserInput | PaymentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUserInput | PaymentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type BlockUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<BlockCreateWithoutUserInput, BlockUncheckedCreateWithoutUserInput> | BlockCreateWithoutUserInput[] | BlockUncheckedCreateWithoutUserInput[]
    connectOrCreate?: BlockCreateOrConnectWithoutUserInput | BlockCreateOrConnectWithoutUserInput[]
    upsert?: BlockUpsertWithWhereUniqueWithoutUserInput | BlockUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: BlockCreateManyUserInputEnvelope
    set?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    disconnect?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    delete?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    connect?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    update?: BlockUpdateWithWhereUniqueWithoutUserInput | BlockUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: BlockUpdateManyWithWhereWithoutUserInput | BlockUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: BlockScalarWhereInput | BlockScalarWhereInput[]
  }

  export type UserCreateNestedManyWithoutOtpInput = {
    create?: XOR<UserCreateWithoutOtpInput, UserUncheckedCreateWithoutOtpInput> | UserCreateWithoutOtpInput[] | UserUncheckedCreateWithoutOtpInput[]
    connectOrCreate?: UserCreateOrConnectWithoutOtpInput | UserCreateOrConnectWithoutOtpInput[]
    createMany?: UserCreateManyOtpInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutOtpInput = {
    create?: XOR<UserCreateWithoutOtpInput, UserUncheckedCreateWithoutOtpInput> | UserCreateWithoutOtpInput[] | UserUncheckedCreateWithoutOtpInput[]
    connectOrCreate?: UserCreateOrConnectWithoutOtpInput | UserCreateOrConnectWithoutOtpInput[]
    createMany?: UserCreateManyOtpInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

<<<<<<< HEAD
  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type UserUpdateManyWithoutOtpNestedInput = {
    create?: XOR<UserCreateWithoutOtpInput, UserUncheckedCreateWithoutOtpInput> | UserCreateWithoutOtpInput[] | UserUncheckedCreateWithoutOtpInput[]
    connectOrCreate?: UserCreateOrConnectWithoutOtpInput | UserCreateOrConnectWithoutOtpInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutOtpInput | UserUpsertWithWhereUniqueWithoutOtpInput[]
    createMany?: UserCreateManyOtpInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutOtpInput | UserUpdateWithWhereUniqueWithoutOtpInput[]
    updateMany?: UserUpdateManyWithWhereWithoutOtpInput | UserUpdateManyWithWhereWithoutOtpInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutOtpNestedInput = {
    create?: XOR<UserCreateWithoutOtpInput, UserUncheckedCreateWithoutOtpInput> | UserCreateWithoutOtpInput[] | UserUncheckedCreateWithoutOtpInput[]
    connectOrCreate?: UserCreateOrConnectWithoutOtpInput | UserCreateOrConnectWithoutOtpInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutOtpInput | UserUpsertWithWhereUniqueWithoutOtpInput[]
    createMany?: UserCreateManyOtpInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutOtpInput | UserUpdateWithWhereUniqueWithoutOtpInput[]
    updateMany?: UserUpdateManyWithWhereWithoutOtpInput | UserUpdateManyWithWhereWithoutOtpInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

<<<<<<< HEAD
  export type UserCreateNestedOneWithoutAdditional_phonesInput = {
    create?: XOR<UserCreateWithoutAdditional_phonesInput, UserUncheckedCreateWithoutAdditional_phonesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdditional_phonesInput
    connect?: UserWhereUniqueInput
  }

  export type ProductCreateNestedManyWithoutContact_phoneInput = {
    create?: XOR<ProductCreateWithoutContact_phoneInput, ProductUncheckedCreateWithoutContact_phoneInput> | ProductCreateWithoutContact_phoneInput[] | ProductUncheckedCreateWithoutContact_phoneInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutContact_phoneInput | ProductCreateOrConnectWithoutContact_phoneInput[]
    createMany?: ProductCreateManyContact_phoneInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutContact_phoneInput = {
    create?: XOR<ProductCreateWithoutContact_phoneInput, ProductUncheckedCreateWithoutContact_phoneInput> | ProductCreateWithoutContact_phoneInput[] | ProductUncheckedCreateWithoutContact_phoneInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutContact_phoneInput | ProductCreateOrConnectWithoutContact_phoneInput[]
    createMany?: ProductCreateManyContact_phoneInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutAdditional_phonesNestedInput = {
    create?: XOR<UserCreateWithoutAdditional_phonesInput, UserUncheckedCreateWithoutAdditional_phonesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdditional_phonesInput
    upsert?: UserUpsertWithoutAdditional_phonesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAdditional_phonesInput, UserUpdateWithoutAdditional_phonesInput>, UserUncheckedUpdateWithoutAdditional_phonesInput>
  }

  export type ProductUpdateManyWithoutContact_phoneNestedInput = {
    create?: XOR<ProductCreateWithoutContact_phoneInput, ProductUncheckedCreateWithoutContact_phoneInput> | ProductCreateWithoutContact_phoneInput[] | ProductUncheckedCreateWithoutContact_phoneInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutContact_phoneInput | ProductCreateOrConnectWithoutContact_phoneInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutContact_phoneInput | ProductUpsertWithWhereUniqueWithoutContact_phoneInput[]
    createMany?: ProductCreateManyContact_phoneInputEnvelope
=======
  export type UserCreateNestedOneWithoutAdditionalPhonesInput = {
    create?: XOR<UserCreateWithoutAdditionalPhonesInput, UserUncheckedCreateWithoutAdditionalPhonesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdditionalPhonesInput
    connect?: UserWhereUniqueInput
  }

  export type ProductCreateNestedManyWithoutContactPhoneInput = {
    create?: XOR<ProductCreateWithoutContactPhoneInput, ProductUncheckedCreateWithoutContactPhoneInput> | ProductCreateWithoutContactPhoneInput[] | ProductUncheckedCreateWithoutContactPhoneInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutContactPhoneInput | ProductCreateOrConnectWithoutContactPhoneInput[]
    createMany?: ProductCreateManyContactPhoneInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutContactPhoneInput = {
    create?: XOR<ProductCreateWithoutContactPhoneInput, ProductUncheckedCreateWithoutContactPhoneInput> | ProductCreateWithoutContactPhoneInput[] | ProductUncheckedCreateWithoutContactPhoneInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutContactPhoneInput | ProductCreateOrConnectWithoutContactPhoneInput[]
    createMany?: ProductCreateManyContactPhoneInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutAdditionalPhonesNestedInput = {
    create?: XOR<UserCreateWithoutAdditionalPhonesInput, UserUncheckedCreateWithoutAdditionalPhonesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdditionalPhonesInput
    upsert?: UserUpsertWithoutAdditionalPhonesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAdditionalPhonesInput, UserUpdateWithoutAdditionalPhonesInput>, UserUncheckedUpdateWithoutAdditionalPhonesInput>
  }

  export type ProductUpdateManyWithoutContactPhoneNestedInput = {
    create?: XOR<ProductCreateWithoutContactPhoneInput, ProductUncheckedCreateWithoutContactPhoneInput> | ProductCreateWithoutContactPhoneInput[] | ProductUncheckedCreateWithoutContactPhoneInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutContactPhoneInput | ProductCreateOrConnectWithoutContactPhoneInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutContactPhoneInput | ProductUpsertWithWhereUniqueWithoutContactPhoneInput[]
    createMany?: ProductCreateManyContactPhoneInputEnvelope
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
<<<<<<< HEAD
    update?: ProductUpdateWithWhereUniqueWithoutContact_phoneInput | ProductUpdateWithWhereUniqueWithoutContact_phoneInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutContact_phoneInput | ProductUpdateManyWithWhereWithoutContact_phoneInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutContact_phoneNestedInput = {
    create?: XOR<ProductCreateWithoutContact_phoneInput, ProductUncheckedCreateWithoutContact_phoneInput> | ProductCreateWithoutContact_phoneInput[] | ProductUncheckedCreateWithoutContact_phoneInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutContact_phoneInput | ProductCreateOrConnectWithoutContact_phoneInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutContact_phoneInput | ProductUpsertWithWhereUniqueWithoutContact_phoneInput[]
    createMany?: ProductCreateManyContact_phoneInputEnvelope
=======
    update?: ProductUpdateWithWhereUniqueWithoutContactPhoneInput | ProductUpdateWithWhereUniqueWithoutContactPhoneInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutContactPhoneInput | ProductUpdateManyWithWhereWithoutContactPhoneInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutContactPhoneNestedInput = {
    create?: XOR<ProductCreateWithoutContactPhoneInput, ProductUncheckedCreateWithoutContactPhoneInput> | ProductCreateWithoutContactPhoneInput[] | ProductUncheckedCreateWithoutContactPhoneInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutContactPhoneInput | ProductCreateOrConnectWithoutContactPhoneInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutContactPhoneInput | ProductUpsertWithWhereUniqueWithoutContactPhoneInput[]
    createMany?: ProductCreateManyContactPhoneInputEnvelope
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
<<<<<<< HEAD
    update?: ProductUpdateWithWhereUniqueWithoutContact_phoneInput | ProductUpdateWithWhereUniqueWithoutContact_phoneInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutContact_phoneInput | ProductUpdateManyWithWhereWithoutContact_phoneInput[]
=======
    update?: ProductUpdateWithWhereUniqueWithoutContactPhoneInput | ProductUpdateWithWhereUniqueWithoutContactPhoneInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutContactPhoneInput | ProductUpdateManyWithWhereWithoutContactPhoneInput[]
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutEmailsInput = {
    create?: XOR<UserCreateWithoutEmailsInput, UserUncheckedCreateWithoutEmailsInput>
    connectOrCreate?: UserCreateOrConnectWithoutEmailsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutEmailsNestedInput = {
    create?: XOR<UserCreateWithoutEmailsInput, UserUncheckedCreateWithoutEmailsInput>
    connectOrCreate?: UserCreateOrConnectWithoutEmailsInput
    upsert?: UserUpsertWithoutEmailsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEmailsInput, UserUpdateWithoutEmailsInput>, UserUncheckedUpdateWithoutEmailsInput>
  }

  export type UserCreateNestedOneWithoutAddressesInput = {
    create?: XOR<UserCreateWithoutAddressesInput, UserUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAddressesInput
    connect?: UserWhereUniqueInput
  }

  export type ProductCreateNestedManyWithoutAddressInput = {
    create?: XOR<ProductCreateWithoutAddressInput, ProductUncheckedCreateWithoutAddressInput> | ProductCreateWithoutAddressInput[] | ProductUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutAddressInput | ProductCreateOrConnectWithoutAddressInput[]
    createMany?: ProductCreateManyAddressInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutAddressInput = {
    create?: XOR<ProductCreateWithoutAddressInput, ProductUncheckedCreateWithoutAddressInput> | ProductCreateWithoutAddressInput[] | ProductUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutAddressInput | ProductCreateOrConnectWithoutAddressInput[]
    createMany?: ProductCreateManyAddressInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type UserUpdateOneRequiredWithoutAddressesNestedInput = {
    create?: XOR<UserCreateWithoutAddressesInput, UserUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAddressesInput
    upsert?: UserUpsertWithoutAddressesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAddressesInput, UserUpdateWithoutAddressesInput>, UserUncheckedUpdateWithoutAddressesInput>
  }

  export type ProductUpdateManyWithoutAddressNestedInput = {
    create?: XOR<ProductCreateWithoutAddressInput, ProductUncheckedCreateWithoutAddressInput> | ProductCreateWithoutAddressInput[] | ProductUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutAddressInput | ProductCreateOrConnectWithoutAddressInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutAddressInput | ProductUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: ProductCreateManyAddressInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutAddressInput | ProductUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutAddressInput | ProductUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutAddressNestedInput = {
    create?: XOR<ProductCreateWithoutAddressInput, ProductUncheckedCreateWithoutAddressInput> | ProductCreateWithoutAddressInput[] | ProductUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutAddressInput | ProductCreateOrConnectWithoutAddressInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutAddressInput | ProductUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: ProductCreateManyAddressInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutAddressInput | ProductUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutAddressInput | ProductUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type UserCreateNestedManyWithoutLanguageInput = {
    create?: XOR<UserCreateWithoutLanguageInput, UserUncheckedCreateWithoutLanguageInput> | UserCreateWithoutLanguageInput[] | UserUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: UserCreateOrConnectWithoutLanguageInput | UserCreateOrConnectWithoutLanguageInput[]
    createMany?: UserCreateManyLanguageInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type AdminCreateNestedManyWithoutLanguageInput = {
    create?: XOR<AdminCreateWithoutLanguageInput, AdminUncheckedCreateWithoutLanguageInput> | AdminCreateWithoutLanguageInput[] | AdminUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: AdminCreateOrConnectWithoutLanguageInput | AdminCreateOrConnectWithoutLanguageInput[]
    createMany?: AdminCreateManyLanguageInputEnvelope
    connect?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutLanguageInput = {
    create?: XOR<UserCreateWithoutLanguageInput, UserUncheckedCreateWithoutLanguageInput> | UserCreateWithoutLanguageInput[] | UserUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: UserCreateOrConnectWithoutLanguageInput | UserCreateOrConnectWithoutLanguageInput[]
    createMany?: UserCreateManyLanguageInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type AdminUncheckedCreateNestedManyWithoutLanguageInput = {
    create?: XOR<AdminCreateWithoutLanguageInput, AdminUncheckedCreateWithoutLanguageInput> | AdminCreateWithoutLanguageInput[] | AdminUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: AdminCreateOrConnectWithoutLanguageInput | AdminCreateOrConnectWithoutLanguageInput[]
    createMany?: AdminCreateManyLanguageInputEnvelope
    connect?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
  }

  export type UserUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<UserCreateWithoutLanguageInput, UserUncheckedCreateWithoutLanguageInput> | UserCreateWithoutLanguageInput[] | UserUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: UserCreateOrConnectWithoutLanguageInput | UserCreateOrConnectWithoutLanguageInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutLanguageInput | UserUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: UserCreateManyLanguageInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutLanguageInput | UserUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: UserUpdateManyWithWhereWithoutLanguageInput | UserUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type AdminUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<AdminCreateWithoutLanguageInput, AdminUncheckedCreateWithoutLanguageInput> | AdminCreateWithoutLanguageInput[] | AdminUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: AdminCreateOrConnectWithoutLanguageInput | AdminCreateOrConnectWithoutLanguageInput[]
    upsert?: AdminUpsertWithWhereUniqueWithoutLanguageInput | AdminUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: AdminCreateManyLanguageInputEnvelope
    set?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    disconnect?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    delete?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    connect?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    update?: AdminUpdateWithWhereUniqueWithoutLanguageInput | AdminUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: AdminUpdateManyWithWhereWithoutLanguageInput | AdminUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: AdminScalarWhereInput | AdminScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<UserCreateWithoutLanguageInput, UserUncheckedCreateWithoutLanguageInput> | UserCreateWithoutLanguageInput[] | UserUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: UserCreateOrConnectWithoutLanguageInput | UserCreateOrConnectWithoutLanguageInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutLanguageInput | UserUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: UserCreateManyLanguageInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutLanguageInput | UserUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: UserUpdateManyWithWhereWithoutLanguageInput | UserUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type AdminUncheckedUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<AdminCreateWithoutLanguageInput, AdminUncheckedCreateWithoutLanguageInput> | AdminCreateWithoutLanguageInput[] | AdminUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: AdminCreateOrConnectWithoutLanguageInput | AdminCreateOrConnectWithoutLanguageInput[]
    upsert?: AdminUpsertWithWhereUniqueWithoutLanguageInput | AdminUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: AdminCreateManyLanguageInputEnvelope
    set?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    disconnect?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    delete?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    connect?: AdminWhereUniqueInput | AdminWhereUniqueInput[]
    update?: AdminUpdateWithWhereUniqueWithoutLanguageInput | AdminUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: AdminUpdateManyWithWhereWithoutLanguageInput | AdminUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: AdminScalarWhereInput | AdminScalarWhereInput[]
  }

<<<<<<< HEAD
  export type ProductCreateNestedOneWithoutFavourited_byInput = {
    create?: XOR<ProductCreateWithoutFavourited_byInput, ProductUncheckedCreateWithoutFavourited_byInput>
    connectOrCreate?: ProductCreateOrConnectWithoutFavourited_byInput
    connect?: ProductWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFavourite_itemsInput = {
    create?: XOR<UserCreateWithoutFavourite_itemsInput, UserUncheckedCreateWithoutFavourite_itemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavourite_itemsInput
    connect?: UserWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutFavourited_byNestedInput = {
    create?: XOR<ProductCreateWithoutFavourited_byInput, ProductUncheckedCreateWithoutFavourited_byInput>
    connectOrCreate?: ProductCreateOrConnectWithoutFavourited_byInput
    upsert?: ProductUpsertWithoutFavourited_byInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutFavourited_byInput, ProductUpdateWithoutFavourited_byInput>, ProductUncheckedUpdateWithoutFavourited_byInput>
  }

  export type UserUpdateOneRequiredWithoutFavourite_itemsNestedInput = {
    create?: XOR<UserCreateWithoutFavourite_itemsInput, UserUncheckedCreateWithoutFavourite_itemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavourite_itemsInput
    upsert?: UserUpsertWithoutFavourite_itemsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFavourite_itemsInput, UserUpdateWithoutFavourite_itemsInput>, UserUncheckedUpdateWithoutFavourite_itemsInput>
=======
  export type ProductCreateNestedOneWithoutFavouritedByInput = {
    create?: XOR<ProductCreateWithoutFavouritedByInput, ProductUncheckedCreateWithoutFavouritedByInput>
    connectOrCreate?: ProductCreateOrConnectWithoutFavouritedByInput
    connect?: ProductWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFavouriteItemsInput = {
    create?: XOR<UserCreateWithoutFavouriteItemsInput, UserUncheckedCreateWithoutFavouriteItemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavouriteItemsInput
    connect?: UserWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutFavouritedByNestedInput = {
    create?: XOR<ProductCreateWithoutFavouritedByInput, ProductUncheckedCreateWithoutFavouritedByInput>
    connectOrCreate?: ProductCreateOrConnectWithoutFavouritedByInput
    upsert?: ProductUpsertWithoutFavouritedByInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutFavouritedByInput, ProductUpdateWithoutFavouritedByInput>, ProductUncheckedUpdateWithoutFavouritedByInput>
  }

  export type UserUpdateOneRequiredWithoutFavouriteItemsNestedInput = {
    create?: XOR<UserCreateWithoutFavouriteItemsInput, UserUncheckedCreateWithoutFavouriteItemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavouriteItemsInput
    upsert?: UserUpsertWithoutFavouriteItemsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFavouriteItemsInput, UserUpdateWithoutFavouriteItemsInput>, UserUncheckedUpdateWithoutFavouriteItemsInput>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserCreateNestedOneWithoutProductsInput = {
    create?: XOR<UserCreateWithoutProductsInput, UserUncheckedCreateWithoutProductsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductsInput
    connect?: UserWhereUniqueInput
  }

  export type BrandCreateNestedOneWithoutProductsInput = {
    create?: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
    connectOrCreate?: BrandCreateOrConnectWithoutProductsInput
    connect?: BrandWhereUniqueInput
  }

  export type ModelCreateNestedOneWithoutProductsInput = {
    create?: XOR<ModelCreateWithoutProductsInput, ModelUncheckedCreateWithoutProductsInput>
    connectOrCreate?: ModelCreateOrConnectWithoutProductsInput
    connect?: ModelWhereUniqueInput
  }

  export type ColorCreateNestedOneWithoutProductsInput = {
    create?: XOR<ColorCreateWithoutProductsInput, ColorUncheckedCreateWithoutProductsInput>
    connectOrCreate?: ColorCreateOrConnectWithoutProductsInput
    connect?: ColorWhereUniqueInput
  }

  export type CurrencyCreateNestedOneWithoutProductsInput = {
    create?: XOR<CurrencyCreateWithoutProductsInput, CurrencyUncheckedCreateWithoutProductsInput>
    connectOrCreate?: CurrencyCreateOrConnectWithoutProductsInput
    connect?: CurrencyWhereUniqueInput
  }

  export type AddressCreateNestedOneWithoutProductsInput = {
    create?: XOR<AddressCreateWithoutProductsInput, AddressUncheckedCreateWithoutProductsInput>
    connectOrCreate?: AddressCreateOrConnectWithoutProductsInput
    connect?: AddressWhereUniqueInput
  }

  export type PhoneCreateNestedOneWithoutProductsInput = {
    create?: XOR<PhoneCreateWithoutProductsInput, PhoneUncheckedCreateWithoutProductsInput>
    connectOrCreate?: PhoneCreateOrConnectWithoutProductsInput
    connect?: PhoneWhereUniqueInput
  }

<<<<<<< HEAD
  export type AdminCreateNestedOneWithoutProducts_managedInput = {
    create?: XOR<AdminCreateWithoutProducts_managedInput, AdminUncheckedCreateWithoutProducts_managedInput>
    connectOrCreate?: AdminCreateOrConnectWithoutProducts_managedInput
=======
  export type AdminCreateNestedOneWithoutProductsManagedInput = {
    create?: XOR<AdminCreateWithoutProductsManagedInput, AdminUncheckedCreateWithoutProductsManagedInput>
    connectOrCreate?: AdminCreateOrConnectWithoutProductsManagedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    connect?: AdminWhereUniqueInput
  }

  export type ProductImageCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
  }

  export type FavouriteItemCreateNestedManyWithoutProductInput = {
    create?: XOR<FavouriteItemCreateWithoutProductInput, FavouriteItemUncheckedCreateWithoutProductInput> | FavouriteItemCreateWithoutProductInput[] | FavouriteItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: FavouriteItemCreateOrConnectWithoutProductInput | FavouriteItemCreateOrConnectWithoutProductInput[]
    createMany?: FavouriteItemCreateManyProductInputEnvelope
    connect?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
  }

  export type CommentCreateNestedManyWithoutProductInput = {
    create?: XOR<CommentCreateWithoutProductInput, CommentUncheckedCreateWithoutProductInput> | CommentCreateWithoutProductInput[] | CommentUncheckedCreateWithoutProductInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutProductInput | CommentCreateOrConnectWithoutProductInput[]
    createMany?: CommentCreateManyProductInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type ProductImageUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
  }

  export type FavouriteItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<FavouriteItemCreateWithoutProductInput, FavouriteItemUncheckedCreateWithoutProductInput> | FavouriteItemCreateWithoutProductInput[] | FavouriteItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: FavouriteItemCreateOrConnectWithoutProductInput | FavouriteItemCreateOrConnectWithoutProductInput[]
    createMany?: FavouriteItemCreateManyProductInputEnvelope
    connect?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<CommentCreateWithoutProductInput, CommentUncheckedCreateWithoutProductInput> | CommentCreateWithoutProductInput[] | CommentUncheckedCreateWithoutProductInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutProductInput | CommentCreateOrConnectWithoutProductInput[]
    createMany?: CommentCreateManyProductInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<UserCreateWithoutProductsInput, UserUncheckedCreateWithoutProductsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductsInput
    upsert?: UserUpsertWithoutProductsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProductsInput, UserUpdateWithoutProductsInput>, UserUncheckedUpdateWithoutProductsInput>
  }

<<<<<<< HEAD
  export type BrandUpdateOneWithoutProductsNestedInput = {
    create?: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
    connectOrCreate?: BrandCreateOrConnectWithoutProductsInput
    upsert?: BrandUpsertWithoutProductsInput
    disconnect?: BrandWhereInput | boolean
    delete?: BrandWhereInput | boolean
=======
  export type BrandUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
    connectOrCreate?: BrandCreateOrConnectWithoutProductsInput
    upsert?: BrandUpsertWithoutProductsInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    connect?: BrandWhereUniqueInput
    update?: XOR<XOR<BrandUpdateToOneWithWhereWithoutProductsInput, BrandUpdateWithoutProductsInput>, BrandUncheckedUpdateWithoutProductsInput>
  }

<<<<<<< HEAD
  export type ModelUpdateOneWithoutProductsNestedInput = {
    create?: XOR<ModelCreateWithoutProductsInput, ModelUncheckedCreateWithoutProductsInput>
    connectOrCreate?: ModelCreateOrConnectWithoutProductsInput
    upsert?: ModelUpsertWithoutProductsInput
    disconnect?: ModelWhereInput | boolean
    delete?: ModelWhereInput | boolean
=======
  export type ModelUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<ModelCreateWithoutProductsInput, ModelUncheckedCreateWithoutProductsInput>
    connectOrCreate?: ModelCreateOrConnectWithoutProductsInput
    upsert?: ModelUpsertWithoutProductsInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    connect?: ModelWhereUniqueInput
    update?: XOR<XOR<ModelUpdateToOneWithWhereWithoutProductsInput, ModelUpdateWithoutProductsInput>, ModelUncheckedUpdateWithoutProductsInput>
  }

  export type ColorUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<ColorCreateWithoutProductsInput, ColorUncheckedCreateWithoutProductsInput>
    connectOrCreate?: ColorCreateOrConnectWithoutProductsInput
    upsert?: ColorUpsertWithoutProductsInput
    connect?: ColorWhereUniqueInput
    update?: XOR<XOR<ColorUpdateToOneWithWhereWithoutProductsInput, ColorUpdateWithoutProductsInput>, ColorUncheckedUpdateWithoutProductsInput>
  }

  export type CurrencyUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<CurrencyCreateWithoutProductsInput, CurrencyUncheckedCreateWithoutProductsInput>
    connectOrCreate?: CurrencyCreateOrConnectWithoutProductsInput
    upsert?: CurrencyUpsertWithoutProductsInput
    connect?: CurrencyWhereUniqueInput
    update?: XOR<XOR<CurrencyUpdateToOneWithWhereWithoutProductsInput, CurrencyUpdateWithoutProductsInput>, CurrencyUncheckedUpdateWithoutProductsInput>
  }

  export type AddressUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<AddressCreateWithoutProductsInput, AddressUncheckedCreateWithoutProductsInput>
    connectOrCreate?: AddressCreateOrConnectWithoutProductsInput
    upsert?: AddressUpsertWithoutProductsInput
    connect?: AddressWhereUniqueInput
    update?: XOR<XOR<AddressUpdateToOneWithWhereWithoutProductsInput, AddressUpdateWithoutProductsInput>, AddressUncheckedUpdateWithoutProductsInput>
  }

  export type PhoneUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<PhoneCreateWithoutProductsInput, PhoneUncheckedCreateWithoutProductsInput>
    connectOrCreate?: PhoneCreateOrConnectWithoutProductsInput
    upsert?: PhoneUpsertWithoutProductsInput
    connect?: PhoneWhereUniqueInput
    update?: XOR<XOR<PhoneUpdateToOneWithWhereWithoutProductsInput, PhoneUpdateWithoutProductsInput>, PhoneUncheckedUpdateWithoutProductsInput>
  }

<<<<<<< HEAD
  export type AdminUpdateOneWithoutProducts_managedNestedInput = {
    create?: XOR<AdminCreateWithoutProducts_managedInput, AdminUncheckedCreateWithoutProducts_managedInput>
    connectOrCreate?: AdminCreateOrConnectWithoutProducts_managedInput
    upsert?: AdminUpsertWithoutProducts_managedInput
    disconnect?: AdminWhereInput | boolean
    delete?: AdminWhereInput | boolean
    connect?: AdminWhereUniqueInput
    update?: XOR<XOR<AdminUpdateToOneWithWhereWithoutProducts_managedInput, AdminUpdateWithoutProducts_managedInput>, AdminUncheckedUpdateWithoutProducts_managedInput>
=======
  export type AdminUpdateOneRequiredWithoutProductsManagedNestedInput = {
    create?: XOR<AdminCreateWithoutProductsManagedInput, AdminUncheckedCreateWithoutProductsManagedInput>
    connectOrCreate?: AdminCreateOrConnectWithoutProductsManagedInput
    upsert?: AdminUpsertWithoutProductsManagedInput
    connect?: AdminWhereUniqueInput
    update?: XOR<XOR<AdminUpdateToOneWithWhereWithoutProductsManagedInput, AdminUpdateWithoutProductsManagedInput>, AdminUncheckedUpdateWithoutProductsManagedInput>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductImageUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    upsert?: ProductImageUpsertWithWhereUniqueWithoutProductInput | ProductImageUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    set?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    disconnect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    delete?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    update?: ProductImageUpdateWithWhereUniqueWithoutProductInput | ProductImageUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductImageUpdateManyWithWhereWithoutProductInput | ProductImageUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
  }

  export type FavouriteItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<FavouriteItemCreateWithoutProductInput, FavouriteItemUncheckedCreateWithoutProductInput> | FavouriteItemCreateWithoutProductInput[] | FavouriteItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: FavouriteItemCreateOrConnectWithoutProductInput | FavouriteItemCreateOrConnectWithoutProductInput[]
    upsert?: FavouriteItemUpsertWithWhereUniqueWithoutProductInput | FavouriteItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: FavouriteItemCreateManyProductInputEnvelope
    set?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    disconnect?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    delete?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    connect?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    update?: FavouriteItemUpdateWithWhereUniqueWithoutProductInput | FavouriteItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: FavouriteItemUpdateManyWithWhereWithoutProductInput | FavouriteItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: FavouriteItemScalarWhereInput | FavouriteItemScalarWhereInput[]
  }

  export type CommentUpdateManyWithoutProductNestedInput = {
    create?: XOR<CommentCreateWithoutProductInput, CommentUncheckedCreateWithoutProductInput> | CommentCreateWithoutProductInput[] | CommentUncheckedCreateWithoutProductInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutProductInput | CommentCreateOrConnectWithoutProductInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutProductInput | CommentUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: CommentCreateManyProductInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutProductInput | CommentUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutProductInput | CommentUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type ProductImageUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    upsert?: ProductImageUpsertWithWhereUniqueWithoutProductInput | ProductImageUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    set?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    disconnect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    delete?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    update?: ProductImageUpdateWithWhereUniqueWithoutProductInput | ProductImageUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductImageUpdateManyWithWhereWithoutProductInput | ProductImageUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
  }

  export type FavouriteItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<FavouriteItemCreateWithoutProductInput, FavouriteItemUncheckedCreateWithoutProductInput> | FavouriteItemCreateWithoutProductInput[] | FavouriteItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: FavouriteItemCreateOrConnectWithoutProductInput | FavouriteItemCreateOrConnectWithoutProductInput[]
    upsert?: FavouriteItemUpsertWithWhereUniqueWithoutProductInput | FavouriteItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: FavouriteItemCreateManyProductInputEnvelope
    set?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    disconnect?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    delete?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    connect?: FavouriteItemWhereUniqueInput | FavouriteItemWhereUniqueInput[]
    update?: FavouriteItemUpdateWithWhereUniqueWithoutProductInput | FavouriteItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: FavouriteItemUpdateManyWithWhereWithoutProductInput | FavouriteItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: FavouriteItemScalarWhereInput | FavouriteItemScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<CommentCreateWithoutProductInput, CommentUncheckedCreateWithoutProductInput> | CommentCreateWithoutProductInput[] | CommentUncheckedCreateWithoutProductInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutProductInput | CommentCreateOrConnectWithoutProductInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutProductInput | CommentUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: CommentCreateManyProductInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutProductInput | CommentUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutProductInput | CommentUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutImagesInput = {
    create?: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutImagesInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutImagesNestedInput = {
    create?: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutImagesInput
    upsert?: ProductUpsertWithoutImagesInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutImagesInput, ProductUpdateWithoutImagesInput>, ProductUncheckedUpdateWithoutImagesInput>
  }

  export type ModelCreateNestedManyWithoutBrandInput = {
    create?: XOR<ModelCreateWithoutBrandInput, ModelUncheckedCreateWithoutBrandInput> | ModelCreateWithoutBrandInput[] | ModelUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ModelCreateOrConnectWithoutBrandInput | ModelCreateOrConnectWithoutBrandInput[]
    createMany?: ModelCreateManyBrandInputEnvelope
    connect?: ModelWhereUniqueInput | ModelWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutBrandInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ModelUncheckedCreateNestedManyWithoutBrandInput = {
    create?: XOR<ModelCreateWithoutBrandInput, ModelUncheckedCreateWithoutBrandInput> | ModelCreateWithoutBrandInput[] | ModelUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ModelCreateOrConnectWithoutBrandInput | ModelCreateOrConnectWithoutBrandInput[]
    createMany?: ModelCreateManyBrandInputEnvelope
    connect?: ModelWhereUniqueInput | ModelWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutBrandInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ModelUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ModelCreateWithoutBrandInput, ModelUncheckedCreateWithoutBrandInput> | ModelCreateWithoutBrandInput[] | ModelUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ModelCreateOrConnectWithoutBrandInput | ModelCreateOrConnectWithoutBrandInput[]
    upsert?: ModelUpsertWithWhereUniqueWithoutBrandInput | ModelUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ModelCreateManyBrandInputEnvelope
    set?: ModelWhereUniqueInput | ModelWhereUniqueInput[]
    disconnect?: ModelWhereUniqueInput | ModelWhereUniqueInput[]
    delete?: ModelWhereUniqueInput | ModelWhereUniqueInput[]
    connect?: ModelWhereUniqueInput | ModelWhereUniqueInput[]
    update?: ModelUpdateWithWhereUniqueWithoutBrandInput | ModelUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ModelUpdateManyWithWhereWithoutBrandInput | ModelUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ModelScalarWhereInput | ModelScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBrandInput | ProductUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBrandInput | ProductUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBrandInput | ProductUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ModelUncheckedUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ModelCreateWithoutBrandInput, ModelUncheckedCreateWithoutBrandInput> | ModelCreateWithoutBrandInput[] | ModelUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ModelCreateOrConnectWithoutBrandInput | ModelCreateOrConnectWithoutBrandInput[]
    upsert?: ModelUpsertWithWhereUniqueWithoutBrandInput | ModelUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ModelCreateManyBrandInputEnvelope
    set?: ModelWhereUniqueInput | ModelWhereUniqueInput[]
    disconnect?: ModelWhereUniqueInput | ModelWhereUniqueInput[]
    delete?: ModelWhereUniqueInput | ModelWhereUniqueInput[]
    connect?: ModelWhereUniqueInput | ModelWhereUniqueInput[]
    update?: ModelUpdateWithWhereUniqueWithoutBrandInput | ModelUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ModelUpdateManyWithWhereWithoutBrandInput | ModelUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ModelScalarWhereInput | ModelScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBrandInput | ProductUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBrandInput | ProductUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBrandInput | ProductUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type BrandCreateNestedOneWithoutModelsInput = {
    create?: XOR<BrandCreateWithoutModelsInput, BrandUncheckedCreateWithoutModelsInput>
    connectOrCreate?: BrandCreateOrConnectWithoutModelsInput
    connect?: BrandWhereUniqueInput
  }

  export type ProductCreateNestedManyWithoutModelInput = {
    create?: XOR<ProductCreateWithoutModelInput, ProductUncheckedCreateWithoutModelInput> | ProductCreateWithoutModelInput[] | ProductUncheckedCreateWithoutModelInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutModelInput | ProductCreateOrConnectWithoutModelInput[]
    createMany?: ProductCreateManyModelInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutModelInput = {
    create?: XOR<ProductCreateWithoutModelInput, ProductUncheckedCreateWithoutModelInput> | ProductCreateWithoutModelInput[] | ProductUncheckedCreateWithoutModelInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutModelInput | ProductCreateOrConnectWithoutModelInput[]
    createMany?: ProductCreateManyModelInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type BrandUpdateOneRequiredWithoutModelsNestedInput = {
    create?: XOR<BrandCreateWithoutModelsInput, BrandUncheckedCreateWithoutModelsInput>
    connectOrCreate?: BrandCreateOrConnectWithoutModelsInput
    upsert?: BrandUpsertWithoutModelsInput
    connect?: BrandWhereUniqueInput
    update?: XOR<XOR<BrandUpdateToOneWithWhereWithoutModelsInput, BrandUpdateWithoutModelsInput>, BrandUncheckedUpdateWithoutModelsInput>
  }

  export type ProductUpdateManyWithoutModelNestedInput = {
    create?: XOR<ProductCreateWithoutModelInput, ProductUncheckedCreateWithoutModelInput> | ProductCreateWithoutModelInput[] | ProductUncheckedCreateWithoutModelInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutModelInput | ProductCreateOrConnectWithoutModelInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutModelInput | ProductUpsertWithWhereUniqueWithoutModelInput[]
    createMany?: ProductCreateManyModelInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutModelInput | ProductUpdateWithWhereUniqueWithoutModelInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutModelInput | ProductUpdateManyWithWhereWithoutModelInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutModelNestedInput = {
    create?: XOR<ProductCreateWithoutModelInput, ProductUncheckedCreateWithoutModelInput> | ProductCreateWithoutModelInput[] | ProductUncheckedCreateWithoutModelInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutModelInput | ProductCreateOrConnectWithoutModelInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutModelInput | ProductUpsertWithWhereUniqueWithoutModelInput[]
    createMany?: ProductCreateManyModelInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutModelInput | ProductUpdateWithWhereUniqueWithoutModelInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutModelInput | ProductUpdateManyWithWhereWithoutModelInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductCreateNestedManyWithoutColorInput = {
    create?: XOR<ProductCreateWithoutColorInput, ProductUncheckedCreateWithoutColorInput> | ProductCreateWithoutColorInput[] | ProductUncheckedCreateWithoutColorInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutColorInput | ProductCreateOrConnectWithoutColorInput[]
    createMany?: ProductCreateManyColorInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutColorInput = {
    create?: XOR<ProductCreateWithoutColorInput, ProductUncheckedCreateWithoutColorInput> | ProductCreateWithoutColorInput[] | ProductUncheckedCreateWithoutColorInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutColorInput | ProductCreateOrConnectWithoutColorInput[]
    createMany?: ProductCreateManyColorInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUpdateManyWithoutColorNestedInput = {
    create?: XOR<ProductCreateWithoutColorInput, ProductUncheckedCreateWithoutColorInput> | ProductCreateWithoutColorInput[] | ProductUncheckedCreateWithoutColorInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutColorInput | ProductCreateOrConnectWithoutColorInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutColorInput | ProductUpsertWithWhereUniqueWithoutColorInput[]
    createMany?: ProductCreateManyColorInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutColorInput | ProductUpdateWithWhereUniqueWithoutColorInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutColorInput | ProductUpdateManyWithWhereWithoutColorInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutColorNestedInput = {
    create?: XOR<ProductCreateWithoutColorInput, ProductUncheckedCreateWithoutColorInput> | ProductCreateWithoutColorInput[] | ProductUncheckedCreateWithoutColorInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutColorInput | ProductCreateOrConnectWithoutColorInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutColorInput | ProductUpsertWithWhereUniqueWithoutColorInput[]
    createMany?: ProductCreateManyColorInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutColorInput | ProductUpdateWithWhereUniqueWithoutColorInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutColorInput | ProductUpdateManyWithWhereWithoutColorInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

<<<<<<< HEAD
  export type UserCreateNestedManyWithoutCurrencyInput = {
    create?: XOR<UserCreateWithoutCurrencyInput, UserUncheckedCreateWithoutCurrencyInput> | UserCreateWithoutCurrencyInput[] | UserUncheckedCreateWithoutCurrencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCurrencyInput | UserCreateOrConnectWithoutCurrencyInput[]
    createMany?: UserCreateManyCurrencyInputEnvelope
=======
  export type UserCreateNestedManyWithoutPreferredCurrencyInput = {
    create?: XOR<UserCreateWithoutPreferredCurrencyInput, UserUncheckedCreateWithoutPreferredCurrencyInput> | UserCreateWithoutPreferredCurrencyInput[] | UserUncheckedCreateWithoutPreferredCurrencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPreferredCurrencyInput | UserCreateOrConnectWithoutPreferredCurrencyInput[]
    createMany?: UserCreateManyPreferredCurrencyInputEnvelope
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutCurrencyInput = {
    create?: XOR<ProductCreateWithoutCurrencyInput, ProductUncheckedCreateWithoutCurrencyInput> | ProductCreateWithoutCurrencyInput[] | ProductUncheckedCreateWithoutCurrencyInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCurrencyInput | ProductCreateOrConnectWithoutCurrencyInput[]
    createMany?: ProductCreateManyCurrencyInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

<<<<<<< HEAD
  export type UserUncheckedCreateNestedManyWithoutCurrencyInput = {
    create?: XOR<UserCreateWithoutCurrencyInput, UserUncheckedCreateWithoutCurrencyInput> | UserCreateWithoutCurrencyInput[] | UserUncheckedCreateWithoutCurrencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCurrencyInput | UserCreateOrConnectWithoutCurrencyInput[]
    createMany?: UserCreateManyCurrencyInputEnvelope
=======
  export type UserUncheckedCreateNestedManyWithoutPreferredCurrencyInput = {
    create?: XOR<UserCreateWithoutPreferredCurrencyInput, UserUncheckedCreateWithoutPreferredCurrencyInput> | UserCreateWithoutPreferredCurrencyInput[] | UserUncheckedCreateWithoutPreferredCurrencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPreferredCurrencyInput | UserCreateOrConnectWithoutPreferredCurrencyInput[]
    createMany?: UserCreateManyPreferredCurrencyInputEnvelope
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutCurrencyInput = {
    create?: XOR<ProductCreateWithoutCurrencyInput, ProductUncheckedCreateWithoutCurrencyInput> | ProductCreateWithoutCurrencyInput[] | ProductUncheckedCreateWithoutCurrencyInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCurrencyInput | ProductCreateOrConnectWithoutCurrencyInput[]
    createMany?: ProductCreateManyCurrencyInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

<<<<<<< HEAD
  export type UserUpdateManyWithoutCurrencyNestedInput = {
    create?: XOR<UserCreateWithoutCurrencyInput, UserUncheckedCreateWithoutCurrencyInput> | UserCreateWithoutCurrencyInput[] | UserUncheckedCreateWithoutCurrencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCurrencyInput | UserCreateOrConnectWithoutCurrencyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCurrencyInput | UserUpsertWithWhereUniqueWithoutCurrencyInput[]
    createMany?: UserCreateManyCurrencyInputEnvelope
=======
  export type UserUpdateManyWithoutPreferredCurrencyNestedInput = {
    create?: XOR<UserCreateWithoutPreferredCurrencyInput, UserUncheckedCreateWithoutPreferredCurrencyInput> | UserCreateWithoutPreferredCurrencyInput[] | UserUncheckedCreateWithoutPreferredCurrencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPreferredCurrencyInput | UserCreateOrConnectWithoutPreferredCurrencyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutPreferredCurrencyInput | UserUpsertWithWhereUniqueWithoutPreferredCurrencyInput[]
    createMany?: UserCreateManyPreferredCurrencyInputEnvelope
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
<<<<<<< HEAD
    update?: UserUpdateWithWhereUniqueWithoutCurrencyInput | UserUpdateWithWhereUniqueWithoutCurrencyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCurrencyInput | UserUpdateManyWithWhereWithoutCurrencyInput[]
=======
    update?: UserUpdateWithWhereUniqueWithoutPreferredCurrencyInput | UserUpdateWithWhereUniqueWithoutPreferredCurrencyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutPreferredCurrencyInput | UserUpdateManyWithWhereWithoutPreferredCurrencyInput[]
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutCurrencyNestedInput = {
    create?: XOR<ProductCreateWithoutCurrencyInput, ProductUncheckedCreateWithoutCurrencyInput> | ProductCreateWithoutCurrencyInput[] | ProductUncheckedCreateWithoutCurrencyInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCurrencyInput | ProductCreateOrConnectWithoutCurrencyInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCurrencyInput | ProductUpsertWithWhereUniqueWithoutCurrencyInput[]
    createMany?: ProductCreateManyCurrencyInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCurrencyInput | ProductUpdateWithWhereUniqueWithoutCurrencyInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCurrencyInput | ProductUpdateManyWithWhereWithoutCurrencyInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

<<<<<<< HEAD
  export type UserUncheckedUpdateManyWithoutCurrencyNestedInput = {
    create?: XOR<UserCreateWithoutCurrencyInput, UserUncheckedCreateWithoutCurrencyInput> | UserCreateWithoutCurrencyInput[] | UserUncheckedCreateWithoutCurrencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCurrencyInput | UserCreateOrConnectWithoutCurrencyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCurrencyInput | UserUpsertWithWhereUniqueWithoutCurrencyInput[]
    createMany?: UserCreateManyCurrencyInputEnvelope
=======
  export type UserUncheckedUpdateManyWithoutPreferredCurrencyNestedInput = {
    create?: XOR<UserCreateWithoutPreferredCurrencyInput, UserUncheckedCreateWithoutPreferredCurrencyInput> | UserCreateWithoutPreferredCurrencyInput[] | UserUncheckedCreateWithoutPreferredCurrencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPreferredCurrencyInput | UserCreateOrConnectWithoutPreferredCurrencyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutPreferredCurrencyInput | UserUpsertWithWhereUniqueWithoutPreferredCurrencyInput[]
    createMany?: UserCreateManyPreferredCurrencyInputEnvelope
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
<<<<<<< HEAD
    update?: UserUpdateWithWhereUniqueWithoutCurrencyInput | UserUpdateWithWhereUniqueWithoutCurrencyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCurrencyInput | UserUpdateManyWithWhereWithoutCurrencyInput[]
=======
    update?: UserUpdateWithWhereUniqueWithoutPreferredCurrencyInput | UserUpdateWithWhereUniqueWithoutPreferredCurrencyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutPreferredCurrencyInput | UserUpdateManyWithWhereWithoutPreferredCurrencyInput[]
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutCurrencyNestedInput = {
    create?: XOR<ProductCreateWithoutCurrencyInput, ProductUncheckedCreateWithoutCurrencyInput> | ProductCreateWithoutCurrencyInput[] | ProductUncheckedCreateWithoutCurrencyInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCurrencyInput | ProductCreateOrConnectWithoutCurrencyInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCurrencyInput | ProductUpsertWithWhereUniqueWithoutCurrencyInput[]
    createMany?: ProductCreateManyCurrencyInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCurrencyInput | ProductUpdateWithWhereUniqueWithoutCurrencyInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCurrencyInput | ProductUpdateManyWithWhereWithoutCurrencyInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type LanguageCreateNestedOneWithoutAdminsInput = {
    create?: XOR<LanguageCreateWithoutAdminsInput, LanguageUncheckedCreateWithoutAdminsInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutAdminsInput
    connect?: LanguageWhereUniqueInput
  }

  export type BlockCreateNestedManyWithoutAdminInput = {
    create?: XOR<BlockCreateWithoutAdminInput, BlockUncheckedCreateWithoutAdminInput> | BlockCreateWithoutAdminInput[] | BlockUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: BlockCreateOrConnectWithoutAdminInput | BlockCreateOrConnectWithoutAdminInput[]
    createMany?: BlockCreateManyAdminInputEnvelope
    connect?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutAdminInput = {
    create?: XOR<ProductCreateWithoutAdminInput, ProductUncheckedCreateWithoutAdminInput> | ProductCreateWithoutAdminInput[] | ProductUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutAdminInput | ProductCreateOrConnectWithoutAdminInput[]
    createMany?: ProductCreateManyAdminInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type BlockUncheckedCreateNestedManyWithoutAdminInput = {
    create?: XOR<BlockCreateWithoutAdminInput, BlockUncheckedCreateWithoutAdminInput> | BlockCreateWithoutAdminInput[] | BlockUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: BlockCreateOrConnectWithoutAdminInput | BlockCreateOrConnectWithoutAdminInput[]
    createMany?: BlockCreateManyAdminInputEnvelope
    connect?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutAdminInput = {
    create?: XOR<ProductCreateWithoutAdminInput, ProductUncheckedCreateWithoutAdminInput> | ProductCreateWithoutAdminInput[] | ProductUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutAdminInput | ProductCreateOrConnectWithoutAdminInput[]
    createMany?: ProductCreateManyAdminInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type LanguageUpdateOneRequiredWithoutAdminsNestedInput = {
    create?: XOR<LanguageCreateWithoutAdminsInput, LanguageUncheckedCreateWithoutAdminsInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutAdminsInput
    upsert?: LanguageUpsertWithoutAdminsInput
    connect?: LanguageWhereUniqueInput
    update?: XOR<XOR<LanguageUpdateToOneWithWhereWithoutAdminsInput, LanguageUpdateWithoutAdminsInput>, LanguageUncheckedUpdateWithoutAdminsInput>
  }

  export type BlockUpdateManyWithoutAdminNestedInput = {
    create?: XOR<BlockCreateWithoutAdminInput, BlockUncheckedCreateWithoutAdminInput> | BlockCreateWithoutAdminInput[] | BlockUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: BlockCreateOrConnectWithoutAdminInput | BlockCreateOrConnectWithoutAdminInput[]
    upsert?: BlockUpsertWithWhereUniqueWithoutAdminInput | BlockUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: BlockCreateManyAdminInputEnvelope
    set?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    disconnect?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    delete?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    connect?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    update?: BlockUpdateWithWhereUniqueWithoutAdminInput | BlockUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: BlockUpdateManyWithWhereWithoutAdminInput | BlockUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: BlockScalarWhereInput | BlockScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutAdminNestedInput = {
    create?: XOR<ProductCreateWithoutAdminInput, ProductUncheckedCreateWithoutAdminInput> | ProductCreateWithoutAdminInput[] | ProductUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutAdminInput | ProductCreateOrConnectWithoutAdminInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutAdminInput | ProductUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: ProductCreateManyAdminInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutAdminInput | ProductUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutAdminInput | ProductUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type BlockUncheckedUpdateManyWithoutAdminNestedInput = {
    create?: XOR<BlockCreateWithoutAdminInput, BlockUncheckedCreateWithoutAdminInput> | BlockCreateWithoutAdminInput[] | BlockUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: BlockCreateOrConnectWithoutAdminInput | BlockCreateOrConnectWithoutAdminInput[]
    upsert?: BlockUpsertWithWhereUniqueWithoutAdminInput | BlockUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: BlockCreateManyAdminInputEnvelope
    set?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    disconnect?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    delete?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    connect?: BlockWhereUniqueInput | BlockWhereUniqueInput[]
    update?: BlockUpdateWithWhereUniqueWithoutAdminInput | BlockUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: BlockUpdateManyWithWhereWithoutAdminInput | BlockUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: BlockScalarWhereInput | BlockScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutAdminNestedInput = {
    create?: XOR<ProductCreateWithoutAdminInput, ProductUncheckedCreateWithoutAdminInput> | ProductCreateWithoutAdminInput[] | ProductUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutAdminInput | ProductCreateOrConnectWithoutAdminInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutAdminInput | ProductUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: ProductCreateManyAdminInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutAdminInput | ProductUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutAdminInput | ProductUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutBlocksInput = {
    create?: XOR<UserCreateWithoutBlocksInput, UserUncheckedCreateWithoutBlocksInput>
    connectOrCreate?: UserCreateOrConnectWithoutBlocksInput
    connect?: UserWhereUniqueInput
  }

<<<<<<< HEAD
  export type AdminCreateNestedOneWithoutBlocks_issuedInput = {
    create?: XOR<AdminCreateWithoutBlocks_issuedInput, AdminUncheckedCreateWithoutBlocks_issuedInput>
    connectOrCreate?: AdminCreateOrConnectWithoutBlocks_issuedInput
=======
  export type AdminCreateNestedOneWithoutBlocksIssuedInput = {
    create?: XOR<AdminCreateWithoutBlocksIssuedInput, AdminUncheckedCreateWithoutBlocksIssuedInput>
    connectOrCreate?: AdminCreateOrConnectWithoutBlocksIssuedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    connect?: AdminWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutBlocksNestedInput = {
    create?: XOR<UserCreateWithoutBlocksInput, UserUncheckedCreateWithoutBlocksInput>
    connectOrCreate?: UserCreateOrConnectWithoutBlocksInput
    upsert?: UserUpsertWithoutBlocksInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBlocksInput, UserUpdateWithoutBlocksInput>, UserUncheckedUpdateWithoutBlocksInput>
  }

<<<<<<< HEAD
  export type AdminUpdateOneRequiredWithoutBlocks_issuedNestedInput = {
    create?: XOR<AdminCreateWithoutBlocks_issuedInput, AdminUncheckedCreateWithoutBlocks_issuedInput>
    connectOrCreate?: AdminCreateOrConnectWithoutBlocks_issuedInput
    upsert?: AdminUpsertWithoutBlocks_issuedInput
    connect?: AdminWhereUniqueInput
    update?: XOR<XOR<AdminUpdateToOneWithWhereWithoutBlocks_issuedInput, AdminUpdateWithoutBlocks_issuedInput>, AdminUncheckedUpdateWithoutBlocks_issuedInput>
=======
  export type AdminUpdateOneRequiredWithoutBlocksIssuedNestedInput = {
    create?: XOR<AdminCreateWithoutBlocksIssuedInput, AdminUncheckedCreateWithoutBlocksIssuedInput>
    connectOrCreate?: AdminCreateOrConnectWithoutBlocksIssuedInput
    upsert?: AdminUpsertWithoutBlocksIssuedInput
    connect?: AdminWhereUniqueInput
    update?: XOR<XOR<AdminUpdateToOneWithWhereWithoutBlocksIssuedInput, AdminUpdateWithoutBlocksIssuedInput>, AdminUncheckedUpdateWithoutBlocksIssuedInput>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentsInput
    connect?: UserWhereUniqueInput
  }

  export type PaymentMethodCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<PaymentMethodCreateWithoutPaymentsInput, PaymentMethodUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: PaymentMethodCreateOrConnectWithoutPaymentsInput
    connect?: PaymentMethodWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentsInput
    upsert?: UserUpsertWithoutPaymentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPaymentsInput, UserUpdateWithoutPaymentsInput>, UserUncheckedUpdateWithoutPaymentsInput>
  }

  export type PaymentMethodUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<PaymentMethodCreateWithoutPaymentsInput, PaymentMethodUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: PaymentMethodCreateOrConnectWithoutPaymentsInput
    upsert?: PaymentMethodUpsertWithoutPaymentsInput
    connect?: PaymentMethodWhereUniqueInput
    update?: XOR<XOR<PaymentMethodUpdateToOneWithWhereWithoutPaymentsInput, PaymentMethodUpdateWithoutPaymentsInput>, PaymentMethodUncheckedUpdateWithoutPaymentsInput>
  }

  export type UserCreateNestedOneWithoutCommentsInput = {
    create?: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentsInput
    connect?: UserWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutCommentsInput = {
    create?: XOR<ProductCreateWithoutCommentsInput, ProductUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutCommentsInput
    connect?: ProductWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutCommentsNestedInput = {
    create?: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentsInput
    upsert?: UserUpsertWithoutCommentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCommentsInput, UserUpdateWithoutCommentsInput>, UserUncheckedUpdateWithoutCommentsInput>
  }

  export type ProductUpdateOneRequiredWithoutCommentsNestedInput = {
    create?: XOR<ProductCreateWithoutCommentsInput, ProductUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutCommentsInput
    upsert?: ProductUpsertWithoutCommentsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutCommentsInput, ProductUpdateWithoutCommentsInput>, ProductUncheckedUpdateWithoutCommentsInput>
  }

<<<<<<< HEAD
  export type PaymentCreateNestedManyWithoutPayment_methodInput = {
    create?: XOR<PaymentCreateWithoutPayment_methodInput, PaymentUncheckedCreateWithoutPayment_methodInput> | PaymentCreateWithoutPayment_methodInput[] | PaymentUncheckedCreateWithoutPayment_methodInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPayment_methodInput | PaymentCreateOrConnectWithoutPayment_methodInput[]
    createMany?: PaymentCreateManyPayment_methodInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutPayment_methodInput = {
    create?: XOR<PaymentCreateWithoutPayment_methodInput, PaymentUncheckedCreateWithoutPayment_methodInput> | PaymentCreateWithoutPayment_methodInput[] | PaymentUncheckedCreateWithoutPayment_methodInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPayment_methodInput | PaymentCreateOrConnectWithoutPayment_methodInput[]
    createMany?: PaymentCreateManyPayment_methodInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type PaymentUpdateManyWithoutPayment_methodNestedInput = {
    create?: XOR<PaymentCreateWithoutPayment_methodInput, PaymentUncheckedCreateWithoutPayment_methodInput> | PaymentCreateWithoutPayment_methodInput[] | PaymentUncheckedCreateWithoutPayment_methodInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPayment_methodInput | PaymentCreateOrConnectWithoutPayment_methodInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutPayment_methodInput | PaymentUpsertWithWhereUniqueWithoutPayment_methodInput[]
    createMany?: PaymentCreateManyPayment_methodInputEnvelope
=======
  export type PaymentCreateNestedManyWithoutPaymentMethodInput = {
    create?: XOR<PaymentCreateWithoutPaymentMethodInput, PaymentUncheckedCreateWithoutPaymentMethodInput> | PaymentCreateWithoutPaymentMethodInput[] | PaymentUncheckedCreateWithoutPaymentMethodInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPaymentMethodInput | PaymentCreateOrConnectWithoutPaymentMethodInput[]
    createMany?: PaymentCreateManyPaymentMethodInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutPaymentMethodInput = {
    create?: XOR<PaymentCreateWithoutPaymentMethodInput, PaymentUncheckedCreateWithoutPaymentMethodInput> | PaymentCreateWithoutPaymentMethodInput[] | PaymentUncheckedCreateWithoutPaymentMethodInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPaymentMethodInput | PaymentCreateOrConnectWithoutPaymentMethodInput[]
    createMany?: PaymentCreateManyPaymentMethodInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type PaymentUpdateManyWithoutPaymentMethodNestedInput = {
    create?: XOR<PaymentCreateWithoutPaymentMethodInput, PaymentUncheckedCreateWithoutPaymentMethodInput> | PaymentCreateWithoutPaymentMethodInput[] | PaymentUncheckedCreateWithoutPaymentMethodInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPaymentMethodInput | PaymentCreateOrConnectWithoutPaymentMethodInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutPaymentMethodInput | PaymentUpsertWithWhereUniqueWithoutPaymentMethodInput[]
    createMany?: PaymentCreateManyPaymentMethodInputEnvelope
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
<<<<<<< HEAD
    update?: PaymentUpdateWithWhereUniqueWithoutPayment_methodInput | PaymentUpdateWithWhereUniqueWithoutPayment_methodInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutPayment_methodInput | PaymentUpdateManyWithWhereWithoutPayment_methodInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutPayment_methodNestedInput = {
    create?: XOR<PaymentCreateWithoutPayment_methodInput, PaymentUncheckedCreateWithoutPayment_methodInput> | PaymentCreateWithoutPayment_methodInput[] | PaymentUncheckedCreateWithoutPayment_methodInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPayment_methodInput | PaymentCreateOrConnectWithoutPayment_methodInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutPayment_methodInput | PaymentUpsertWithWhereUniqueWithoutPayment_methodInput[]
    createMany?: PaymentCreateManyPayment_methodInputEnvelope
=======
    update?: PaymentUpdateWithWhereUniqueWithoutPaymentMethodInput | PaymentUpdateWithWhereUniqueWithoutPaymentMethodInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutPaymentMethodInput | PaymentUpdateManyWithWhereWithoutPaymentMethodInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutPaymentMethodNestedInput = {
    create?: XOR<PaymentCreateWithoutPaymentMethodInput, PaymentUncheckedCreateWithoutPaymentMethodInput> | PaymentCreateWithoutPaymentMethodInput[] | PaymentUncheckedCreateWithoutPaymentMethodInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPaymentMethodInput | PaymentCreateOrConnectWithoutPaymentMethodInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutPaymentMethodInput | PaymentUpsertWithWhereUniqueWithoutPaymentMethodInput[]
    createMany?: PaymentCreateManyPaymentMethodInputEnvelope
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
<<<<<<< HEAD
    update?: PaymentUpdateWithWhereUniqueWithoutPayment_methodInput | PaymentUpdateWithWhereUniqueWithoutPayment_methodInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutPayment_methodInput | PaymentUpdateManyWithWhereWithoutPayment_methodInput[]
=======
    update?: PaymentUpdateWithWhereUniqueWithoutPaymentMethodInput | PaymentUpdateWithWhereUniqueWithoutPaymentMethodInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutPaymentMethodInput | PaymentUpdateManyWithWhereWithoutPaymentMethodInput[]
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

<<<<<<< HEAD
  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
=======
  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
<<<<<<< HEAD
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
=======
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

<<<<<<< HEAD
  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

<<<<<<< HEAD
  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
=======
  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
<<<<<<< HEAD
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
=======
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

<<<<<<< HEAD
  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

<<<<<<< HEAD
  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type OTPCreateWithoutUsersInput = {
    id?: bigint | number
    uuid: string
    otp: number
    expire: Date | string
  }

  export type OTPUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    uuid: string
    otp: number
    expire: Date | string
  }

  export type OTPCreateOrConnectWithoutUsersInput = {
    where: OTPWhereUniqueInput
    create: XOR<OTPCreateWithoutUsersInput, OTPUncheckedCreateWithoutUsersInput>
  }

  export type LanguageCreateWithoutUsersInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    flag_url: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    admins?: AdminCreateNestedManyWithoutLanguageInput
  }

  export type LanguageUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    flag_url: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    admins?: AdminUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutUsersInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutUsersInput, LanguageUncheckedCreateWithoutUsersInput>
  }

<<<<<<< HEAD
  export type CurrencyCreateWithoutUser_preferencesInput = {
=======
  export type CurrencyCreateWithoutUserPreferencesInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    name: string
    symbol: string
    products?: ProductCreateNestedManyWithoutCurrencyInput
  }

<<<<<<< HEAD
  export type CurrencyUncheckedCreateWithoutUser_preferencesInput = {
=======
  export type CurrencyUncheckedCreateWithoutUserPreferencesInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    name: string
    symbol: string
    products?: ProductUncheckedCreateNestedManyWithoutCurrencyInput
  }

<<<<<<< HEAD
  export type CurrencyCreateOrConnectWithoutUser_preferencesInput = {
    where: CurrencyWhereUniqueInput
    create: XOR<CurrencyCreateWithoutUser_preferencesInput, CurrencyUncheckedCreateWithoutUser_preferencesInput>
=======
  export type CurrencyCreateOrConnectWithoutUserPreferencesInput = {
    where: CurrencyWhereUniqueInput
    create: XOR<CurrencyCreateWithoutUserPreferencesInput, CurrencyUncheckedCreateWithoutUserPreferencesInput>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type EmailCreateWithoutUserInput = {
    id?: bigint | number
    email: string
  }

  export type EmailUncheckedCreateWithoutUserInput = {
    id?: bigint | number
    email: string
  }

  export type EmailCreateOrConnectWithoutUserInput = {
    where: EmailWhereUniqueInput
    create: XOR<EmailCreateWithoutUserInput, EmailUncheckedCreateWithoutUserInput>
  }

  export type EmailCreateManyUserInputEnvelope = {
    data: EmailCreateManyUserInput | EmailCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PhoneCreateWithoutUserInput = {
    id?: bigint | number
    phone: string
<<<<<<< HEAD
    products?: ProductCreateNestedManyWithoutContact_phoneInput
=======
    products?: ProductCreateNestedManyWithoutContactPhoneInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PhoneUncheckedCreateWithoutUserInput = {
    id?: bigint | number
    phone: string
<<<<<<< HEAD
    products?: ProductUncheckedCreateNestedManyWithoutContact_phoneInput
=======
    products?: ProductUncheckedCreateNestedManyWithoutContactPhoneInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PhoneCreateOrConnectWithoutUserInput = {
    where: PhoneWhereUniqueInput
    create: XOR<PhoneCreateWithoutUserInput, PhoneUncheckedCreateWithoutUserInput>
  }

  export type PhoneCreateManyUserInputEnvelope = {
    data: PhoneCreateManyUserInput | PhoneCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FavouriteItemCreateWithoutUserInput = {
    id?: bigint | number
<<<<<<< HEAD
    product: ProductCreateNestedOneWithoutFavourited_byInput
=======
    product: ProductCreateNestedOneWithoutFavouritedByInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type FavouriteItemUncheckedCreateWithoutUserInput = {
    id?: bigint | number
    product_id: bigint | number
  }

  export type FavouriteItemCreateOrConnectWithoutUserInput = {
    where: FavouriteItemWhereUniqueInput
    create: XOR<FavouriteItemCreateWithoutUserInput, FavouriteItemUncheckedCreateWithoutUserInput>
  }

  export type FavouriteItemCreateManyUserInputEnvelope = {
    data: FavouriteItemCreateManyUserInput | FavouriteItemCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AddressCreateWithoutUserInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    address_value: bigint | number
=======
    addressValue: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat: string
    long: string
    is_active: boolean
    products?: ProductCreateNestedManyWithoutAddressInput
  }

  export type AddressUncheckedCreateWithoutUserInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    address_value: bigint | number
=======
    addressValue: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat: string
    long: string
    is_active: boolean
    products?: ProductUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressCreateOrConnectWithoutUserInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutUserInput, AddressUncheckedCreateWithoutUserInput>
  }

  export type AddressCreateManyUserInputEnvelope = {
    data: AddressCreateManyUserInput | AddressCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutUserInput = {
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    custom_model?: string | null
    price: number
    floor_price?: boolean
=======
    custom_model: string
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
    brand?: BrandCreateNestedOneWithoutProductsInput
    model?: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency?: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contact_phone: PhoneCreateNestedOneWithoutProductsInput
    admin?: AdminCreateNestedOneWithoutProducts_managedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemCreateNestedManyWithoutProductInput
=======
    top_expire_date: Date | string
    brand: BrandCreateNestedOneWithoutProductsInput
    model: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contactPhone: PhoneCreateNestedOneWithoutProductsInput
    admin: AdminCreateNestedOneWithoutProductsManagedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutUserInput = {
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutUserInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutUserInput, ProductUncheckedCreateWithoutUserInput>
  }

  export type ProductCreateManyUserInputEnvelope = {
    data: ProductCreateManyUserInput | ProductCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CommentCreateWithoutUserInput = {
    id?: bigint | number
    text: string
    product: ProductCreateNestedOneWithoutCommentsInput
  }

  export type CommentUncheckedCreateWithoutUserInput = {
    id?: bigint | number
    product_id: bigint | number
    text: string
  }

  export type CommentCreateOrConnectWithoutUserInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutUserInput, CommentUncheckedCreateWithoutUserInput>
  }

  export type CommentCreateManyUserInputEnvelope = {
    data: CommentCreateManyUserInput | CommentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PaymentCreateWithoutUserInput = {
    id?: bigint | number
    amount: number
<<<<<<< HEAD
    payment_method: PaymentMethodCreateNestedOneWithoutPaymentsInput
=======
    paymentMethod: PaymentMethodCreateNestedOneWithoutPaymentsInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PaymentUncheckedCreateWithoutUserInput = {
    id?: bigint | number
    amount: number
    payment_method_id: bigint | number
  }

  export type PaymentCreateOrConnectWithoutUserInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput>
  }

  export type PaymentCreateManyUserInputEnvelope = {
    data: PaymentCreateManyUserInput | PaymentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type BlockCreateWithoutUserInput = {
    id?: bigint | number
    reason: string
<<<<<<< HEAD
    expire_date: Date | string
    admin: AdminCreateNestedOneWithoutBlocks_issuedInput
=======
    expireDate: Date | string
    admin: AdminCreateNestedOneWithoutBlocksIssuedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockUncheckedCreateWithoutUserInput = {
    id?: bigint | number
    admin_id: bigint | number
    reason: string
<<<<<<< HEAD
    expire_date: Date | string
=======
    expireDate: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockCreateOrConnectWithoutUserInput = {
    where: BlockWhereUniqueInput
    create: XOR<BlockCreateWithoutUserInput, BlockUncheckedCreateWithoutUserInput>
  }

  export type BlockCreateManyUserInputEnvelope = {
    data: BlockCreateManyUserInput | BlockCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type OTPUpsertWithoutUsersInput = {
    update: XOR<OTPUpdateWithoutUsersInput, OTPUncheckedUpdateWithoutUsersInput>
    create: XOR<OTPCreateWithoutUsersInput, OTPUncheckedCreateWithoutUsersInput>
    where?: OTPWhereInput
  }

  export type OTPUpdateToOneWithWhereWithoutUsersInput = {
    where?: OTPWhereInput
    data: XOR<OTPUpdateWithoutUsersInput, OTPUncheckedUpdateWithoutUsersInput>
  }

  export type OTPUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    otp?: IntFieldUpdateOperationsInput | number
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OTPUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    otp?: IntFieldUpdateOperationsInput | number
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LanguageUpsertWithoutUsersInput = {
    update: XOR<LanguageUpdateWithoutUsersInput, LanguageUncheckedUpdateWithoutUsersInput>
    create: XOR<LanguageCreateWithoutUsersInput, LanguageUncheckedCreateWithoutUsersInput>
    where?: LanguageWhereInput
  }

  export type LanguageUpdateToOneWithWhereWithoutUsersInput = {
    where?: LanguageWhereInput
    data: XOR<LanguageUpdateWithoutUsersInput, LanguageUncheckedUpdateWithoutUsersInput>
  }

  export type LanguageUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    flag_url?: StringFieldUpdateOperationsInput | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    admins?: AdminUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    flag_url?: StringFieldUpdateOperationsInput | string
    admins?: AdminUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type CurrencyUpsertWithoutUser_preferencesInput = {
    update: XOR<CurrencyUpdateWithoutUser_preferencesInput, CurrencyUncheckedUpdateWithoutUser_preferencesInput>
    create: XOR<CurrencyCreateWithoutUser_preferencesInput, CurrencyUncheckedCreateWithoutUser_preferencesInput>
    where?: CurrencyWhereInput
  }

  export type CurrencyUpdateToOneWithWhereWithoutUser_preferencesInput = {
    where?: CurrencyWhereInput
    data: XOR<CurrencyUpdateWithoutUser_preferencesInput, CurrencyUncheckedUpdateWithoutUser_preferencesInput>
  }

  export type CurrencyUpdateWithoutUser_preferencesInput = {
=======
    admins?: AdminUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type CurrencyUpsertWithoutUserPreferencesInput = {
    update: XOR<CurrencyUpdateWithoutUserPreferencesInput, CurrencyUncheckedUpdateWithoutUserPreferencesInput>
    create: XOR<CurrencyCreateWithoutUserPreferencesInput, CurrencyUncheckedCreateWithoutUserPreferencesInput>
    where?: CurrencyWhereInput
  }

  export type CurrencyUpdateToOneWithWhereWithoutUserPreferencesInput = {
    where?: CurrencyWhereInput
    data: XOR<CurrencyUpdateWithoutUserPreferencesInput, CurrencyUncheckedUpdateWithoutUserPreferencesInput>
  }

  export type CurrencyUpdateWithoutUserPreferencesInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    products?: ProductUpdateManyWithoutCurrencyNestedInput
  }

<<<<<<< HEAD
  export type CurrencyUncheckedUpdateWithoutUser_preferencesInput = {
=======
  export type CurrencyUncheckedUpdateWithoutUserPreferencesInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    products?: ProductUncheckedUpdateManyWithoutCurrencyNestedInput
  }

  export type EmailUpsertWithWhereUniqueWithoutUserInput = {
    where: EmailWhereUniqueInput
    update: XOR<EmailUpdateWithoutUserInput, EmailUncheckedUpdateWithoutUserInput>
    create: XOR<EmailCreateWithoutUserInput, EmailUncheckedCreateWithoutUserInput>
  }

  export type EmailUpdateWithWhereUniqueWithoutUserInput = {
    where: EmailWhereUniqueInput
    data: XOR<EmailUpdateWithoutUserInput, EmailUncheckedUpdateWithoutUserInput>
  }

  export type EmailUpdateManyWithWhereWithoutUserInput = {
    where: EmailScalarWhereInput
    data: XOR<EmailUpdateManyMutationInput, EmailUncheckedUpdateManyWithoutUserInput>
  }

  export type EmailScalarWhereInput = {
    AND?: EmailScalarWhereInput | EmailScalarWhereInput[]
    OR?: EmailScalarWhereInput[]
    NOT?: EmailScalarWhereInput | EmailScalarWhereInput[]
    id?: BigIntFilter<"Email"> | bigint | number
    email?: StringFilter<"Email"> | string
    user_id?: BigIntFilter<"Email"> | bigint | number
  }

  export type PhoneUpsertWithWhereUniqueWithoutUserInput = {
    where: PhoneWhereUniqueInput
    update: XOR<PhoneUpdateWithoutUserInput, PhoneUncheckedUpdateWithoutUserInput>
    create: XOR<PhoneCreateWithoutUserInput, PhoneUncheckedCreateWithoutUserInput>
  }

  export type PhoneUpdateWithWhereUniqueWithoutUserInput = {
    where: PhoneWhereUniqueInput
    data: XOR<PhoneUpdateWithoutUserInput, PhoneUncheckedUpdateWithoutUserInput>
  }

  export type PhoneUpdateManyWithWhereWithoutUserInput = {
    where: PhoneScalarWhereInput
    data: XOR<PhoneUpdateManyMutationInput, PhoneUncheckedUpdateManyWithoutUserInput>
  }

  export type PhoneScalarWhereInput = {
    AND?: PhoneScalarWhereInput | PhoneScalarWhereInput[]
    OR?: PhoneScalarWhereInput[]
    NOT?: PhoneScalarWhereInput | PhoneScalarWhereInput[]
    id?: BigIntFilter<"Phone"> | bigint | number
    phone?: StringFilter<"Phone"> | string
    user_id?: BigIntFilter<"Phone"> | bigint | number
  }

  export type FavouriteItemUpsertWithWhereUniqueWithoutUserInput = {
    where: FavouriteItemWhereUniqueInput
    update: XOR<FavouriteItemUpdateWithoutUserInput, FavouriteItemUncheckedUpdateWithoutUserInput>
    create: XOR<FavouriteItemCreateWithoutUserInput, FavouriteItemUncheckedCreateWithoutUserInput>
  }

  export type FavouriteItemUpdateWithWhereUniqueWithoutUserInput = {
    where: FavouriteItemWhereUniqueInput
    data: XOR<FavouriteItemUpdateWithoutUserInput, FavouriteItemUncheckedUpdateWithoutUserInput>
  }

  export type FavouriteItemUpdateManyWithWhereWithoutUserInput = {
    where: FavouriteItemScalarWhereInput
    data: XOR<FavouriteItemUpdateManyMutationInput, FavouriteItemUncheckedUpdateManyWithoutUserInput>
  }

  export type FavouriteItemScalarWhereInput = {
    AND?: FavouriteItemScalarWhereInput | FavouriteItemScalarWhereInput[]
    OR?: FavouriteItemScalarWhereInput[]
    NOT?: FavouriteItemScalarWhereInput | FavouriteItemScalarWhereInput[]
    id?: BigIntFilter<"FavouriteItem"> | bigint | number
    product_id?: BigIntFilter<"FavouriteItem"> | bigint | number
    user_id?: BigIntFilter<"FavouriteItem"> | bigint | number
  }

  export type AddressUpsertWithWhereUniqueWithoutUserInput = {
    where: AddressWhereUniqueInput
    update: XOR<AddressUpdateWithoutUserInput, AddressUncheckedUpdateWithoutUserInput>
    create: XOR<AddressCreateWithoutUserInput, AddressUncheckedCreateWithoutUserInput>
  }

  export type AddressUpdateWithWhereUniqueWithoutUserInput = {
    where: AddressWhereUniqueInput
    data: XOR<AddressUpdateWithoutUserInput, AddressUncheckedUpdateWithoutUserInput>
  }

  export type AddressUpdateManyWithWhereWithoutUserInput = {
    where: AddressScalarWhereInput
    data: XOR<AddressUpdateManyMutationInput, AddressUncheckedUpdateManyWithoutUserInput>
  }

  export type AddressScalarWhereInput = {
    AND?: AddressScalarWhereInput | AddressScalarWhereInput[]
    OR?: AddressScalarWhereInput[]
    NOT?: AddressScalarWhereInput | AddressScalarWhereInput[]
    id?: BigIntFilter<"Address"> | bigint | number
    name?: StringFilter<"Address"> | string
<<<<<<< HEAD
    address_value?: BigIntFilter<"Address"> | bigint | number
=======
    addressValue?: BigIntFilter<"Address"> | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: StringFilter<"Address"> | string
    long?: StringFilter<"Address"> | string
    user_id?: BigIntFilter<"Address"> | bigint | number
    is_active?: BoolFilter<"Address"> | boolean
  }

  export type ProductUpsertWithWhereUniqueWithoutUserInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutUserInput, ProductUncheckedUpdateWithoutUserInput>
    create: XOR<ProductCreateWithoutUserInput, ProductUncheckedCreateWithoutUserInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutUserInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutUserInput, ProductUncheckedUpdateWithoutUserInput>
  }

  export type ProductUpdateManyWithWhereWithoutUserInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutUserInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: BigIntFilter<"Product"> | bigint | number
    user_id?: BigIntFilter<"Product"> | bigint | number
    title?: StringFilter<"Product"> | string
    description?: StringFilter<"Product"> | string
    year?: IntFilter<"Product"> | number
<<<<<<< HEAD
    brand_id?: BigIntNullableFilter<"Product"> | bigint | number | null
    model_id?: BigIntNullableFilter<"Product"> | bigint | number | null
    custom_model?: StringNullableFilter<"Product"> | string | null
=======
    brand_id?: BigIntFilter<"Product"> | bigint | number
    model_id?: BigIntFilter<"Product"> | bigint | number
    custom_model?: StringFilter<"Product"> | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFilter<"Product"> | bigint | number
    price?: FloatFilter<"Product"> | number
    floor_price?: BoolFilter<"Product"> | boolean
    currency_id?: BigIntFilter<"Product"> | bigint | number
    is_new?: BoolFilter<"Product"> | boolean
    has_document?: BoolFilter<"Product"> | boolean
    address_id?: BigIntFilter<"Product"> | bigint | number
    phone_id?: BigIntFilter<"Product"> | bigint | number
    storage?: BigIntFilter<"Product"> | bigint | number
    ram?: BigIntFilter<"Product"> | bigint | number
    views?: BigIntFilter<"Product"> | bigint | number
    is_archived?: BoolFilter<"Product"> | boolean
    is_sold?: BoolFilter<"Product"> | boolean
    is_checked?: BoolFilter<"Product"> | boolean
<<<<<<< HEAD
    admin_id?: BigIntNullableFilter<"Product"> | bigint | number | null
    is_top?: BoolFilter<"Product"> | boolean
    top_expire_date?: DateTimeNullableFilter<"Product"> | Date | string | null
=======
    admin_id?: BigIntFilter<"Product"> | bigint | number
    is_top?: BoolFilter<"Product"> | boolean
    top_expire_date?: DateTimeFilter<"Product"> | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type CommentUpsertWithWhereUniqueWithoutUserInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutUserInput, CommentUncheckedUpdateWithoutUserInput>
    create: XOR<CommentCreateWithoutUserInput, CommentUncheckedCreateWithoutUserInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutUserInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutUserInput, CommentUncheckedUpdateWithoutUserInput>
  }

  export type CommentUpdateManyWithWhereWithoutUserInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutUserInput>
  }

  export type CommentScalarWhereInput = {
    AND?: CommentScalarWhereInput | CommentScalarWhereInput[]
    OR?: CommentScalarWhereInput[]
    NOT?: CommentScalarWhereInput | CommentScalarWhereInput[]
    id?: BigIntFilter<"Comment"> | bigint | number
    user_id?: BigIntFilter<"Comment"> | bigint | number
    product_id?: BigIntFilter<"Comment"> | bigint | number
    text?: StringFilter<"Comment"> | string
  }

  export type PaymentUpsertWithWhereUniqueWithoutUserInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutUserInput, PaymentUncheckedUpdateWithoutUserInput>
    create: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutUserInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutUserInput, PaymentUncheckedUpdateWithoutUserInput>
  }

  export type PaymentUpdateManyWithWhereWithoutUserInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutUserInput>
  }

  export type PaymentScalarWhereInput = {
    AND?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    OR?: PaymentScalarWhereInput[]
    NOT?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    id?: BigIntFilter<"Payment"> | bigint | number
    user_id?: BigIntFilter<"Payment"> | bigint | number
    amount?: FloatFilter<"Payment"> | number
    payment_method_id?: BigIntFilter<"Payment"> | bigint | number
  }

  export type BlockUpsertWithWhereUniqueWithoutUserInput = {
    where: BlockWhereUniqueInput
    update: XOR<BlockUpdateWithoutUserInput, BlockUncheckedUpdateWithoutUserInput>
    create: XOR<BlockCreateWithoutUserInput, BlockUncheckedCreateWithoutUserInput>
  }

  export type BlockUpdateWithWhereUniqueWithoutUserInput = {
    where: BlockWhereUniqueInput
    data: XOR<BlockUpdateWithoutUserInput, BlockUncheckedUpdateWithoutUserInput>
  }

  export type BlockUpdateManyWithWhereWithoutUserInput = {
    where: BlockScalarWhereInput
    data: XOR<BlockUpdateManyMutationInput, BlockUncheckedUpdateManyWithoutUserInput>
  }

  export type BlockScalarWhereInput = {
    AND?: BlockScalarWhereInput | BlockScalarWhereInput[]
    OR?: BlockScalarWhereInput[]
    NOT?: BlockScalarWhereInput | BlockScalarWhereInput[]
    id?: BigIntFilter<"Block"> | bigint | number
    user_id?: BigIntFilter<"Block"> | bigint | number
    admin_id?: BigIntFilter<"Block"> | bigint | number
    reason?: StringFilter<"Block"> | string
<<<<<<< HEAD
    expire_date?: DateTimeFilter<"Block"> | Date | string
=======
    expireDate?: DateTimeFilter<"Block"> | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserCreateWithoutOtpInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    language?: LanguageCreateNestedOneWithoutUsersInput
    currency: CurrencyCreateNestedOneWithoutUser_preferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additional_phones?: PhoneCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    language: LanguageCreateNestedOneWithoutUsersInput
    preferredCurrency: CurrencyCreateNestedOneWithoutUserPreferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutUserInput
    comments?: CommentCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    blocks?: BlockCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutOtpInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    lang_id?: bigint | number
    currency_id: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additional_phones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    lang_id: bigint | number
    preferredCurrencyId: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutUserInput
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    blocks?: BlockUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutOtpInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOtpInput, UserUncheckedCreateWithoutOtpInput>
  }

  export type UserCreateManyOtpInputEnvelope = {
    data: UserCreateManyOtpInput | UserCreateManyOtpInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutOtpInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutOtpInput, UserUncheckedUpdateWithoutOtpInput>
    create: XOR<UserCreateWithoutOtpInput, UserUncheckedCreateWithoutOtpInput>
  }

  export type UserUpdateWithWhereUniqueWithoutOtpInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutOtpInput, UserUncheckedUpdateWithoutOtpInput>
  }

  export type UserUpdateManyWithWhereWithoutOtpInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutOtpInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: BigIntFilter<"User"> | bigint | number
    name?: StringFilter<"User"> | string
    surname?: StringFilter<"User"> | string
<<<<<<< HEAD
    birth_date?: DateTimeNullableFilter<"User"> | Date | string | null
    phone?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    refresh_token?: StringNullableFilter<"User"> | string | null
    balance?: FloatFilter<"User"> | number
    otp_id?: BigIntNullableFilter<"User"> | bigint | number | null
    lang_id?: BigIntFilter<"User"> | bigint | number
    currency_id?: BigIntFilter<"User"> | bigint | number
  }

  export type UserCreateWithoutAdditional_phonesInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp?: OTPCreateNestedOneWithoutUsersInput
    language?: LanguageCreateNestedOneWithoutUsersInput
    currency: CurrencyCreateNestedOneWithoutUser_preferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemCreateNestedManyWithoutUserInput
=======
    birth_date?: DateTimeFilter<"User"> | Date | string
    phone?: StringFilter<"User"> | string
    avatar?: StringFilter<"User"> | string
    refresh_token?: StringFilter<"User"> | string
    balance?: FloatFilter<"User"> | number
    otp_id?: BigIntFilter<"User"> | bigint | number
    lang_id?: BigIntFilter<"User"> | bigint | number
    preferredCurrencyId?: BigIntFilter<"User"> | bigint | number
  }

  export type UserCreateWithoutAdditionalPhonesInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp: OTPCreateNestedOneWithoutUsersInput
    language: LanguageCreateNestedOneWithoutUsersInput
    preferredCurrency: CurrencyCreateNestedOneWithoutUserPreferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutUserInput
    comments?: CommentCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    blocks?: BlockCreateNestedManyWithoutUserInput
  }

<<<<<<< HEAD
  export type UserUncheckedCreateWithoutAdditional_phonesInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    lang_id?: bigint | number
    currency_id: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
=======
  export type UserUncheckedCreateWithoutAdditionalPhonesInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    lang_id: bigint | number
    preferredCurrencyId: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutUserInput
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    blocks?: BlockUncheckedCreateNestedManyWithoutUserInput
  }

<<<<<<< HEAD
  export type UserCreateOrConnectWithoutAdditional_phonesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAdditional_phonesInput, UserUncheckedCreateWithoutAdditional_phonesInput>
  }

  export type ProductCreateWithoutContact_phoneInput = {
=======
  export type UserCreateOrConnectWithoutAdditionalPhonesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAdditionalPhonesInput, UserUncheckedCreateWithoutAdditionalPhonesInput>
  }

  export type ProductCreateWithoutContactPhoneInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    custom_model?: string | null
    price: number
    floor_price?: boolean
=======
    custom_model: string
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
    user: UserCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    model?: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency?: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    admin?: AdminCreateNestedOneWithoutProducts_managedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemCreateNestedManyWithoutProductInput
    comments?: CommentCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutContact_phoneInput = {
=======
    top_expire_date: Date | string
    user: UserCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    model: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    admin: AdminCreateNestedOneWithoutProductsManagedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemCreateNestedManyWithoutProductInput
    comments?: CommentCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutContactPhoneInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
    comments?: CommentUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutContact_phoneInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutContact_phoneInput, ProductUncheckedCreateWithoutContact_phoneInput>
  }

  export type ProductCreateManyContact_phoneInputEnvelope = {
    data: ProductCreateManyContact_phoneInput | ProductCreateManyContact_phoneInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutAdditional_phonesInput = {
    update: XOR<UserUpdateWithoutAdditional_phonesInput, UserUncheckedUpdateWithoutAdditional_phonesInput>
    create: XOR<UserCreateWithoutAdditional_phonesInput, UserUncheckedCreateWithoutAdditional_phonesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAdditional_phonesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAdditional_phonesInput, UserUncheckedUpdateWithoutAdditional_phonesInput>
  }

  export type UserUpdateWithoutAdditional_phonesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutUser_preferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUpdateManyWithoutUserNestedInput
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
    comments?: CommentUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutContactPhoneInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutContactPhoneInput, ProductUncheckedCreateWithoutContactPhoneInput>
  }

  export type ProductCreateManyContactPhoneInputEnvelope = {
    data: ProductCreateManyContactPhoneInput | ProductCreateManyContactPhoneInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutAdditionalPhonesInput = {
    update: XOR<UserUpdateWithoutAdditionalPhonesInput, UserUncheckedUpdateWithoutAdditionalPhonesInput>
    create: XOR<UserCreateWithoutAdditionalPhonesInput, UserUncheckedCreateWithoutAdditionalPhonesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAdditionalPhonesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAdditionalPhonesInput, UserUncheckedUpdateWithoutAdditionalPhonesInput>
  }

  export type UserUpdateWithoutAdditionalPhonesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneRequiredWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    preferredCurrency?: CurrencyUpdateOneRequiredWithoutUserPreferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutUserNestedInput
    comments?: CommentUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    blocks?: BlockUpdateManyWithoutUserNestedInput
  }

<<<<<<< HEAD
  export type UserUncheckedUpdateWithoutAdditional_phonesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
=======
  export type UserUncheckedUpdateWithoutAdditionalPhonesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutUserNestedInput
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    blocks?: BlockUncheckedUpdateManyWithoutUserNestedInput
  }

<<<<<<< HEAD
  export type ProductUpsertWithWhereUniqueWithoutContact_phoneInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutContact_phoneInput, ProductUncheckedUpdateWithoutContact_phoneInput>
    create: XOR<ProductCreateWithoutContact_phoneInput, ProductUncheckedCreateWithoutContact_phoneInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutContact_phoneInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutContact_phoneInput, ProductUncheckedUpdateWithoutContact_phoneInput>
  }

  export type ProductUpdateManyWithWhereWithoutContact_phoneInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutContact_phoneInput>
=======
  export type ProductUpsertWithWhereUniqueWithoutContactPhoneInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutContactPhoneInput, ProductUncheckedUpdateWithoutContactPhoneInput>
    create: XOR<ProductCreateWithoutContactPhoneInput, ProductUncheckedCreateWithoutContactPhoneInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutContactPhoneInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutContactPhoneInput, ProductUncheckedUpdateWithoutContactPhoneInput>
  }

  export type ProductUpdateManyWithWhereWithoutContactPhoneInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutContactPhoneInput>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserCreateWithoutEmailsInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp?: OTPCreateNestedOneWithoutUsersInput
    language?: LanguageCreateNestedOneWithoutUsersInput
    currency: CurrencyCreateNestedOneWithoutUser_preferencesInput
    additional_phones?: PhoneCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp: OTPCreateNestedOneWithoutUsersInput
    language: LanguageCreateNestedOneWithoutUsersInput
    preferredCurrency: CurrencyCreateNestedOneWithoutUserPreferencesInput
    additionalPhones?: PhoneCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutUserInput
    comments?: CommentCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    blocks?: BlockCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutEmailsInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    lang_id?: bigint | number
    currency_id: bigint | number
    additional_phones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    lang_id: bigint | number
    preferredCurrencyId: bigint | number
    additionalPhones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutUserInput
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    blocks?: BlockUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEmailsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEmailsInput, UserUncheckedCreateWithoutEmailsInput>
  }

  export type UserUpsertWithoutEmailsInput = {
    update: XOR<UserUpdateWithoutEmailsInput, UserUncheckedUpdateWithoutEmailsInput>
    create: XOR<UserCreateWithoutEmailsInput, UserUncheckedCreateWithoutEmailsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEmailsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEmailsInput, UserUncheckedUpdateWithoutEmailsInput>
  }

  export type UserUpdateWithoutEmailsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutUser_preferencesNestedInput
    additional_phones?: PhoneUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneRequiredWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    preferredCurrency?: CurrencyUpdateOneRequiredWithoutUserPreferencesNestedInput
    additionalPhones?: PhoneUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutUserNestedInput
    comments?: CommentUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    blocks?: BlockUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEmailsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    additional_phones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
    additionalPhones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutUserNestedInput
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    blocks?: BlockUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutAddressesInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp?: OTPCreateNestedOneWithoutUsersInput
    language?: LanguageCreateNestedOneWithoutUsersInput
    currency: CurrencyCreateNestedOneWithoutUser_preferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additional_phones?: PhoneCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp: OTPCreateNestedOneWithoutUsersInput
    language: LanguageCreateNestedOneWithoutUsersInput
    preferredCurrency: CurrencyCreateNestedOneWithoutUserPreferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductCreateNestedManyWithoutUserInput
    comments?: CommentCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    blocks?: BlockCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAddressesInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    lang_id?: bigint | number
    currency_id: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additional_phones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    lang_id: bigint | number
    preferredCurrencyId: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductUncheckedCreateNestedManyWithoutUserInput
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    blocks?: BlockUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAddressesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAddressesInput, UserUncheckedCreateWithoutAddressesInput>
  }

  export type ProductCreateWithoutAddressInput = {
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    custom_model?: string | null
    price: number
    floor_price?: boolean
=======
    custom_model: string
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
    user: UserCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    model?: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency?: CurrencyCreateNestedOneWithoutProductsInput
    contact_phone: PhoneCreateNestedOneWithoutProductsInput
    admin?: AdminCreateNestedOneWithoutProducts_managedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemCreateNestedManyWithoutProductInput
=======
    top_expire_date: Date | string
    user: UserCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    model: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency: CurrencyCreateNestedOneWithoutProductsInput
    contactPhone: PhoneCreateNestedOneWithoutProductsInput
    admin: AdminCreateNestedOneWithoutProductsManagedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutAddressInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutAddressInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutAddressInput, ProductUncheckedCreateWithoutAddressInput>
  }

  export type ProductCreateManyAddressInputEnvelope = {
    data: ProductCreateManyAddressInput | ProductCreateManyAddressInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutAddressesInput = {
    update: XOR<UserUpdateWithoutAddressesInput, UserUncheckedUpdateWithoutAddressesInput>
    create: XOR<UserCreateWithoutAddressesInput, UserUncheckedCreateWithoutAddressesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAddressesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAddressesInput, UserUncheckedUpdateWithoutAddressesInput>
  }

  export type UserUpdateWithoutAddressesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutUser_preferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneRequiredWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    preferredCurrency?: CurrencyUpdateOneRequiredWithoutUserPreferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductUpdateManyWithoutUserNestedInput
    comments?: CommentUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    blocks?: BlockUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAddressesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    products?: ProductUncheckedUpdateManyWithoutUserNestedInput
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    blocks?: BlockUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProductUpsertWithWhereUniqueWithoutAddressInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutAddressInput, ProductUncheckedUpdateWithoutAddressInput>
    create: XOR<ProductCreateWithoutAddressInput, ProductUncheckedCreateWithoutAddressInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutAddressInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutAddressInput, ProductUncheckedUpdateWithoutAddressInput>
  }

  export type ProductUpdateManyWithWhereWithoutAddressInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutAddressInput>
  }

  export type UserCreateWithoutLanguageInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp?: OTPCreateNestedOneWithoutUsersInput
    currency: CurrencyCreateNestedOneWithoutUser_preferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additional_phones?: PhoneCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp: OTPCreateNestedOneWithoutUsersInput
    preferredCurrency: CurrencyCreateNestedOneWithoutUserPreferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutUserInput
    comments?: CommentCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    blocks?: BlockCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutLanguageInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    currency_id: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additional_phones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    preferredCurrencyId: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutUserInput
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    blocks?: BlockUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutLanguageInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLanguageInput, UserUncheckedCreateWithoutLanguageInput>
  }

  export type UserCreateManyLanguageInputEnvelope = {
    data: UserCreateManyLanguageInput | UserCreateManyLanguageInput[]
    skipDuplicates?: boolean
  }

  export type AdminCreateWithoutLanguageInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    password: string
<<<<<<< HEAD
    avatar?: string | null
    refresh_token?: string | null
    is_creator?: boolean
    blocks_issued?: BlockCreateNestedManyWithoutAdminInput
    products_managed?: ProductCreateNestedManyWithoutAdminInput
=======
    avatar: string
    refresh_token: string
    is_creator?: boolean
    blocksIssued?: BlockCreateNestedManyWithoutAdminInput
    productsManaged?: ProductCreateNestedManyWithoutAdminInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type AdminUncheckedCreateWithoutLanguageInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    password: string
<<<<<<< HEAD
    avatar?: string | null
    refresh_token?: string | null
    is_creator?: boolean
    blocks_issued?: BlockUncheckedCreateNestedManyWithoutAdminInput
    products_managed?: ProductUncheckedCreateNestedManyWithoutAdminInput
=======
    avatar: string
    refresh_token: string
    is_creator?: boolean
    blocksIssued?: BlockUncheckedCreateNestedManyWithoutAdminInput
    productsManaged?: ProductUncheckedCreateNestedManyWithoutAdminInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type AdminCreateOrConnectWithoutLanguageInput = {
    where: AdminWhereUniqueInput
    create: XOR<AdminCreateWithoutLanguageInput, AdminUncheckedCreateWithoutLanguageInput>
  }

  export type AdminCreateManyLanguageInputEnvelope = {
    data: AdminCreateManyLanguageInput | AdminCreateManyLanguageInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutLanguageInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutLanguageInput, UserUncheckedUpdateWithoutLanguageInput>
    create: XOR<UserCreateWithoutLanguageInput, UserUncheckedCreateWithoutLanguageInput>
  }

  export type UserUpdateWithWhereUniqueWithoutLanguageInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutLanguageInput, UserUncheckedUpdateWithoutLanguageInput>
  }

  export type UserUpdateManyWithWhereWithoutLanguageInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutLanguageInput>
  }

  export type AdminUpsertWithWhereUniqueWithoutLanguageInput = {
    where: AdminWhereUniqueInput
    update: XOR<AdminUpdateWithoutLanguageInput, AdminUncheckedUpdateWithoutLanguageInput>
    create: XOR<AdminCreateWithoutLanguageInput, AdminUncheckedCreateWithoutLanguageInput>
  }

  export type AdminUpdateWithWhereUniqueWithoutLanguageInput = {
    where: AdminWhereUniqueInput
    data: XOR<AdminUpdateWithoutLanguageInput, AdminUncheckedUpdateWithoutLanguageInput>
  }

  export type AdminUpdateManyWithWhereWithoutLanguageInput = {
    where: AdminScalarWhereInput
    data: XOR<AdminUpdateManyMutationInput, AdminUncheckedUpdateManyWithoutLanguageInput>
  }

  export type AdminScalarWhereInput = {
    AND?: AdminScalarWhereInput | AdminScalarWhereInput[]
    OR?: AdminScalarWhereInput[]
    NOT?: AdminScalarWhereInput | AdminScalarWhereInput[]
    id?: BigIntFilter<"Admin"> | bigint | number
    name?: StringFilter<"Admin"> | string
    surname?: StringFilter<"Admin"> | string
    birth_date?: DateTimeFilter<"Admin"> | Date | string
    phone?: StringFilter<"Admin"> | string
    password?: StringFilter<"Admin"> | string
<<<<<<< HEAD
    avatar?: StringNullableFilter<"Admin"> | string | null
    refresh_token?: StringNullableFilter<"Admin"> | string | null
=======
    avatar?: StringFilter<"Admin"> | string
    refresh_token?: StringFilter<"Admin"> | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lang_id?: BigIntFilter<"Admin"> | bigint | number
    is_creator?: BoolFilter<"Admin"> | boolean
  }

<<<<<<< HEAD
  export type ProductCreateWithoutFavourited_byInput = {
=======
  export type ProductCreateWithoutFavouritedByInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    custom_model?: string | null
    price: number
    floor_price?: boolean
=======
    custom_model: string
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
    user: UserCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    model?: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency?: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contact_phone: PhoneCreateNestedOneWithoutProductsInput
    admin?: AdminCreateNestedOneWithoutProducts_managedInput
=======
    top_expire_date: Date | string
    user: UserCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    model: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contactPhone: PhoneCreateNestedOneWithoutProductsInput
    admin: AdminCreateNestedOneWithoutProductsManagedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    images?: ProductImageCreateNestedManyWithoutProductInput
    comments?: CommentCreateNestedManyWithoutProductInput
  }

<<<<<<< HEAD
  export type ProductUncheckedCreateWithoutFavourited_byInput = {
=======
  export type ProductUncheckedCreateWithoutFavouritedByInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    comments?: CommentUncheckedCreateNestedManyWithoutProductInput
  }

<<<<<<< HEAD
  export type ProductCreateOrConnectWithoutFavourited_byInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutFavourited_byInput, ProductUncheckedCreateWithoutFavourited_byInput>
  }

  export type UserCreateWithoutFavourite_itemsInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp?: OTPCreateNestedOneWithoutUsersInput
    language?: LanguageCreateNestedOneWithoutUsersInput
    currency: CurrencyCreateNestedOneWithoutUser_preferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additional_phones?: PhoneCreateNestedManyWithoutUserInput
=======
  export type ProductCreateOrConnectWithoutFavouritedByInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutFavouritedByInput, ProductUncheckedCreateWithoutFavouritedByInput>
  }

  export type UserCreateWithoutFavouriteItemsInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp: OTPCreateNestedOneWithoutUsersInput
    language: LanguageCreateNestedOneWithoutUsersInput
    preferredCurrency: CurrencyCreateNestedOneWithoutUserPreferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutUserInput
    comments?: CommentCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    blocks?: BlockCreateNestedManyWithoutUserInput
  }

<<<<<<< HEAD
  export type UserUncheckedCreateWithoutFavourite_itemsInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    lang_id?: bigint | number
    currency_id: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additional_phones?: PhoneUncheckedCreateNestedManyWithoutUserInput
=======
  export type UserUncheckedCreateWithoutFavouriteItemsInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    lang_id: bigint | number
    preferredCurrencyId: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneUncheckedCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutUserInput
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    blocks?: BlockUncheckedCreateNestedManyWithoutUserInput
  }

<<<<<<< HEAD
  export type UserCreateOrConnectWithoutFavourite_itemsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFavourite_itemsInput, UserUncheckedCreateWithoutFavourite_itemsInput>
  }

  export type ProductUpsertWithoutFavourited_byInput = {
    update: XOR<ProductUpdateWithoutFavourited_byInput, ProductUncheckedUpdateWithoutFavourited_byInput>
    create: XOR<ProductCreateWithoutFavourited_byInput, ProductUncheckedCreateWithoutFavourited_byInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutFavourited_byInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutFavourited_byInput, ProductUncheckedUpdateWithoutFavourited_byInput>
  }

  export type ProductUpdateWithoutFavourited_byInput = {
=======
  export type UserCreateOrConnectWithoutFavouriteItemsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFavouriteItemsInput, UserUncheckedCreateWithoutFavouriteItemsInput>
  }

  export type ProductUpsertWithoutFavouritedByInput = {
    update: XOR<ProductUpdateWithoutFavouritedByInput, ProductUncheckedUpdateWithoutFavouritedByInput>
    create: XOR<ProductCreateWithoutFavouritedByInput, ProductUncheckedCreateWithoutFavouritedByInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutFavouritedByInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutFavouritedByInput, ProductUncheckedUpdateWithoutFavouritedByInput>
  }

  export type ProductUpdateWithoutFavouritedByInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    model?: ModelUpdateOneWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contact_phone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneWithoutProducts_managedNestedInput
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    model?: ModelUpdateOneRequiredWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contactPhone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneRequiredWithoutProductsManagedNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    images?: ProductImageUpdateManyWithoutProductNestedInput
    comments?: CommentUpdateManyWithoutProductNestedInput
  }

<<<<<<< HEAD
  export type ProductUncheckedUpdateWithoutFavourited_byInput = {
=======
  export type ProductUncheckedUpdateWithoutFavouritedByInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    comments?: CommentUncheckedUpdateManyWithoutProductNestedInput
  }

<<<<<<< HEAD
  export type UserUpsertWithoutFavourite_itemsInput = {
    update: XOR<UserUpdateWithoutFavourite_itemsInput, UserUncheckedUpdateWithoutFavourite_itemsInput>
    create: XOR<UserCreateWithoutFavourite_itemsInput, UserUncheckedCreateWithoutFavourite_itemsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFavourite_itemsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFavourite_itemsInput, UserUncheckedUpdateWithoutFavourite_itemsInput>
  }

  export type UserUpdateWithoutFavourite_itemsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutUser_preferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUpdateManyWithoutUserNestedInput
=======
  export type UserUpsertWithoutFavouriteItemsInput = {
    update: XOR<UserUpdateWithoutFavouriteItemsInput, UserUncheckedUpdateWithoutFavouriteItemsInput>
    create: XOR<UserCreateWithoutFavouriteItemsInput, UserUncheckedCreateWithoutFavouriteItemsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFavouriteItemsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFavouriteItemsInput, UserUncheckedUpdateWithoutFavouriteItemsInput>
  }

  export type UserUpdateWithoutFavouriteItemsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneRequiredWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    preferredCurrency?: CurrencyUpdateOneRequiredWithoutUserPreferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutUserNestedInput
    comments?: CommentUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    blocks?: BlockUpdateManyWithoutUserNestedInput
  }

<<<<<<< HEAD
  export type UserUncheckedUpdateWithoutFavourite_itemsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
=======
  export type UserUncheckedUpdateWithoutFavouriteItemsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutUserNestedInput
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    blocks?: BlockUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutProductsInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp?: OTPCreateNestedOneWithoutUsersInput
    language?: LanguageCreateNestedOneWithoutUsersInput
    currency: CurrencyCreateNestedOneWithoutUser_preferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additional_phones?: PhoneCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp: OTPCreateNestedOneWithoutUsersInput
    language: LanguageCreateNestedOneWithoutUsersInput
    preferredCurrency: CurrencyCreateNestedOneWithoutUserPreferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressCreateNestedManyWithoutUserInput
    comments?: CommentCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    blocks?: BlockCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutProductsInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    lang_id?: bigint | number
    currency_id: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additional_phones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    lang_id: bigint | number
    preferredCurrencyId: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    blocks?: BlockUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutProductsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProductsInput, UserUncheckedCreateWithoutProductsInput>
  }

  export type BrandCreateWithoutProductsInput = {
    id?: bigint | number
    name: string
    logo: string
    models?: ModelCreateNestedManyWithoutBrandInput
  }

  export type BrandUncheckedCreateWithoutProductsInput = {
    id?: bigint | number
    name: string
    logo: string
    models?: ModelUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandCreateOrConnectWithoutProductsInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
  }

  export type ModelCreateWithoutProductsInput = {
    id?: bigint | number
    name: string
    brand: BrandCreateNestedOneWithoutModelsInput
  }

  export type ModelUncheckedCreateWithoutProductsInput = {
    id?: bigint | number
    name: string
    brand_id: bigint | number
  }

  export type ModelCreateOrConnectWithoutProductsInput = {
    where: ModelWhereUniqueInput
    create: XOR<ModelCreateWithoutProductsInput, ModelUncheckedCreateWithoutProductsInput>
  }

  export type ColorCreateWithoutProductsInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    hex: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ColorUncheckedCreateWithoutProductsInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    hex: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ColorCreateOrConnectWithoutProductsInput = {
    where: ColorWhereUniqueInput
    create: XOR<ColorCreateWithoutProductsInput, ColorUncheckedCreateWithoutProductsInput>
  }

  export type CurrencyCreateWithoutProductsInput = {
    id?: bigint | number
    name: string
    symbol: string
<<<<<<< HEAD
    user_preferences?: UserCreateNestedManyWithoutCurrencyInput
=======
    userPreferences?: UserCreateNestedManyWithoutPreferredCurrencyInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type CurrencyUncheckedCreateWithoutProductsInput = {
    id?: bigint | number
    name: string
    symbol: string
<<<<<<< HEAD
    user_preferences?: UserUncheckedCreateNestedManyWithoutCurrencyInput
=======
    userPreferences?: UserUncheckedCreateNestedManyWithoutPreferredCurrencyInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type CurrencyCreateOrConnectWithoutProductsInput = {
    where: CurrencyWhereUniqueInput
    create: XOR<CurrencyCreateWithoutProductsInput, CurrencyUncheckedCreateWithoutProductsInput>
  }

  export type AddressCreateWithoutProductsInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    address_value: bigint | number
=======
    addressValue: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat: string
    long: string
    is_active: boolean
    user: UserCreateNestedOneWithoutAddressesInput
  }

  export type AddressUncheckedCreateWithoutProductsInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    address_value: bigint | number
=======
    addressValue: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat: string
    long: string
    user_id: bigint | number
    is_active: boolean
  }

  export type AddressCreateOrConnectWithoutProductsInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutProductsInput, AddressUncheckedCreateWithoutProductsInput>
  }

  export type PhoneCreateWithoutProductsInput = {
    id?: bigint | number
    phone: string
<<<<<<< HEAD
    user: UserCreateNestedOneWithoutAdditional_phonesInput
=======
    user: UserCreateNestedOneWithoutAdditionalPhonesInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PhoneUncheckedCreateWithoutProductsInput = {
    id?: bigint | number
    phone: string
    user_id: bigint | number
  }

  export type PhoneCreateOrConnectWithoutProductsInput = {
    where: PhoneWhereUniqueInput
    create: XOR<PhoneCreateWithoutProductsInput, PhoneUncheckedCreateWithoutProductsInput>
  }

<<<<<<< HEAD
  export type AdminCreateWithoutProducts_managedInput = {
=======
  export type AdminCreateWithoutProductsManagedInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    password: string
<<<<<<< HEAD
    avatar?: string | null
    refresh_token?: string | null
    is_creator?: boolean
    language?: LanguageCreateNestedOneWithoutAdminsInput
    blocks_issued?: BlockCreateNestedManyWithoutAdminInput
  }

  export type AdminUncheckedCreateWithoutProducts_managedInput = {
=======
    avatar: string
    refresh_token: string
    is_creator?: boolean
    language: LanguageCreateNestedOneWithoutAdminsInput
    blocksIssued?: BlockCreateNestedManyWithoutAdminInput
  }

  export type AdminUncheckedCreateWithoutProductsManagedInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    password: string
<<<<<<< HEAD
    avatar?: string | null
    refresh_token?: string | null
    lang_id?: bigint | number
    is_creator?: boolean
    blocks_issued?: BlockUncheckedCreateNestedManyWithoutAdminInput
  }

  export type AdminCreateOrConnectWithoutProducts_managedInput = {
    where: AdminWhereUniqueInput
    create: XOR<AdminCreateWithoutProducts_managedInput, AdminUncheckedCreateWithoutProducts_managedInput>
=======
    avatar: string
    refresh_token: string
    lang_id: bigint | number
    is_creator?: boolean
    blocksIssued?: BlockUncheckedCreateNestedManyWithoutAdminInput
  }

  export type AdminCreateOrConnectWithoutProductsManagedInput = {
    where: AdminWhereUniqueInput
    create: XOR<AdminCreateWithoutProductsManagedInput, AdminUncheckedCreateWithoutProductsManagedInput>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductImageCreateWithoutProductInput = {
    id?: bigint | number
    url: string
    is_main?: boolean
  }

  export type ProductImageUncheckedCreateWithoutProductInput = {
    id?: bigint | number
    url: string
    is_main?: boolean
  }

  export type ProductImageCreateOrConnectWithoutProductInput = {
    where: ProductImageWhereUniqueInput
    create: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput>
  }

  export type ProductImageCreateManyProductInputEnvelope = {
    data: ProductImageCreateManyProductInput | ProductImageCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type FavouriteItemCreateWithoutProductInput = {
    id?: bigint | number
<<<<<<< HEAD
    user: UserCreateNestedOneWithoutFavourite_itemsInput
=======
    user: UserCreateNestedOneWithoutFavouriteItemsInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type FavouriteItemUncheckedCreateWithoutProductInput = {
    id?: bigint | number
    user_id: bigint | number
  }

  export type FavouriteItemCreateOrConnectWithoutProductInput = {
    where: FavouriteItemWhereUniqueInput
    create: XOR<FavouriteItemCreateWithoutProductInput, FavouriteItemUncheckedCreateWithoutProductInput>
  }

  export type FavouriteItemCreateManyProductInputEnvelope = {
    data: FavouriteItemCreateManyProductInput | FavouriteItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type CommentCreateWithoutProductInput = {
    id?: bigint | number
    text: string
    user: UserCreateNestedOneWithoutCommentsInput
  }

  export type CommentUncheckedCreateWithoutProductInput = {
    id?: bigint | number
    user_id: bigint | number
    text: string
  }

  export type CommentCreateOrConnectWithoutProductInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutProductInput, CommentUncheckedCreateWithoutProductInput>
  }

  export type CommentCreateManyProductInputEnvelope = {
    data: CommentCreateManyProductInput | CommentCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutProductsInput = {
    update: XOR<UserUpdateWithoutProductsInput, UserUncheckedUpdateWithoutProductsInput>
    create: XOR<UserCreateWithoutProductsInput, UserUncheckedCreateWithoutProductsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProductsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProductsInput, UserUncheckedUpdateWithoutProductsInput>
  }

  export type UserUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutUser_preferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneRequiredWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    preferredCurrency?: CurrencyUpdateOneRequiredWithoutUserPreferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUpdateManyWithoutUserNestedInput
    comments?: CommentUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    blocks?: BlockUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    blocks?: BlockUncheckedUpdateManyWithoutUserNestedInput
  }

  export type BrandUpsertWithoutProductsInput = {
    update: XOR<BrandUpdateWithoutProductsInput, BrandUncheckedUpdateWithoutProductsInput>
    create: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
    where?: BrandWhereInput
  }

  export type BrandUpdateToOneWithWhereWithoutProductsInput = {
    where?: BrandWhereInput
    data: XOR<BrandUpdateWithoutProductsInput, BrandUncheckedUpdateWithoutProductsInput>
  }

  export type BrandUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    models?: ModelUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    models?: ModelUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type ModelUpsertWithoutProductsInput = {
    update: XOR<ModelUpdateWithoutProductsInput, ModelUncheckedUpdateWithoutProductsInput>
    create: XOR<ModelCreateWithoutProductsInput, ModelUncheckedCreateWithoutProductsInput>
    where?: ModelWhereInput
  }

  export type ModelUpdateToOneWithWhereWithoutProductsInput = {
    where?: ModelWhereInput
    data: XOR<ModelUpdateWithoutProductsInput, ModelUncheckedUpdateWithoutProductsInput>
  }

  export type ModelUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    brand?: BrandUpdateOneRequiredWithoutModelsNestedInput
  }

  export type ModelUncheckedUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type ColorUpsertWithoutProductsInput = {
    update: XOR<ColorUpdateWithoutProductsInput, ColorUncheckedUpdateWithoutProductsInput>
    create: XOR<ColorCreateWithoutProductsInput, ColorUncheckedCreateWithoutProductsInput>
    where?: ColorWhereInput
  }

  export type ColorUpdateToOneWithWhereWithoutProductsInput = {
    where?: ColorWhereInput
    data: XOR<ColorUpdateWithoutProductsInput, ColorUncheckedUpdateWithoutProductsInput>
  }

  export type ColorUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    hex?: StringFieldUpdateOperationsInput | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ColorUncheckedUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    hex?: StringFieldUpdateOperationsInput | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type CurrencyUpsertWithoutProductsInput = {
    update: XOR<CurrencyUpdateWithoutProductsInput, CurrencyUncheckedUpdateWithoutProductsInput>
    create: XOR<CurrencyCreateWithoutProductsInput, CurrencyUncheckedCreateWithoutProductsInput>
    where?: CurrencyWhereInput
  }

  export type CurrencyUpdateToOneWithWhereWithoutProductsInput = {
    where?: CurrencyWhereInput
    data: XOR<CurrencyUpdateWithoutProductsInput, CurrencyUncheckedUpdateWithoutProductsInput>
  }

  export type CurrencyUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    user_preferences?: UserUpdateManyWithoutCurrencyNestedInput
=======
    userPreferences?: UserUpdateManyWithoutPreferredCurrencyNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type CurrencyUncheckedUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    user_preferences?: UserUncheckedUpdateManyWithoutCurrencyNestedInput
=======
    userPreferences?: UserUncheckedUpdateManyWithoutPreferredCurrencyNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type AddressUpsertWithoutProductsInput = {
    update: XOR<AddressUpdateWithoutProductsInput, AddressUncheckedUpdateWithoutProductsInput>
    create: XOR<AddressCreateWithoutProductsInput, AddressUncheckedCreateWithoutProductsInput>
    where?: AddressWhereInput
  }

  export type AddressUpdateToOneWithWhereWithoutProductsInput = {
    where?: AddressWhereInput
    data: XOR<AddressUpdateWithoutProductsInput, AddressUncheckedUpdateWithoutProductsInput>
  }

  export type AddressUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    address_value?: BigIntFieldUpdateOperationsInput | bigint | number
=======
    addressValue?: BigIntFieldUpdateOperationsInput | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: StringFieldUpdateOperationsInput | string
    long?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutAddressesNestedInput
  }

  export type AddressUncheckedUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    address_value?: BigIntFieldUpdateOperationsInput | bigint | number
=======
    addressValue?: BigIntFieldUpdateOperationsInput | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: StringFieldUpdateOperationsInput | string
    long?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PhoneUpsertWithoutProductsInput = {
    update: XOR<PhoneUpdateWithoutProductsInput, PhoneUncheckedUpdateWithoutProductsInput>
    create: XOR<PhoneCreateWithoutProductsInput, PhoneUncheckedCreateWithoutProductsInput>
    where?: PhoneWhereInput
  }

  export type PhoneUpdateToOneWithWhereWithoutProductsInput = {
    where?: PhoneWhereInput
    data: XOR<PhoneUpdateWithoutProductsInput, PhoneUncheckedUpdateWithoutProductsInput>
  }

  export type PhoneUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    user?: UserUpdateOneRequiredWithoutAdditional_phonesNestedInput
=======
    user?: UserUpdateOneRequiredWithoutAdditionalPhonesNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PhoneUncheckedUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

<<<<<<< HEAD
  export type AdminUpsertWithoutProducts_managedInput = {
    update: XOR<AdminUpdateWithoutProducts_managedInput, AdminUncheckedUpdateWithoutProducts_managedInput>
    create: XOR<AdminCreateWithoutProducts_managedInput, AdminUncheckedCreateWithoutProducts_managedInput>
    where?: AdminWhereInput
  }

  export type AdminUpdateToOneWithWhereWithoutProducts_managedInput = {
    where?: AdminWhereInput
    data: XOR<AdminUpdateWithoutProducts_managedInput, AdminUncheckedUpdateWithoutProducts_managedInput>
  }

  export type AdminUpdateWithoutProducts_managedInput = {
=======
  export type AdminUpsertWithoutProductsManagedInput = {
    update: XOR<AdminUpdateWithoutProductsManagedInput, AdminUncheckedUpdateWithoutProductsManagedInput>
    create: XOR<AdminCreateWithoutProductsManagedInput, AdminUncheckedCreateWithoutProductsManagedInput>
    where?: AdminWhereInput
  }

  export type AdminUpdateToOneWithWhereWithoutProductsManagedInput = {
    where?: AdminWhereInput
    data: XOR<AdminUpdateWithoutProductsManagedInput, AdminUncheckedUpdateWithoutProductsManagedInput>
  }

  export type AdminUpdateWithoutProductsManagedInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    language?: LanguageUpdateOneRequiredWithoutAdminsNestedInput
    blocks_issued?: BlockUpdateManyWithoutAdminNestedInput
  }

  export type AdminUncheckedUpdateWithoutProducts_managedInput = {
=======
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    language?: LanguageUpdateOneRequiredWithoutAdminsNestedInput
    blocksIssued?: BlockUpdateManyWithoutAdminNestedInput
  }

  export type AdminUncheckedUpdateWithoutProductsManagedInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    blocks_issued?: BlockUncheckedUpdateManyWithoutAdminNestedInput
=======
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    blocksIssued?: BlockUncheckedUpdateManyWithoutAdminNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductImageUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductImageWhereUniqueInput
    update: XOR<ProductImageUpdateWithoutProductInput, ProductImageUncheckedUpdateWithoutProductInput>
    create: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput>
  }

  export type ProductImageUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductImageWhereUniqueInput
    data: XOR<ProductImageUpdateWithoutProductInput, ProductImageUncheckedUpdateWithoutProductInput>
  }

  export type ProductImageUpdateManyWithWhereWithoutProductInput = {
    where: ProductImageScalarWhereInput
    data: XOR<ProductImageUpdateManyMutationInput, ProductImageUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductImageScalarWhereInput = {
    AND?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
    OR?: ProductImageScalarWhereInput[]
    NOT?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
    id?: BigIntFilter<"ProductImage"> | bigint | number
    url?: StringFilter<"ProductImage"> | string
    product_id?: BigIntFilter<"ProductImage"> | bigint | number
    is_main?: BoolFilter<"ProductImage"> | boolean
  }

  export type FavouriteItemUpsertWithWhereUniqueWithoutProductInput = {
    where: FavouriteItemWhereUniqueInput
    update: XOR<FavouriteItemUpdateWithoutProductInput, FavouriteItemUncheckedUpdateWithoutProductInput>
    create: XOR<FavouriteItemCreateWithoutProductInput, FavouriteItemUncheckedCreateWithoutProductInput>
  }

  export type FavouriteItemUpdateWithWhereUniqueWithoutProductInput = {
    where: FavouriteItemWhereUniqueInput
    data: XOR<FavouriteItemUpdateWithoutProductInput, FavouriteItemUncheckedUpdateWithoutProductInput>
  }

  export type FavouriteItemUpdateManyWithWhereWithoutProductInput = {
    where: FavouriteItemScalarWhereInput
    data: XOR<FavouriteItemUpdateManyMutationInput, FavouriteItemUncheckedUpdateManyWithoutProductInput>
  }

  export type CommentUpsertWithWhereUniqueWithoutProductInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutProductInput, CommentUncheckedUpdateWithoutProductInput>
    create: XOR<CommentCreateWithoutProductInput, CommentUncheckedCreateWithoutProductInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutProductInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutProductInput, CommentUncheckedUpdateWithoutProductInput>
  }

  export type CommentUpdateManyWithWhereWithoutProductInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductCreateWithoutImagesInput = {
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    custom_model?: string | null
    price: number
    floor_price?: boolean
=======
    custom_model: string
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
    user: UserCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    model?: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency?: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contact_phone: PhoneCreateNestedOneWithoutProductsInput
    admin?: AdminCreateNestedOneWithoutProducts_managedInput
    favourited_by?: FavouriteItemCreateNestedManyWithoutProductInput
=======
    top_expire_date: Date | string
    user: UserCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    model: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contactPhone: PhoneCreateNestedOneWithoutProductsInput
    admin: AdminCreateNestedOneWithoutProductsManagedInput
    favouritedBy?: FavouriteItemCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutImagesInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
    favourited_by?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
    favouritedBy?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutImagesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
  }

  export type ProductUpsertWithoutImagesInput = {
    update: XOR<ProductUpdateWithoutImagesInput, ProductUncheckedUpdateWithoutImagesInput>
    create: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutImagesInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutImagesInput, ProductUncheckedUpdateWithoutImagesInput>
  }

  export type ProductUpdateWithoutImagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    model?: ModelUpdateOneWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contact_phone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneWithoutProducts_managedNestedInput
    favourited_by?: FavouriteItemUpdateManyWithoutProductNestedInput
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    model?: ModelUpdateOneRequiredWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contactPhone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneRequiredWithoutProductsManagedNestedInput
    favouritedBy?: FavouriteItemUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutImagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favourited_by?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    favouritedBy?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ModelCreateWithoutBrandInput = {
    id?: bigint | number
    name: string
    products?: ProductCreateNestedManyWithoutModelInput
  }

  export type ModelUncheckedCreateWithoutBrandInput = {
    id?: bigint | number
    name: string
    products?: ProductUncheckedCreateNestedManyWithoutModelInput
  }

  export type ModelCreateOrConnectWithoutBrandInput = {
    where: ModelWhereUniqueInput
    create: XOR<ModelCreateWithoutBrandInput, ModelUncheckedCreateWithoutBrandInput>
  }

  export type ModelCreateManyBrandInputEnvelope = {
    data: ModelCreateManyBrandInput | ModelCreateManyBrandInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutBrandInput = {
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    custom_model?: string | null
    price: number
    floor_price?: boolean
=======
    custom_model: string
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
    user: UserCreateNestedOneWithoutProductsInput
    model?: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency?: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contact_phone: PhoneCreateNestedOneWithoutProductsInput
    admin?: AdminCreateNestedOneWithoutProducts_managedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemCreateNestedManyWithoutProductInput
=======
    top_expire_date: Date | string
    user: UserCreateNestedOneWithoutProductsInput
    model: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contactPhone: PhoneCreateNestedOneWithoutProductsInput
    admin: AdminCreateNestedOneWithoutProductsManagedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutBrandInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutBrandInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput>
  }

  export type ProductCreateManyBrandInputEnvelope = {
    data: ProductCreateManyBrandInput | ProductCreateManyBrandInput[]
    skipDuplicates?: boolean
  }

  export type ModelUpsertWithWhereUniqueWithoutBrandInput = {
    where: ModelWhereUniqueInput
    update: XOR<ModelUpdateWithoutBrandInput, ModelUncheckedUpdateWithoutBrandInput>
    create: XOR<ModelCreateWithoutBrandInput, ModelUncheckedCreateWithoutBrandInput>
  }

  export type ModelUpdateWithWhereUniqueWithoutBrandInput = {
    where: ModelWhereUniqueInput
    data: XOR<ModelUpdateWithoutBrandInput, ModelUncheckedUpdateWithoutBrandInput>
  }

  export type ModelUpdateManyWithWhereWithoutBrandInput = {
    where: ModelScalarWhereInput
    data: XOR<ModelUpdateManyMutationInput, ModelUncheckedUpdateManyWithoutBrandInput>
  }

  export type ModelScalarWhereInput = {
    AND?: ModelScalarWhereInput | ModelScalarWhereInput[]
    OR?: ModelScalarWhereInput[]
    NOT?: ModelScalarWhereInput | ModelScalarWhereInput[]
    id?: BigIntFilter<"Model"> | bigint | number
    name?: StringFilter<"Model"> | string
    brand_id?: BigIntFilter<"Model"> | bigint | number
  }

  export type ProductUpsertWithWhereUniqueWithoutBrandInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutBrandInput, ProductUncheckedUpdateWithoutBrandInput>
    create: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutBrandInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutBrandInput, ProductUncheckedUpdateWithoutBrandInput>
  }

  export type ProductUpdateManyWithWhereWithoutBrandInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutBrandInput>
  }

  export type BrandCreateWithoutModelsInput = {
    id?: bigint | number
    name: string
    logo: string
    products?: ProductCreateNestedManyWithoutBrandInput
  }

  export type BrandUncheckedCreateWithoutModelsInput = {
    id?: bigint | number
    name: string
    logo: string
    products?: ProductUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandCreateOrConnectWithoutModelsInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutModelsInput, BrandUncheckedCreateWithoutModelsInput>
  }

  export type ProductCreateWithoutModelInput = {
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    custom_model?: string | null
    price: number
    floor_price?: boolean
=======
    custom_model: string
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
    user: UserCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency?: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contact_phone: PhoneCreateNestedOneWithoutProductsInput
    admin?: AdminCreateNestedOneWithoutProducts_managedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemCreateNestedManyWithoutProductInput
=======
    top_expire_date: Date | string
    user: UserCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contactPhone: PhoneCreateNestedOneWithoutProductsInput
    admin: AdminCreateNestedOneWithoutProductsManagedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutModelInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutModelInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutModelInput, ProductUncheckedCreateWithoutModelInput>
  }

  export type ProductCreateManyModelInputEnvelope = {
    data: ProductCreateManyModelInput | ProductCreateManyModelInput[]
    skipDuplicates?: boolean
  }

  export type BrandUpsertWithoutModelsInput = {
    update: XOR<BrandUpdateWithoutModelsInput, BrandUncheckedUpdateWithoutModelsInput>
    create: XOR<BrandCreateWithoutModelsInput, BrandUncheckedCreateWithoutModelsInput>
    where?: BrandWhereInput
  }

  export type BrandUpdateToOneWithWhereWithoutModelsInput = {
    where?: BrandWhereInput
    data: XOR<BrandUpdateWithoutModelsInput, BrandUncheckedUpdateWithoutModelsInput>
  }

  export type BrandUpdateWithoutModelsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    products?: ProductUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateWithoutModelsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: StringFieldUpdateOperationsInput | string
    products?: ProductUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type ProductUpsertWithWhereUniqueWithoutModelInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutModelInput, ProductUncheckedUpdateWithoutModelInput>
    create: XOR<ProductCreateWithoutModelInput, ProductUncheckedCreateWithoutModelInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutModelInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutModelInput, ProductUncheckedUpdateWithoutModelInput>
  }

  export type ProductUpdateManyWithWhereWithoutModelInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutModelInput>
  }

  export type ProductCreateWithoutColorInput = {
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    custom_model?: string | null
    price: number
    floor_price?: boolean
=======
    custom_model: string
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
    user: UserCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    model?: ModelCreateNestedOneWithoutProductsInput
    currency?: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contact_phone: PhoneCreateNestedOneWithoutProductsInput
    admin?: AdminCreateNestedOneWithoutProducts_managedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemCreateNestedManyWithoutProductInput
=======
    top_expire_date: Date | string
    user: UserCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    model: ModelCreateNestedOneWithoutProductsInput
    currency: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contactPhone: PhoneCreateNestedOneWithoutProductsInput
    admin: AdminCreateNestedOneWithoutProductsManagedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutColorInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutColorInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutColorInput, ProductUncheckedCreateWithoutColorInput>
  }

  export type ProductCreateManyColorInputEnvelope = {
    data: ProductCreateManyColorInput | ProductCreateManyColorInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithWhereUniqueWithoutColorInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutColorInput, ProductUncheckedUpdateWithoutColorInput>
    create: XOR<ProductCreateWithoutColorInput, ProductUncheckedCreateWithoutColorInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutColorInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutColorInput, ProductUncheckedUpdateWithoutColorInput>
  }

  export type ProductUpdateManyWithWhereWithoutColorInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutColorInput>
  }

<<<<<<< HEAD
  export type UserCreateWithoutCurrencyInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp?: OTPCreateNestedOneWithoutUsersInput
    language?: LanguageCreateNestedOneWithoutUsersInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additional_phones?: PhoneCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemCreateNestedManyWithoutUserInput
=======
  export type UserCreateWithoutPreferredCurrencyInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp: OTPCreateNestedOneWithoutUsersInput
    language: LanguageCreateNestedOneWithoutUsersInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutUserInput
    comments?: CommentCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    blocks?: BlockCreateNestedManyWithoutUserInput
  }

<<<<<<< HEAD
  export type UserUncheckedCreateWithoutCurrencyInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    lang_id?: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additional_phones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
=======
  export type UserUncheckedCreateWithoutPreferredCurrencyInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    lang_id: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutUserInput
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    blocks?: BlockUncheckedCreateNestedManyWithoutUserInput
  }

<<<<<<< HEAD
  export type UserCreateOrConnectWithoutCurrencyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCurrencyInput, UserUncheckedCreateWithoutCurrencyInput>
  }

  export type UserCreateManyCurrencyInputEnvelope = {
    data: UserCreateManyCurrencyInput | UserCreateManyCurrencyInput[]
=======
  export type UserCreateOrConnectWithoutPreferredCurrencyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPreferredCurrencyInput, UserUncheckedCreateWithoutPreferredCurrencyInput>
  }

  export type UserCreateManyPreferredCurrencyInputEnvelope = {
    data: UserCreateManyPreferredCurrencyInput | UserCreateManyPreferredCurrencyInput[]
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutCurrencyInput = {
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    custom_model?: string | null
    price: number
    floor_price?: boolean
=======
    custom_model: string
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
    user: UserCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    model?: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contact_phone: PhoneCreateNestedOneWithoutProductsInput
    admin?: AdminCreateNestedOneWithoutProducts_managedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemCreateNestedManyWithoutProductInput
=======
    top_expire_date: Date | string
    user: UserCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    model: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contactPhone: PhoneCreateNestedOneWithoutProductsInput
    admin: AdminCreateNestedOneWithoutProductsManagedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutCurrencyInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutCurrencyInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCurrencyInput, ProductUncheckedCreateWithoutCurrencyInput>
  }

  export type ProductCreateManyCurrencyInputEnvelope = {
    data: ProductCreateManyCurrencyInput | ProductCreateManyCurrencyInput[]
    skipDuplicates?: boolean
  }

<<<<<<< HEAD
  export type UserUpsertWithWhereUniqueWithoutCurrencyInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCurrencyInput, UserUncheckedUpdateWithoutCurrencyInput>
    create: XOR<UserCreateWithoutCurrencyInput, UserUncheckedCreateWithoutCurrencyInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCurrencyInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCurrencyInput, UserUncheckedUpdateWithoutCurrencyInput>
  }

  export type UserUpdateManyWithWhereWithoutCurrencyInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCurrencyInput>
=======
  export type UserUpsertWithWhereUniqueWithoutPreferredCurrencyInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutPreferredCurrencyInput, UserUncheckedUpdateWithoutPreferredCurrencyInput>
    create: XOR<UserCreateWithoutPreferredCurrencyInput, UserUncheckedCreateWithoutPreferredCurrencyInput>
  }

  export type UserUpdateWithWhereUniqueWithoutPreferredCurrencyInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutPreferredCurrencyInput, UserUncheckedUpdateWithoutPreferredCurrencyInput>
  }

  export type UserUpdateManyWithWhereWithoutPreferredCurrencyInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutPreferredCurrencyInput>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductUpsertWithWhereUniqueWithoutCurrencyInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutCurrencyInput, ProductUncheckedUpdateWithoutCurrencyInput>
    create: XOR<ProductCreateWithoutCurrencyInput, ProductUncheckedCreateWithoutCurrencyInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutCurrencyInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutCurrencyInput, ProductUncheckedUpdateWithoutCurrencyInput>
  }

  export type ProductUpdateManyWithWhereWithoutCurrencyInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutCurrencyInput>
  }

  export type LanguageCreateWithoutAdminsInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    flag_url: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    users?: UserCreateNestedManyWithoutLanguageInput
  }

  export type LanguageUncheckedCreateWithoutAdminsInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    flag_url: string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    users?: UserUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutAdminsInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutAdminsInput, LanguageUncheckedCreateWithoutAdminsInput>
  }

  export type BlockCreateWithoutAdminInput = {
    id?: bigint | number
    reason: string
<<<<<<< HEAD
    expire_date: Date | string
=======
    expireDate: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user: UserCreateNestedOneWithoutBlocksInput
  }

  export type BlockUncheckedCreateWithoutAdminInput = {
    id?: bigint | number
    user_id: bigint | number
    reason: string
<<<<<<< HEAD
    expire_date: Date | string
=======
    expireDate: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockCreateOrConnectWithoutAdminInput = {
    where: BlockWhereUniqueInput
    create: XOR<BlockCreateWithoutAdminInput, BlockUncheckedCreateWithoutAdminInput>
  }

  export type BlockCreateManyAdminInputEnvelope = {
    data: BlockCreateManyAdminInput | BlockCreateManyAdminInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutAdminInput = {
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    custom_model?: string | null
    price: number
    floor_price?: boolean
=======
    custom_model: string
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
    user: UserCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    model?: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency?: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contact_phone: PhoneCreateNestedOneWithoutProductsInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemCreateNestedManyWithoutProductInput
=======
    top_expire_date: Date | string
    user: UserCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    model: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contactPhone: PhoneCreateNestedOneWithoutProductsInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutAdminInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
=======
    top_expire_date: Date | string
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutAdminInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutAdminInput, ProductUncheckedCreateWithoutAdminInput>
  }

  export type ProductCreateManyAdminInputEnvelope = {
    data: ProductCreateManyAdminInput | ProductCreateManyAdminInput[]
    skipDuplicates?: boolean
  }

  export type LanguageUpsertWithoutAdminsInput = {
    update: XOR<LanguageUpdateWithoutAdminsInput, LanguageUncheckedUpdateWithoutAdminsInput>
    create: XOR<LanguageCreateWithoutAdminsInput, LanguageUncheckedCreateWithoutAdminsInput>
    where?: LanguageWhereInput
  }

  export type LanguageUpdateToOneWithWhereWithoutAdminsInput = {
    where?: LanguageWhereInput
    data: XOR<LanguageUpdateWithoutAdminsInput, LanguageUncheckedUpdateWithoutAdminsInput>
  }

  export type LanguageUpdateWithoutAdminsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    flag_url?: StringFieldUpdateOperationsInput | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    users?: UserUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateWithoutAdminsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    flag_url?: StringFieldUpdateOperationsInput | string
=======
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    users?: UserUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type BlockUpsertWithWhereUniqueWithoutAdminInput = {
    where: BlockWhereUniqueInput
    update: XOR<BlockUpdateWithoutAdminInput, BlockUncheckedUpdateWithoutAdminInput>
    create: XOR<BlockCreateWithoutAdminInput, BlockUncheckedCreateWithoutAdminInput>
  }

  export type BlockUpdateWithWhereUniqueWithoutAdminInput = {
    where: BlockWhereUniqueInput
    data: XOR<BlockUpdateWithoutAdminInput, BlockUncheckedUpdateWithoutAdminInput>
  }

  export type BlockUpdateManyWithWhereWithoutAdminInput = {
    where: BlockScalarWhereInput
    data: XOR<BlockUpdateManyMutationInput, BlockUncheckedUpdateManyWithoutAdminInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutAdminInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutAdminInput, ProductUncheckedUpdateWithoutAdminInput>
    create: XOR<ProductCreateWithoutAdminInput, ProductUncheckedCreateWithoutAdminInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutAdminInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutAdminInput, ProductUncheckedUpdateWithoutAdminInput>
  }

  export type ProductUpdateManyWithWhereWithoutAdminInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutAdminInput>
  }

  export type UserCreateWithoutBlocksInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp?: OTPCreateNestedOneWithoutUsersInput
    language?: LanguageCreateNestedOneWithoutUsersInput
    currency: CurrencyCreateNestedOneWithoutUser_preferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additional_phones?: PhoneCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp: OTPCreateNestedOneWithoutUsersInput
    language: LanguageCreateNestedOneWithoutUsersInput
    preferredCurrency: CurrencyCreateNestedOneWithoutUserPreferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutUserInput
    comments?: CommentCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutBlocksInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    lang_id?: bigint | number
    currency_id: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additional_phones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    lang_id: bigint | number
    preferredCurrencyId: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutUserInput
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutBlocksInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBlocksInput, UserUncheckedCreateWithoutBlocksInput>
  }

<<<<<<< HEAD
  export type AdminCreateWithoutBlocks_issuedInput = {
=======
  export type AdminCreateWithoutBlocksIssuedInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    password: string
<<<<<<< HEAD
    avatar?: string | null
    refresh_token?: string | null
    is_creator?: boolean
    language?: LanguageCreateNestedOneWithoutAdminsInput
    products_managed?: ProductCreateNestedManyWithoutAdminInput
  }

  export type AdminUncheckedCreateWithoutBlocks_issuedInput = {
=======
    avatar: string
    refresh_token: string
    is_creator?: boolean
    language: LanguageCreateNestedOneWithoutAdminsInput
    productsManaged?: ProductCreateNestedManyWithoutAdminInput
  }

  export type AdminUncheckedCreateWithoutBlocksIssuedInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    password: string
<<<<<<< HEAD
    avatar?: string | null
    refresh_token?: string | null
    lang_id?: bigint | number
    is_creator?: boolean
    products_managed?: ProductUncheckedCreateNestedManyWithoutAdminInput
  }

  export type AdminCreateOrConnectWithoutBlocks_issuedInput = {
    where: AdminWhereUniqueInput
    create: XOR<AdminCreateWithoutBlocks_issuedInput, AdminUncheckedCreateWithoutBlocks_issuedInput>
=======
    avatar: string
    refresh_token: string
    lang_id: bigint | number
    is_creator?: boolean
    productsManaged?: ProductUncheckedCreateNestedManyWithoutAdminInput
  }

  export type AdminCreateOrConnectWithoutBlocksIssuedInput = {
    where: AdminWhereUniqueInput
    create: XOR<AdminCreateWithoutBlocksIssuedInput, AdminUncheckedCreateWithoutBlocksIssuedInput>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserUpsertWithoutBlocksInput = {
    update: XOR<UserUpdateWithoutBlocksInput, UserUncheckedUpdateWithoutBlocksInput>
    create: XOR<UserCreateWithoutBlocksInput, UserUncheckedCreateWithoutBlocksInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBlocksInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBlocksInput, UserUncheckedUpdateWithoutBlocksInput>
  }

  export type UserUpdateWithoutBlocksInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutUser_preferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneRequiredWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    preferredCurrency?: CurrencyUpdateOneRequiredWithoutUserPreferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutUserNestedInput
    comments?: CommentUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutBlocksInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutUserNestedInput
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
  }

<<<<<<< HEAD
  export type AdminUpsertWithoutBlocks_issuedInput = {
    update: XOR<AdminUpdateWithoutBlocks_issuedInput, AdminUncheckedUpdateWithoutBlocks_issuedInput>
    create: XOR<AdminCreateWithoutBlocks_issuedInput, AdminUncheckedCreateWithoutBlocks_issuedInput>
    where?: AdminWhereInput
  }

  export type AdminUpdateToOneWithWhereWithoutBlocks_issuedInput = {
    where?: AdminWhereInput
    data: XOR<AdminUpdateWithoutBlocks_issuedInput, AdminUncheckedUpdateWithoutBlocks_issuedInput>
  }

  export type AdminUpdateWithoutBlocks_issuedInput = {
=======
  export type AdminUpsertWithoutBlocksIssuedInput = {
    update: XOR<AdminUpdateWithoutBlocksIssuedInput, AdminUncheckedUpdateWithoutBlocksIssuedInput>
    create: XOR<AdminCreateWithoutBlocksIssuedInput, AdminUncheckedCreateWithoutBlocksIssuedInput>
    where?: AdminWhereInput
  }

  export type AdminUpdateToOneWithWhereWithoutBlocksIssuedInput = {
    where?: AdminWhereInput
    data: XOR<AdminUpdateWithoutBlocksIssuedInput, AdminUncheckedUpdateWithoutBlocksIssuedInput>
  }

  export type AdminUpdateWithoutBlocksIssuedInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    language?: LanguageUpdateOneRequiredWithoutAdminsNestedInput
    products_managed?: ProductUpdateManyWithoutAdminNestedInput
  }

  export type AdminUncheckedUpdateWithoutBlocks_issuedInput = {
=======
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    language?: LanguageUpdateOneRequiredWithoutAdminsNestedInput
    productsManaged?: ProductUpdateManyWithoutAdminNestedInput
  }

  export type AdminUncheckedUpdateWithoutBlocksIssuedInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    products_managed?: ProductUncheckedUpdateManyWithoutAdminNestedInput
=======
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    productsManaged?: ProductUncheckedUpdateManyWithoutAdminNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserCreateWithoutPaymentsInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp?: OTPCreateNestedOneWithoutUsersInput
    language?: LanguageCreateNestedOneWithoutUsersInput
    currency: CurrencyCreateNestedOneWithoutUser_preferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additional_phones?: PhoneCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp: OTPCreateNestedOneWithoutUsersInput
    language: LanguageCreateNestedOneWithoutUsersInput
    preferredCurrency: CurrencyCreateNestedOneWithoutUserPreferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutUserInput
    comments?: CommentCreateNestedManyWithoutUserInput
    blocks?: BlockCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPaymentsInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    lang_id?: bigint | number
    currency_id: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additional_phones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    lang_id: bigint | number
    preferredCurrencyId: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutUserInput
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    blocks?: BlockUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPaymentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
  }

  export type PaymentMethodCreateWithoutPaymentsInput = {
    id?: bigint | number
    name: string
  }

  export type PaymentMethodUncheckedCreateWithoutPaymentsInput = {
    id?: bigint | number
    name: string
  }

  export type PaymentMethodCreateOrConnectWithoutPaymentsInput = {
    where: PaymentMethodWhereUniqueInput
    create: XOR<PaymentMethodCreateWithoutPaymentsInput, PaymentMethodUncheckedCreateWithoutPaymentsInput>
  }

  export type UserUpsertWithoutPaymentsInput = {
    update: XOR<UserUpdateWithoutPaymentsInput, UserUncheckedUpdateWithoutPaymentsInput>
    create: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPaymentsInput, UserUncheckedUpdateWithoutPaymentsInput>
  }

  export type UserUpdateWithoutPaymentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutUser_preferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneRequiredWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    preferredCurrency?: CurrencyUpdateOneRequiredWithoutUserPreferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutUserNestedInput
    comments?: CommentUpdateManyWithoutUserNestedInput
    blocks?: BlockUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPaymentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutUserNestedInput
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    blocks?: BlockUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PaymentMethodUpsertWithoutPaymentsInput = {
    update: XOR<PaymentMethodUpdateWithoutPaymentsInput, PaymentMethodUncheckedUpdateWithoutPaymentsInput>
    create: XOR<PaymentMethodCreateWithoutPaymentsInput, PaymentMethodUncheckedCreateWithoutPaymentsInput>
    where?: PaymentMethodWhereInput
  }

  export type PaymentMethodUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: PaymentMethodWhereInput
    data: XOR<PaymentMethodUpdateWithoutPaymentsInput, PaymentMethodUncheckedUpdateWithoutPaymentsInput>
  }

  export type PaymentMethodUpdateWithoutPaymentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentMethodUncheckedUpdateWithoutPaymentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateWithoutCommentsInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp?: OTPCreateNestedOneWithoutUsersInput
    language?: LanguageCreateNestedOneWithoutUsersInput
    currency: CurrencyCreateNestedOneWithoutUser_preferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additional_phones?: PhoneCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp: OTPCreateNestedOneWithoutUsersInput
    language: LanguageCreateNestedOneWithoutUsersInput
    preferredCurrency: CurrencyCreateNestedOneWithoutUserPreferencesInput
    emails?: EmailCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressCreateNestedManyWithoutUserInput
    products?: ProductCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    blocks?: BlockCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCommentsInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    lang_id?: bigint | number
    currency_id: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additional_phones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favourite_items?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    lang_id: bigint | number
    preferredCurrencyId: bigint | number
    emails?: EmailUncheckedCreateNestedManyWithoutUserInput
    additionalPhones?: PhoneUncheckedCreateNestedManyWithoutUserInput
    favouriteItems?: FavouriteItemUncheckedCreateNestedManyWithoutUserInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    products?: ProductUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    blocks?: BlockUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCommentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
  }

  export type ProductCreateWithoutCommentsInput = {
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    custom_model?: string | null
    price: number
    floor_price?: boolean
=======
    custom_model: string
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
    user: UserCreateNestedOneWithoutProductsInput
    brand?: BrandCreateNestedOneWithoutProductsInput
    model?: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency?: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contact_phone: PhoneCreateNestedOneWithoutProductsInput
    admin?: AdminCreateNestedOneWithoutProducts_managedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemCreateNestedManyWithoutProductInput
=======
    top_expire_date: Date | string
    user: UserCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    model: ModelCreateNestedOneWithoutProductsInput
    color: ColorCreateNestedOneWithoutProductsInput
    currency: CurrencyCreateNestedOneWithoutProductsInput
    address: AddressCreateNestedOneWithoutProductsInput
    contactPhone: PhoneCreateNestedOneWithoutProductsInput
    admin: AdminCreateNestedOneWithoutProductsManagedInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductUncheckedCreateWithoutCommentsInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favourited_by?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    favouritedBy?: FavouriteItemUncheckedCreateNestedManyWithoutProductInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductCreateOrConnectWithoutCommentsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCommentsInput, ProductUncheckedCreateWithoutCommentsInput>
  }

  export type UserUpsertWithoutCommentsInput = {
    update: XOR<UserUpdateWithoutCommentsInput, UserUncheckedUpdateWithoutCommentsInput>
    create: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCommentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCommentsInput, UserUncheckedUpdateWithoutCommentsInput>
  }

  export type UserUpdateWithoutCommentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutUser_preferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneRequiredWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    preferredCurrency?: CurrencyUpdateOneRequiredWithoutUserPreferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    blocks?: BlockUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCommentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    blocks?: BlockUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProductUpsertWithoutCommentsInput = {
    update: XOR<ProductUpdateWithoutCommentsInput, ProductUncheckedUpdateWithoutCommentsInput>
    create: XOR<ProductCreateWithoutCommentsInput, ProductUncheckedCreateWithoutCommentsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutCommentsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutCommentsInput, ProductUncheckedUpdateWithoutCommentsInput>
  }

  export type ProductUpdateWithoutCommentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    model?: ModelUpdateOneWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contact_phone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneWithoutProducts_managedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUpdateManyWithoutProductNestedInput
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    model?: ModelUpdateOneRequiredWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contactPhone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneRequiredWithoutProductsManagedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductUncheckedUpdateWithoutCommentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type PaymentCreateWithoutPayment_methodInput = {
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type PaymentCreateWithoutPaymentMethodInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    amount: number
    user: UserCreateNestedOneWithoutPaymentsInput
  }

<<<<<<< HEAD
  export type PaymentUncheckedCreateWithoutPayment_methodInput = {
=======
  export type PaymentUncheckedCreateWithoutPaymentMethodInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    user_id: bigint | number
    amount: number
  }

<<<<<<< HEAD
  export type PaymentCreateOrConnectWithoutPayment_methodInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutPayment_methodInput, PaymentUncheckedCreateWithoutPayment_methodInput>
  }

  export type PaymentCreateManyPayment_methodInputEnvelope = {
    data: PaymentCreateManyPayment_methodInput | PaymentCreateManyPayment_methodInput[]
    skipDuplicates?: boolean
  }

  export type PaymentUpsertWithWhereUniqueWithoutPayment_methodInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutPayment_methodInput, PaymentUncheckedUpdateWithoutPayment_methodInput>
    create: XOR<PaymentCreateWithoutPayment_methodInput, PaymentUncheckedCreateWithoutPayment_methodInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutPayment_methodInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutPayment_methodInput, PaymentUncheckedUpdateWithoutPayment_methodInput>
  }

  export type PaymentUpdateManyWithWhereWithoutPayment_methodInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutPayment_methodInput>
=======
  export type PaymentCreateOrConnectWithoutPaymentMethodInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutPaymentMethodInput, PaymentUncheckedCreateWithoutPaymentMethodInput>
  }

  export type PaymentCreateManyPaymentMethodInputEnvelope = {
    data: PaymentCreateManyPaymentMethodInput | PaymentCreateManyPaymentMethodInput[]
    skipDuplicates?: boolean
  }

  export type PaymentUpsertWithWhereUniqueWithoutPaymentMethodInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutPaymentMethodInput, PaymentUncheckedUpdateWithoutPaymentMethodInput>
    create: XOR<PaymentCreateWithoutPaymentMethodInput, PaymentUncheckedCreateWithoutPaymentMethodInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutPaymentMethodInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutPaymentMethodInput, PaymentUncheckedUpdateWithoutPaymentMethodInput>
  }

  export type PaymentUpdateManyWithWhereWithoutPaymentMethodInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutPaymentMethodInput>
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type EmailCreateManyUserInput = {
    id?: bigint | number
    email: string
  }

  export type PhoneCreateManyUserInput = {
    id?: bigint | number
    phone: string
  }

  export type FavouriteItemCreateManyUserInput = {
    id?: bigint | number
    product_id: bigint | number
  }

  export type AddressCreateManyUserInput = {
    id?: bigint | number
    name: string
<<<<<<< HEAD
    address_value: bigint | number
=======
    addressValue: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat: string
    long: string
    is_active: boolean
  }

  export type ProductCreateManyUserInput = {
    id?: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type CommentCreateManyUserInput = {
    id?: bigint | number
    product_id: bigint | number
    text: string
  }

  export type PaymentCreateManyUserInput = {
    id?: bigint | number
    amount: number
    payment_method_id: bigint | number
  }

  export type BlockCreateManyUserInput = {
    id?: bigint | number
    admin_id: bigint | number
    reason: string
<<<<<<< HEAD
    expire_date: Date | string
=======
    expireDate: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type EmailUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    email?: StringFieldUpdateOperationsInput | string
  }

  export type EmailUncheckedUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    email?: StringFieldUpdateOperationsInput | string
  }

  export type EmailUncheckedUpdateManyWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    email?: StringFieldUpdateOperationsInput | string
  }

  export type PhoneUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    products?: ProductUpdateManyWithoutContact_phoneNestedInput
=======
    products?: ProductUpdateManyWithoutContactPhoneNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PhoneUncheckedUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    products?: ProductUncheckedUpdateManyWithoutContact_phoneNestedInput
=======
    products?: ProductUncheckedUpdateManyWithoutContactPhoneNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PhoneUncheckedUpdateManyWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone?: StringFieldUpdateOperationsInput | string
  }

  export type FavouriteItemUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
<<<<<<< HEAD
    product?: ProductUpdateOneRequiredWithoutFavourited_byNestedInput
=======
    product?: ProductUpdateOneRequiredWithoutFavouritedByNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type FavouriteItemUncheckedUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type FavouriteItemUncheckedUpdateManyWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type AddressUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    address_value?: BigIntFieldUpdateOperationsInput | bigint | number
=======
    addressValue?: BigIntFieldUpdateOperationsInput | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: StringFieldUpdateOperationsInput | string
    long?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    products?: ProductUpdateManyWithoutAddressNestedInput
  }

  export type AddressUncheckedUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    address_value?: BigIntFieldUpdateOperationsInput | bigint | number
=======
    addressValue?: BigIntFieldUpdateOperationsInput | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: StringFieldUpdateOperationsInput | string
    long?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    products?: ProductUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type AddressUncheckedUpdateManyWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    address_value?: BigIntFieldUpdateOperationsInput | bigint | number
=======
    addressValue?: BigIntFieldUpdateOperationsInput | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lat?: StringFieldUpdateOperationsInput | string
    long?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    brand?: BrandUpdateOneWithoutProductsNestedInput
    model?: ModelUpdateOneWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contact_phone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneWithoutProducts_managedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUpdateManyWithoutProductNestedInput
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    model?: ModelUpdateOneRequiredWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contactPhone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneRequiredWithoutProductsManagedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type CommentUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    text?: StringFieldUpdateOperationsInput | string
    product?: ProductUpdateOneRequiredWithoutCommentsNestedInput
  }

  export type CommentUncheckedUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    text?: StringFieldUpdateOperationsInput | string
  }

  export type CommentUncheckedUpdateManyWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    text?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: FloatFieldUpdateOperationsInput | number
<<<<<<< HEAD
    payment_method?: PaymentMethodUpdateOneRequiredWithoutPaymentsNestedInput
=======
    paymentMethod?: PaymentMethodUpdateOneRequiredWithoutPaymentsNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type PaymentUncheckedUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: FloatFieldUpdateOperationsInput | number
    payment_method_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type PaymentUncheckedUpdateManyWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: FloatFieldUpdateOperationsInput | number
    payment_method_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type BlockUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    reason?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    admin?: AdminUpdateOneRequiredWithoutBlocks_issuedNestedInput
=======
    expireDate?: DateTimeFieldUpdateOperationsInput | Date | string
    admin?: AdminUpdateOneRequiredWithoutBlocksIssuedNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockUncheckedUpdateWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    reason?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
=======
    expireDate?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockUncheckedUpdateManyWithoutUserInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    reason?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
=======
    expireDate?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserCreateManyOtpInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    lang_id?: bigint | number
    currency_id: bigint | number
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    lang_id: bigint | number
    preferredCurrencyId: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserUpdateWithoutOtpInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutUser_preferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    preferredCurrency?: CurrencyUpdateOneRequiredWithoutUserPreferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutUserNestedInput
    comments?: CommentUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    blocks?: BlockUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutOtpInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutUserNestedInput
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    blocks?: BlockUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutOtpInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type ProductCreateManyContact_phoneInput = {
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type ProductCreateManyContactPhoneInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
  }

  export type ProductUpdateWithoutContact_phoneInput = {
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
  }

  export type ProductUpdateWithoutContactPhoneInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    model?: ModelUpdateOneWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneWithoutProducts_managedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUpdateManyWithoutProductNestedInput
    comments?: CommentUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutContact_phoneInput = {
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    model?: ModelUpdateOneRequiredWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneRequiredWithoutProductsManagedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUpdateManyWithoutProductNestedInput
    comments?: CommentUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutContactPhoneInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
    comments?: CommentUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutContact_phoneInput = {
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
    comments?: CommentUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutContactPhoneInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductCreateManyAddressInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductUpdateWithoutAddressInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    model?: ModelUpdateOneWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    contact_phone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneWithoutProducts_managedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUpdateManyWithoutProductNestedInput
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    model?: ModelUpdateOneRequiredWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    contactPhone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneRequiredWithoutProductsManagedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutAddressInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutAddressInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type UserCreateManyLanguageInput = {
    id?: bigint | number
    name: string
    surname: string
<<<<<<< HEAD
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    currency_id: bigint | number
=======
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    preferredCurrencyId: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type AdminCreateManyLanguageInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    password: string
<<<<<<< HEAD
    avatar?: string | null
    refresh_token?: string | null
=======
    avatar: string
    refresh_token: string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_creator?: boolean
  }

  export type UserUpdateWithoutLanguageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneWithoutUsersNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutUser_preferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneRequiredWithoutUsersNestedInput
    preferredCurrency?: CurrencyUpdateOneRequiredWithoutUserPreferencesNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutUserNestedInput
    comments?: CommentUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    blocks?: BlockUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutLanguageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutUserNestedInput
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    blocks?: BlockUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutLanguageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
=======
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
    preferredCurrencyId?: BigIntFieldUpdateOperationsInput | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type AdminUpdateWithoutLanguageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    blocks_issued?: BlockUpdateManyWithoutAdminNestedInput
    products_managed?: ProductUpdateManyWithoutAdminNestedInput
=======
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    blocksIssued?: BlockUpdateManyWithoutAdminNestedInput
    productsManaged?: ProductUpdateManyWithoutAdminNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type AdminUncheckedUpdateWithoutLanguageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    blocks_issued?: BlockUncheckedUpdateManyWithoutAdminNestedInput
    products_managed?: ProductUncheckedUpdateManyWithoutAdminNestedInput
=======
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    is_creator?: BoolFieldUpdateOperationsInput | boolean
    blocksIssued?: BlockUncheckedUpdateManyWithoutAdminNestedInput
    productsManaged?: ProductUncheckedUpdateManyWithoutAdminNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type AdminUncheckedUpdateManyWithoutLanguageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
=======
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_creator?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductImageCreateManyProductInput = {
    id?: bigint | number
    url: string
    is_main?: boolean
  }

  export type FavouriteItemCreateManyProductInput = {
    id?: bigint | number
    user_id: bigint | number
  }

  export type CommentCreateManyProductInput = {
    id?: bigint | number
    user_id: bigint | number
    text: string
  }

  export type ProductImageUpdateWithoutProductInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    is_main?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductImageUncheckedUpdateWithoutProductInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    is_main?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductImageUncheckedUpdateManyWithoutProductInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    is_main?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FavouriteItemUpdateWithoutProductInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
<<<<<<< HEAD
    user?: UserUpdateOneRequiredWithoutFavourite_itemsNestedInput
=======
    user?: UserUpdateOneRequiredWithoutFavouriteItemsNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type FavouriteItemUncheckedUpdateWithoutProductInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type FavouriteItemUncheckedUpdateManyWithoutProductInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type CommentUpdateWithoutProductInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    text?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutCommentsNestedInput
  }

  export type CommentUncheckedUpdateWithoutProductInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    text?: StringFieldUpdateOperationsInput | string
  }

  export type CommentUncheckedUpdateManyWithoutProductInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    text?: StringFieldUpdateOperationsInput | string
  }

  export type ModelCreateManyBrandInput = {
    id?: bigint | number
    name: string
  }

  export type ProductCreateManyBrandInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ModelUpdateWithoutBrandInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    products?: ProductUpdateManyWithoutModelNestedInput
  }

  export type ModelUncheckedUpdateWithoutBrandInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    products?: ProductUncheckedUpdateManyWithoutModelNestedInput
  }

  export type ModelUncheckedUpdateManyWithoutBrandInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type ProductUpdateWithoutBrandInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    model?: ModelUpdateOneWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contact_phone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneWithoutProducts_managedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUpdateManyWithoutProductNestedInput
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    model?: ModelUpdateOneRequiredWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contactPhone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneRequiredWithoutProductsManagedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutBrandInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutBrandInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductCreateManyModelInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductUpdateWithoutModelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contact_phone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneWithoutProducts_managedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUpdateManyWithoutProductNestedInput
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contactPhone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneRequiredWithoutProductsManagedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutModelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutModelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductCreateManyColorInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductUpdateWithoutColorInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    model?: ModelUpdateOneWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contact_phone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneWithoutProducts_managedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUpdateManyWithoutProductNestedInput
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    model?: ModelUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contactPhone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneRequiredWithoutProductsManagedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutColorInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutColorInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserCreateManyCurrencyInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date?: Date | string | null
    phone: string
    avatar?: string | null
    refresh_token?: string | null
    balance?: number
    otp_id?: bigint | number | null
    lang_id?: bigint | number
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateManyPreferredCurrencyInput = {
    id?: bigint | number
    name: string
    surname: string
    birth_date: Date | string
    phone: string
    avatar: string
    refresh_token: string
    balance: number
    otp_id: bigint | number
    lang_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductCreateManyCurrencyInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
<<<<<<< HEAD
    admin_id?: bigint | number | null
    is_top?: boolean
    top_expire_date?: Date | string | null
  }

  export type UserUpdateWithoutCurrencyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUpdateManyWithoutUserNestedInput
=======
    admin_id: bigint | number
    is_top?: boolean
    top_expire_date: Date | string
  }

  export type UserUpdateWithoutPreferredCurrencyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp?: OTPUpdateOneRequiredWithoutUsersNestedInput
    language?: LanguageUpdateOneRequiredWithoutUsersNestedInput
    emails?: EmailUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUpdateManyWithoutUserNestedInput
    products?: ProductUpdateManyWithoutUserNestedInput
    comments?: CommentUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    blocks?: BlockUpdateManyWithoutUserNestedInput
  }

<<<<<<< HEAD
  export type UserUncheckedUpdateWithoutCurrencyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additional_phones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favourite_items?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
=======
  export type UserUncheckedUpdateWithoutPreferredCurrencyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
    emails?: EmailUncheckedUpdateManyWithoutUserNestedInput
    additionalPhones?: PhoneUncheckedUpdateManyWithoutUserNestedInput
    favouriteItems?: FavouriteItemUncheckedUpdateManyWithoutUserNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    products?: ProductUncheckedUpdateManyWithoutUserNestedInput
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    blocks?: BlockUncheckedUpdateManyWithoutUserNestedInput
  }

<<<<<<< HEAD
  export type UserUncheckedUpdateManyWithoutCurrencyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
=======
  export type UserUncheckedUpdateManyWithoutPreferredCurrencyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    birth_date?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    refresh_token?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    otp_id?: BigIntFieldUpdateOperationsInput | bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    lang_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type ProductUpdateWithoutCurrencyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    model?: ModelUpdateOneWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contact_phone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneWithoutProducts_managedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUpdateManyWithoutProductNestedInput
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    model?: ModelUpdateOneRequiredWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contactPhone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    admin?: AdminUpdateOneRequiredWithoutProductsManagedNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutCurrencyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutCurrencyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    admin_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
=======
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_top?: BoolFieldUpdateOperationsInput | boolean
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockCreateManyAdminInput = {
    id?: bigint | number
    user_id: bigint | number
    reason: string
<<<<<<< HEAD
    expire_date: Date | string
=======
    expireDate: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductCreateManyAdminInput = {
    id?: bigint | number
    user_id: bigint | number
    title: string
    description: string
    year: number
<<<<<<< HEAD
    brand_id?: bigint | number | null
    model_id?: bigint | number | null
    custom_model?: string | null
    color_id: bigint | number
    price: number
    floor_price?: boolean
    currency_id?: bigint | number
=======
    brand_id: bigint | number
    model_id: bigint | number
    custom_model: string
    color_id: bigint | number
    price: number
    floor_price: boolean
    currency_id: bigint | number
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    is_new: boolean
    has_document: boolean
    address_id: bigint | number
    phone_id: bigint | number
    storage: bigint | number
    ram: bigint | number
    views?: bigint | number
    is_archived?: boolean
    is_sold?: boolean
    is_checked?: boolean
    is_top?: boolean
<<<<<<< HEAD
    top_expire_date?: Date | string | null
=======
    top_expire_date: Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockUpdateWithoutAdminInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    reason?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
=======
    expireDate?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    user?: UserUpdateOneRequiredWithoutBlocksNestedInput
  }

  export type BlockUncheckedUpdateWithoutAdminInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    reason?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
=======
    expireDate?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type BlockUncheckedUpdateManyWithoutAdminInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    reason?: StringFieldUpdateOperationsInput | string
<<<<<<< HEAD
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
=======
    expireDate?: DateTimeFieldUpdateOperationsInput | Date | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
  }

  export type ProductUpdateWithoutAdminInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneWithoutProductsNestedInput
    model?: ModelUpdateOneWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contact_phone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUpdateManyWithoutProductNestedInput
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    model?: ModelUpdateOneRequiredWithoutProductsNestedInput
    color?: ColorUpdateOneRequiredWithoutProductsNestedInput
    currency?: CurrencyUpdateOneRequiredWithoutProductsNestedInput
    address?: AddressUpdateOneRequiredWithoutProductsNestedInput
    contactPhone?: PhoneUpdateOneRequiredWithoutProductsNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutAdminInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favourited_by?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    favouritedBy?: FavouriteItemUncheckedUpdateManyWithoutProductNestedInput
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    comments?: CommentUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutAdminInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
<<<<<<< HEAD
    brand_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    model_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    custom_model?: NullableStringFieldUpdateOperationsInput | string | null
=======
    brand_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    custom_model?: StringFieldUpdateOperationsInput | string
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    color_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: FloatFieldUpdateOperationsInput | number
    floor_price?: BoolFieldUpdateOperationsInput | boolean
    currency_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_new?: BoolFieldUpdateOperationsInput | boolean
    has_document?: BoolFieldUpdateOperationsInput | boolean
    address_id?: BigIntFieldUpdateOperationsInput | bigint | number
    phone_id?: BigIntFieldUpdateOperationsInput | bigint | number
    storage?: BigIntFieldUpdateOperationsInput | bigint | number
    ram?: BigIntFieldUpdateOperationsInput | bigint | number
    views?: BigIntFieldUpdateOperationsInput | bigint | number
    is_archived?: BoolFieldUpdateOperationsInput | boolean
    is_sold?: BoolFieldUpdateOperationsInput | boolean
    is_checked?: BoolFieldUpdateOperationsInput | boolean
    is_top?: BoolFieldUpdateOperationsInput | boolean
<<<<<<< HEAD
    top_expire_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentCreateManyPayment_methodInput = {
=======
    top_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentCreateManyPaymentMethodInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: bigint | number
    user_id: bigint | number
    amount: number
  }

<<<<<<< HEAD
  export type PaymentUpdateWithoutPayment_methodInput = {
=======
  export type PaymentUpdateWithoutPaymentMethodInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: FloatFieldUpdateOperationsInput | number
    user?: UserUpdateOneRequiredWithoutPaymentsNestedInput
  }

<<<<<<< HEAD
  export type PaymentUncheckedUpdateWithoutPayment_methodInput = {
=======
  export type PaymentUncheckedUpdateWithoutPaymentMethodInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: FloatFieldUpdateOperationsInput | number
  }

<<<<<<< HEAD
  export type PaymentUncheckedUpdateManyWithoutPayment_methodInput = {
=======
  export type PaymentUncheckedUpdateManyWithoutPaymentMethodInput = {
>>>>>>> b20a6394698a42480cfe66dd0444c030c89c2dbd
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: FloatFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}