{
  "openapi": "3.0.0",
  "paths": {
    "/product": {
      "post": {
        "operationId": "ProductController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateProductDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Product"]
      },
      "get": {
        "operationId": "ProductController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Product"]
      }
    },
    "/product/user/{id}": {
      "get": {
        "operationId": "ProductController_findUserProducts",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Product"]
      }
    },
    "/product/brand/{id}": {
      "get": {
        "operationId": "ProductController_findByBrandId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Product"]
      }
    },
    "/product/model/{id}": {
      "get": {
        "operationId": "ProductController_findByModelId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Product"]
      }
    },
    "/product/{id}": {
      "get": {
        "operationId": "ProductController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Product"]
      },
      "patch": {
        "operationId": "ProductController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateProductDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Product"]
      },
      "delete": {
        "operationId": "ProductController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Product"]
      }
    },
    "/product/upgrade/{id}": {
      "patch": {
        "operationId": "ProductController_upgrade",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpgradeProductDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Product"]
      }
    },
    "/user": {
      "post": {
        "operationId": "UserController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUserDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["User"]
      },
      "get": {
        "operationId": "UserController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["User"]
      }
    },
    "/user/me": {
      "get": {
        "operationId": "UserController_me",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["User"]
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UserController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["User"]
      },
      "patch": {
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["User"]
      },
      "delete": {
        "operationId": "UserController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["User"]
      }
    },
    "/user/profile/{id}": {
      "get": {
        "operationId": "UserController_profile",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["User"]
      }
    },
    "/user/password/{id}": {
      "patch": {
        "operationId": "UserController_updatePassword",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePasswordDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["User"]
      }
    },
    "/otp": {
      "post": {
        "operationId": "OtpController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateOtpDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Otp"]
      },
      "get": {
        "operationId": "OtpController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Otp"]
      }
    },
    "/otp/{id}": {
      "get": {
        "operationId": "OtpController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Otp"]
      },
      "patch": {
        "operationId": "OtpController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateOtpDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Otp"]
      },
      "delete": {
        "operationId": "OtpController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Otp"]
      }
    },
    "/phone": {
      "post": {
        "operationId": "PhoneController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreatePhoneDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Phone"]
      },
      "get": {
        "operationId": "PhoneController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Phone"]
      }
    },
    "/phone/{id}": {
      "get": {
        "operationId": "PhoneController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Phone"]
      },
      "patch": {
        "operationId": "PhoneController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePhoneDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Phone"]
      },
      "delete": {
        "operationId": "PhoneController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "tags": ["Phone"]
      }
    },
    "/email": {
      "post": {
        "operationId": "EmailController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateEmailDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Email"]
      },
      "get": {
        "operationId": "EmailController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Email"]
      }
    },
    "/email/{id}": {
      "get": {
        "operationId": "EmailController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Email"]
      },
      "patch": {
        "operationId": "EmailController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateEmailDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Email"]
      },
      "delete": {
        "operationId": "EmailController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Email"]
      }
    },
    "/email/verify/{id}": {
      "get": {
        "operationId": "EmailController_verifyEmail",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Email"]
      }
    },
    "/address": {
      "post": {
        "operationId": "AddressController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateAddressDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Address"]
      },
      "get": {
        "operationId": "AddressController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Address"]
      }
    },
    "/address/{id}": {
      "get": {
        "operationId": "AddressController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Address"]
      },
      "patch": {
        "operationId": "AddressController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAddressDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Address"]
      },
      "delete": {
        "operationId": "AddressController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Address"]
      }
    },
    "/favourite-item": {
      "post": {
        "operationId": "FavouriteItemController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFavouriteItemDto"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["FavouriteItem"]
      },
      "get": {
        "operationId": "FavouriteItemController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["FavouriteItem"]
      }
    },
    "/favourite-item/{id}": {
      "get": {
        "operationId": "FavouriteItemController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["FavouriteItem"]
      },
      "delete": {
        "operationId": "FavouriteItemController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["FavouriteItem"]
      }
    },
    "/product-image": {
      "post": {
        "operationId": "ProductImageController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateProductImageDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["ProductImage"]
      },
      "get": {
        "operationId": "ProductImageController_findAll",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["ProductImage"]
      }
    },
    "/product-image/{id}": {
      "get": {
        "operationId": "ProductImageController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["ProductImage"]
      },
      "patch": {
        "operationId": "ProductImageController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateProductImageDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["ProductImage"]
      },
      "delete": {
        "operationId": "ProductImageController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "tags": ["ProductImage"]
      }
    },
    "/product-image/{id}/set-main": {
      "patch": {
        "operationId": "ProductImageController_setMainImage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["ProductImage"]
      }
    },
    "/brand": {
      "post": {
        "operationId": "BrandController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateBrandDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Brand"]
      },
      "get": {
        "operationId": "BrandController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"]
      }
    },
    "/brand/{id}": {
      "get": {
        "operationId": "BrandController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"]
      },
      "patch": {
        "operationId": "BrandController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateBrandDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Brand"]
      },
      "delete": {
        "operationId": "BrandController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "tags": ["Brand"]
      }
    },
    "/model": {
      "post": {
        "operationId": "ModelController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateModelDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Model"]
      },
      "get": {
        "operationId": "ModelController_findAll",
        "parameters": [
          {
            "name": "brandId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Model"]
      }
    },
    "/model/brand/{id}": {
      "get": {
        "operationId": "ModelController_findAllWithBrandId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Model"]
      }
    },
    "/model/{id}": {
      "get": {
        "operationId": "ModelController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Model"]
      },
      "patch": {
        "operationId": "ModelController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateModelDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Model"]
      },
      "delete": {
        "operationId": "ModelController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "tags": ["Model"]
      }
    },
    "/color": {
      "post": {
        "operationId": "ColorController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateColorDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Color"]
      },
      "get": {
        "operationId": "ColorController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Color"]
      }
    },
    "/color/{id}": {
      "get": {
        "operationId": "ColorController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Color"]
      },
      "patch": {
        "operationId": "ColorController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateColorDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Color"]
      },
      "delete": {
        "operationId": "ColorController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Color"]
      }
    },
    "/currency": {
      "post": {
        "operationId": "CurrencyController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCurrencyDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Currency"]
      },
      "get": {
        "operationId": "CurrencyController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Currency"]
      }
    },
    "/currency/{id}": {
      "get": {
        "operationId": "CurrencyController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Currency"]
      },
      "patch": {
        "operationId": "CurrencyController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Currency"]
      },
      "delete": {
        "operationId": "CurrencyController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "tags": ["Currency"]
      }
    },
    "/admin": {
      "post": {
        "operationId": "AdminController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateAdminDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Admin"]
      },
      "get": {
        "operationId": "AdminController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Admin"]
      }
    },
    "/admin/{id}": {
      "get": {
        "operationId": "AdminController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Admin"]
      },
      "patch": {
        "operationId": "AdminController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAdminDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Admin"]
      },
      "delete": {
        "operationId": "AdminController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "tags": ["Admin"]
      }
    },
    "/admin/update-password/{id}": {
      "patch": {
        "operationId": "AdminController_updatePassword",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePasswordDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Admin"]
      }
    },
    "/block": {
      "post": {
        "operationId": "BlockController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateBlockDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Block"]
      },
      "get": {
        "operationId": "BlockController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Block"]
      }
    },
    "/block/{id}": {
      "get": {
        "operationId": "BlockController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Block"]
      },
      "patch": {
        "operationId": "BlockController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateBlockDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Block"]
      },
      "delete": {
        "operationId": "BlockController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Block"]
      }
    },
    "/payment": {
      "post": {
        "operationId": "PaymentController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreatePaymentDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Payment"]
      },
      "get": {
        "operationId": "PaymentController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"]
      }
    },
    "/payment/{id}": {
      "get": {
        "operationId": "PaymentController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"]
      },
      "patch": {
        "operationId": "PaymentController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePaymentDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"]
      },
      "delete": {
        "operationId": "PaymentController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment"]
      }
    },
    "/comment": {
      "post": {
        "operationId": "CommentController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCommentDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Comment"]
      },
      "get": {
        "operationId": "CommentController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Comment"]
      }
    },
    "/comment/product/{id}": {
      "get": {
        "operationId": "CommentController_findByProductId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Comment"]
      }
    },
    "/comment/{id}": {
      "get": {
        "operationId": "CommentController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Comment"]
      },
      "patch": {
        "operationId": "CommentController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCommentDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Comment"]
      },
      "delete": {
        "operationId": "CommentController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "tags": ["Comment"]
      }
    },
    "/payment-method": {
      "post": {
        "operationId": "PaymentMethodController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentMethodDto"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["PaymentMethod"]
      },
      "get": {
        "operationId": "PaymentMethodController_findAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["PaymentMethod"]
      }
    },
    "/payment-method/{id}": {
      "get": {
        "operationId": "PaymentMethodController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["PaymentMethod"]
      },
      "patch": {
        "operationId": "PaymentMethodController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentMethodDto"
              }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["PaymentMethod"]
      },
      "delete": {
        "operationId": "PaymentMethodController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["PaymentMethod"]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/send-otp": {
      "post": {
        "operationId": "AuthController_sendOtp",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/verify-otp": {
      "post": {
        "operationId": "AuthController_verifyOtp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OtpDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/refresh-token": {
      "post": {
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/admin/login": {
      "post": {
        "operationId": "AuthController_adminLogin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/admin/refresh-token": {
      "post": {
        "operationId": "AuthController_adminRefreshToken",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/web": {
      "get": {
        "operationId": "WebController_homePage",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Web"]
      }
    }
  },
  "info": {
    "title": "API Documentation",
    "description": "The API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" }
    },
    "schemas": {
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "User ID who owns the product"
          },
          "title": {
            "type": "string",
            "example": "iPhone 13 Pro Max",
            "description": "Product title"
          },
          "description": {
            "type": "string",
            "example": "Excellent condition, barely used",
            "description": "Product description"
          },
          "year": {
            "type": "number",
            "example": 2023,
            "description": "Product year"
          },
          "brand_id": {
            "type": "number",
            "example": 1,
            "description": "Brand ID"
          },
          "model_id": {
            "type": "number",
            "example": 1,
            "description": "Model ID"
          },
          "custom_model": {
            "type": "string",
            "example": "Custom Model Name",
            "description": "Custom model name if not in standard models"
          },
          "color_id": {
            "type": "number",
            "example": 1,
            "description": "Color ID"
          },
          "price": {
            "type": "number",
            "example": 999.99,
            "description": "Product price"
          },
          "floor_price": {
            "type": "boolean",
            "example": false,
            "description": "Whether price is negotiable"
          },
          "currency_id": {
            "type": "number",
            "example": 1,
            "description": "Currency ID"
          },
          "is_new": {
            "type": "boolean",
            "example": true,
            "description": "Whether product is new"
          },
          "has_document": {
            "type": "boolean",
            "example": true,
            "description": "Whether product has documentation"
          },
          "address_id": {
            "type": "number",
            "example": 1,
            "description": "Address ID"
          },
          "phone_id": {
            "type": "number",
            "example": 1,
            "description": "Phone ID for contact"
          },
          "storage": {
            "type": "number",
            "example": 256,
            "description": "Storage capacity in GB"
          },
          "ram": {
            "type": "number",
            "example": 8,
            "description": "RAM capacity in GB"
          }
        },
        "required": [
          "user_id",
          "title",
          "description",
          "year",
          "brand_id",
          "model_id",
          "custom_model",
          "color_id",
          "price",
          "floor_price",
          "currency_id",
          "is_new",
          "has_document",
          "address_id",
          "phone_id",
          "storage",
          "ram"
        ]
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "User ID who owns the product"
          },
          "title": {
            "type": "string",
            "example": "iPhone 13 Pro Max",
            "description": "Product title"
          },
          "description": {
            "type": "string",
            "example": "Excellent condition, barely used",
            "description": "Product description"
          },
          "year": {
            "type": "number",
            "example": 2023,
            "description": "Product year"
          },
          "brand_id": {
            "type": "number",
            "example": 1,
            "description": "Brand ID"
          },
          "model_id": {
            "type": "number",
            "example": 1,
            "description": "Model ID"
          },
          "custom_model": {
            "type": "string",
            "example": "Custom Model Name",
            "description": "Custom model name if not in standard models"
          },
          "color_id": {
            "type": "number",
            "example": 1,
            "description": "Color ID"
          },
          "price": {
            "type": "number",
            "example": 999.99,
            "description": "Product price"
          },
          "floor_price": {
            "type": "boolean",
            "example": false,
            "description": "Whether price is negotiable"
          },
          "currency_id": {
            "type": "number",
            "example": 1,
            "description": "Currency ID"
          },
          "is_new": {
            "type": "boolean",
            "example": true,
            "description": "Whether product is new"
          },
          "has_document": {
            "type": "boolean",
            "example": true,
            "description": "Whether product has documentation"
          },
          "address_id": {
            "type": "number",
            "example": 1,
            "description": "Address ID"
          },
          "phone_id": {
            "type": "number",
            "example": 1,
            "description": "Phone ID for contact"
          },
          "storage": {
            "type": "number",
            "example": 256,
            "description": "Storage capacity in GB"
          },
          "ram": {
            "type": "number",
            "example": 8,
            "description": "RAM capacity in GB"
          }
        }
      },
      "UpgradeProductDto": { "type": "object", "properties": {} },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "example": "901234567",
            "description": "User phone number"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "User password"
          },
          "name": {
            "type": "string",
            "example": "John",
            "description": "User first name"
          },
          "surname": {
            "type": "string",
            "example": "Doe",
            "description": "User last name"
          }
        },
        "required": ["phone", "password", "name", "surname"]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "example": "901234567",
            "description": "User phone number"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "User password"
          },
          "name": {
            "type": "string",
            "example": "John",
            "description": "User first name"
          },
          "surname": {
            "type": "string",
            "example": "Doe",
            "description": "User last name"
          },
          "avatar": {
            "type": "string",
            "example": "https://example.com/avatar.jpg",
            "description": "User avatar URL"
          },
          "currency_id": {
            "type": "number",
            "example": 1,
            "description": "Currency ID for user preferences"
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "description": "User active status"
          }
        }
      },
      "UpdatePasswordDto": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "example": "OldPassword123!",
            "description": "Eski parol"
          },
          "newPassword": {
            "type": "string",
            "example": "NewStrongPassword123!",
            "description": "Yangi parol"
          },
          "confirmNewPassword": {
            "type": "string",
            "example": "NewStrongPassword123!",
            "description": "Yangi parolni tasdiqlash"
          }
        },
        "required": ["oldPassword", "newPassword", "confirmNewPassword"]
      },
      "CreateOtpDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "ID of the user this OTP belongs to"
          },
          "otp": {
            "type": "string",
            "example": "123456",
            "description": "One-time password code"
          },
          "expire": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-20T12:00:00Z",
            "description": "Expiration date of the OTP"
          },
          "uuid": {
            "type": "string",
            "example": "550e8400-e29b-41d4-a716-446655440000",
            "description": "Unique identifier for the OTP"
          }
        },
        "required": ["user_id", "otp", "expire", "uuid"]
      },
      "UpdateOtpDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "ID of the user this OTP belongs to"
          },
          "otp": {
            "type": "string",
            "example": "123456",
            "description": "One-time password code"
          },
          "expire": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-20T12:00:00Z",
            "description": "Expiration date of the OTP"
          },
          "uuid": {
            "type": "string",
            "example": "550e8400-e29b-41d4-a716-446655440000",
            "description": "Unique identifier for the OTP"
          }
        }
      },
      "CreatePhoneDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "example": "901234567",
            "description": "Foydalanuvchi telefon raqami (xalqaro formatda)"
          },
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "Foydalanuvchi IDsi"
          }
        },
        "required": ["phone", "user_id"]
      },
      "UpdatePhoneDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "example": "901234567",
            "description": "Foydalanuvchi telefon raqami (xalqaro formatda)"
          },
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "Foydalanuvchi IDsi"
          }
        }
      },
      "CreateEmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com",
            "description": "Foydalanuvchi elektron pochta manzili"
          },
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "Foydalanuvchi IDsi"
          }
        },
        "required": ["email", "user_id"]
      },
      "UpdateEmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com",
            "description": "Foydalanuvchi elektron pochta manzili"
          },
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "Foydalanuvchi IDsi"
          }
        }
      },
      "CreateAddressDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Uy",
            "description": "Manzil nomi (masalan, Uy, Ish)"
          },
          "address": {
            "type": "string",
            "example": "Toshkent sh., Amir Temur ko'chasi, 1-uy",
            "description": "To'liq manzil"
          },
          "lat": {
            "type": "string",
            "example": "41.2995",
            "description": "Kenglik (Latitude)"
          },
          "long": {
            "type": "string",
            "example": "69.2401",
            "description": "Uzunlik (Longitude)"
          },
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "Foydalanuvchi IDsi"
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "description": "Manzil aktivmi?",
            "default": true
          }
        },
        "required": ["name", "address", "lat", "long", "user_id"]
      },
      "UpdateAddressDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Uy",
            "description": "Manzil nomi (masalan, Uy, Ish)"
          },
          "address": {
            "type": "string",
            "example": "Toshkent sh., Amir Temur ko'chasi, 1-uy",
            "description": "To'liq manzil"
          },
          "lat": {
            "type": "string",
            "example": "41.2995",
            "description": "Kenglik (Latitude)"
          },
          "long": {
            "type": "string",
            "example": "69.2401",
            "description": "Uzunlik (Longitude)"
          },
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "Foydalanuvchi IDsi"
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "description": "Manzil aktivmi?",
            "default": true
          }
        }
      },
      "CreateFavouriteItemDto": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "number",
            "example": 1,
            "description": "Sevimlilarga qo'shiladigan mahsulotning IDsi"
          },
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "Foydalanuvchi IDsi (ADMIN uchun, agar boshqa foydalanuvchi uchun sevimlilarga qo'shilayotgan bo'lsa). Oddiy foydalanuvchi tomonidan yuborilmasligi kerak yoki e'tiborga olinmaydi."
          }
        },
        "required": ["product_id"]
      },
      "CreateProductImageDto": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "number",
            "example": 1,
            "description": "ID of the product this image belongs to"
          },
          "is_main": {
            "type": "boolean",
            "example": true,
            "description": "Is this the main image for the product?",
            "default": false
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Product image file (jpg, jpeg, png, gif)"
          }
        },
        "required": ["product_id", "image"]
      },
      "UpdateProductImageDto": {
        "type": "object",
        "properties": {
          "is_main": {
            "type": "boolean",
            "example": true,
            "description": "Update if this is the main image for the product"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "New product image file to replace the old one (optional)"
          }
        }
      },
      "CreateBrandDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Samsung",
            "description": "Brand nomi"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Brand logotipi (fayl sifatida yuklang)"
          }
        },
        "required": ["name"]
      },
      "UpdateBrandDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Samsung",
            "description": "Brand nomi"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Brand logotipi (fayl sifatida yuklang)"
          }
        }
      },
      "CreateModelDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Galaxy S23",
            "description": "Model nomi"
          },
          "brand_id": {
            "type": "number",
            "example": 1,
            "description": "Brandning ID raqami"
          }
        },
        "required": ["name", "brand_id"]
      },
      "UpdateModelDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Galaxy S23",
            "description": "Model nomi"
          },
          "brand_id": {
            "type": "number",
            "example": 1,
            "description": "Brandning ID raqami"
          }
        }
      },
      "CreateColorDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Qizil",
            "description": "Rang nomi"
          },
          "hex": {
            "type": "string",
            "example": "#FF0000",
            "description": "Rangning HEX kodi"
          }
        },
        "required": ["name", "hex"]
      },
      "UpdateColorDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Qizil",
            "description": "Rang nomi"
          },
          "hex": {
            "type": "string",
            "example": "#FF0000",
            "description": "Rangning HEX kodi"
          }
        }
      },
      "CreateCurrencyDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "US Dollar",
            "description": "Valyuta nomi"
          },
          "symbol": {
            "type": "string",
            "example": "$",
            "description": "Valyuta belgisi"
          }
        },
        "required": ["name", "symbol"]
      },
      "CreateAdminDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John",
            "description": "Admin ismi"
          },
          "surname": {
            "type": "string",
            "example": "Doe",
            "description": "Admin familiyasi"
          },
          "birth_date": {
            "type": "string",
            "example": "1990-01-15",
            "description": "Admin tug'ilgan sanasi (YYYY-MM-DD)"
          },
          "phone": {
            "type": "string",
            "example": "901234567",
            "description": "Admin telefon raqami"
          },
          "password": {
            "type": "string",
            "example": "SecureP@ss123",
            "description": "Admin paroli"
          },
          "confirm_password": {
            "type": "string",
            "example": "SecureP@ss123",
            "description": "Parolni tasdiqlang"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "Admin avatar rasmi (fayl sifatida yuklang)"
          }
        },
        "required": [
          "name",
          "surname",
          "birth_date",
          "phone",
          "password",
          "confirm_password"
        ]
      },
      "UpdateAdminDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John",
            "description": "Admin ismi"
          },
          "surname": {
            "type": "string",
            "example": "Doe",
            "description": "Admin familiyasi"
          },
          "birth_date": {
            "type": "string",
            "example": "1990-01-15",
            "description": "Admin tug'ilgan sanasi (YYYY-MM-DD)"
          },
          "phone": {
            "type": "string",
            "example": "901234567",
            "description": "Admin telefon raqami"
          },
          "password": {
            "type": "string",
            "example": "SecureP@ss123",
            "description": "Admin paroli"
          },
          "confirm_password": {
            "type": "string",
            "example": "SecureP@ss123",
            "description": "Parolni tasdiqlang"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "Admin avatar rasmi (fayl sifatida yuklang)"
          },
          "new_password": {
            "type": "string",
            "example": "NewSecureP@ss123",
            "description": "Yangi parol (o'zgartirish uchun)"
          }
        }
      },
      "CreateBlockDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "number",
            "description": "ID of the user to be blocked"
          },
          "admin_id": {
            "type": "number",
            "description": "ID of the admin who is blocking the user"
          },
          "reason": {
            "type": "string",
            "description": "Reason for blocking the user"
          },
          "expire_date": {
            "format": "date-time",
            "type": "string",
            "description": "Expiration date of the block"
          }
        },
        "required": ["user_id", "admin_id", "reason"]
      },
      "UpdateBlockDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "number",
            "description": "ID of the user to be blocked"
          },
          "admin_id": {
            "type": "number",
            "description": "ID of the admin who is blocking the user"
          },
          "reason": {
            "type": "string",
            "description": "Reason for blocking the user"
          },
          "expire_date": {
            "format": "date-time",
            "type": "string",
            "description": "Expiration date of the block"
          }
        }
      },
      "CreatePaymentDto": {
        "type": "object",
        "properties": {
          "user_id": { "type": "number", "example": 1 },
          "amount": {
            "type": "number",
            "format": "float",
            "example": 123.45,
            "description": " float"
          },
          "payment_method_id": { "type": "number", "example": 2 }
        },
        "required": ["user_id", "amount", "payment_method_id"]
      },
      "UpdatePaymentDto": {
        "type": "object",
        "properties": {
          "user_id": { "type": "number", "example": 1 },
          "amount": {
            "type": "number",
            "format": "float",
            "example": 123.45,
            "description": " float"
          },
          "payment_method_id": { "type": "number", "example": 2 }
        }
      },
      "CreateCommentDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "Foydalanuvchi IDsi"
          },
          "product_id": {
            "type": "number",
            "example": 1,
            "description": "Mahsulot IDsi"
          },
          "text": {
            "type": "string",
            "example": "Bu ajoyib mahsulot!",
            "description": "Izoh matni"
          }
        },
        "required": ["user_id", "product_id", "text"]
      },
      "UpdateCommentDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1,
            "description": "Foydalanuvchi IDsi"
          },
          "product_id": {
            "type": "number",
            "example": 1,
            "description": "Mahsulot IDsi"
          },
          "text": {
            "type": "string",
            "example": "Bu ajoyib mahsulot!",
            "description": "Izoh matni"
          }
        }
      },
      "CreatePaymentMethodDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Card",
            "description": "Payment method"
          }
        },
        "required": ["name"]
      },
      "UpdatePaymentMethodDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Card",
            "description": "Payment method"
          }
        }
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "example": "901234567",
            "description": "User phone number"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "User password"
          },
          "name": {
            "type": "string",
            "example": "John",
            "description": "User first name"
          },
          "surname": {
            "type": "string",
            "example": "Doe",
            "description": "User last name"
          }
        },
        "required": ["phone", "password", "name", "surname"]
      },
      "OtpDto": {
        "type": "object",
        "properties": {
          "otp": {
            "type": "string",
            "example": "123456",
            "description": "One-time password"
          },
          "uuid": {
            "type": "string",
            "example": "550e8400-e29b-41d4-a716-446655440000",
            "description": "Unique identifier"
          },
          "expire": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-20T12:00:00Z",
            "description": "Expiration date"
          },
          "phone": {
            "type": "string",
            "example": "901234567",
            "description": "Phone number"
          }
        },
        "required": ["otp", "uuid", "expire", "phone"]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "example": "901234567",
            "description": "User phone number"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "User password"
          }
        },
        "required": ["phone", "password"]
      }
    }
  }
}
